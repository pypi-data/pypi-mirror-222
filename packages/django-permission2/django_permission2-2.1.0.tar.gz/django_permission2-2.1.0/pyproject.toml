[tool.poetry]
name = "django-permission2"
version = "2.1.0"
description = "A simple permission system which enable logical permission systems in Django"
authors = ["Malte Gerth <mail@malte-gerth.de>"]
license = "MIT"
readme = "README.rst"
homepage = "https://django-permission2.readthedocs.io/"
repository = "https://github.com/JanMalte/django-permission2/"
documentation = "https://django-permission2.readthedocs.io/"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 2",
    "Framework :: Django :: 2.2",
    "Framework :: Django :: 3",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
keywords = ["django","object","logical","permission"]
packages = [
    { include = "permission", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.8"
django-appconf = "^1.0.5"
Sphinx = {version = "5.3.0", optional = true}
sphinx-rtd-theme = {version = "1.2.2", optional = true}

[tool.poetry.dev-dependencies]
Django = "3.2.20"
tox = "4.6.4"
coverage = {extras = ["toml"], version = "^7.0.0"}
pre-commit = "^3.0.0"
black = "^23.0.0"
isort = "^5.10.1"

[tool.poetry.extras]
docs = ["Sphinx", "sphinx-rtd-theme"]

[tool.poetry.urls]
Tracker = "https://github.com/JanMalte/django-permission2/issues/"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[flake8]
max-line-length = 102

[isort]
profile = "black"

[tool.coverage.run]
source = ["src/permission/", "tests/"]
branch = true

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
]
