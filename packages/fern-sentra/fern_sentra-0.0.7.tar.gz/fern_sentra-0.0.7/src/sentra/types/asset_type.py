# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class AssetType(str, enum.Enum):
    """
    An enumeration.
    """

    TABLE = "TABLE"
    OBJECT = "OBJECT"
    OBJECT_GROUP = "OBJECT_GROUP"
    FILE = "FILE"
    TOPIC = "TOPIC"

    def visit(
        self,
        table: typing.Callable[[], T_Result],
        object: typing.Callable[[], T_Result],
        object_group: typing.Callable[[], T_Result],
        file: typing.Callable[[], T_Result],
        topic: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is AssetType.TABLE:
            return table()
        if self is AssetType.OBJECT:
            return object()
        if self is AssetType.OBJECT_GROUP:
            return object_group()
        if self is AssetType.FILE:
            return file()
        if self is AssetType.TOPIC:
            return topic()
