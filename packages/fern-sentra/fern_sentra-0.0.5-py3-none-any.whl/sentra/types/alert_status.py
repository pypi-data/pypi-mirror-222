# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class AlertStatus(str, enum.Enum):
    """
    An enumeration.
    """

    PENDING = "pending"
    OPENED = "opened"
    RESOLVED = "resolved"

    def visit(
        self,
        pending: typing.Callable[[], T_Result],
        opened: typing.Callable[[], T_Result],
        resolved: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is AlertStatus.PENDING:
            return pending()
        if self is AlertStatus.OPENED:
            return opened()
        if self is AlertStatus.RESOLVED:
            return resolved()
