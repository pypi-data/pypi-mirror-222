# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ProviderTypes(str, enum.Enum):
    """
    An enumeration.
    """

    OPENID = "openid"
    SAML = "saml"
    COGNITO = "cognito"
    IAM_USERS_PROVIDER = "iam_users_provider"
    EXTERNAL_AWS_ACCOUNT = "external_aws_account"
    WEB_IDENTITY = "web_identity"
    DATABASE_USERS_PROVIDER = "database_users_provider"
    UNKNOWN = "unknown"

    def visit(
        self,
        openid: typing.Callable[[], T_Result],
        saml: typing.Callable[[], T_Result],
        cognito: typing.Callable[[], T_Result],
        iam_users_provider: typing.Callable[[], T_Result],
        external_aws_account: typing.Callable[[], T_Result],
        web_identity: typing.Callable[[], T_Result],
        database_users_provider: typing.Callable[[], T_Result],
        unknown: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ProviderTypes.OPENID:
            return openid()
        if self is ProviderTypes.SAML:
            return saml()
        if self is ProviderTypes.COGNITO:
            return cognito()
        if self is ProviderTypes.IAM_USERS_PROVIDER:
            return iam_users_provider()
        if self is ProviderTypes.EXTERNAL_AWS_ACCOUNT:
            return external_aws_account()
        if self is ProviderTypes.WEB_IDENTITY:
            return web_identity()
        if self is ProviderTypes.DATABASE_USERS_PROVIDER:
            return database_users_provider()
        if self is ProviderTypes.UNKNOWN:
            return unknown()
