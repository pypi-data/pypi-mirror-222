# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .runtime_properties import RuntimeProperties


class AzureConnectorArgs(pydantic.BaseModel):
    """
    Computable Connector is a connector that provides compute abilities.
    Example: GCP, AWS, Azure,...
    """

    runtime_properties: typing.Optional[RuntimeProperties]
    tenant_id: str
    application_id: str
    application_secret: typing.Optional[str]
    installation_id: str
    sentra_mgmt_role: str
    scanner_read_role: str
    sentra_scanner_mgmt_role: str
    scanner_managed_identity: str
    resource_group: str
    remote_runner_storage_account: str
    remote_runner_results_container: str
    remote_runner_inputs_container: str

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
