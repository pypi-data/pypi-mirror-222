# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .compute_connectivity_type import ComputeConnectivityType


class ComputeConnectorPropertiesAws(pydantic.BaseModel):
    connectivity_type: typing.Optional[ComputeConnectivityType]
    region: typing.Optional[str]
    privatelink_vpce_id: typing.Optional[str]
    privatelink_account_url: typing.Optional[str]
    privatelink_account_name: typing.Optional[str]
    credentials_secret_arn: typing.Optional[str]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
