# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class AccountType(str, enum.Enum):
    """
    Dear Developer!
    So you want to add a new AccountType - very exciting.
    If this account type has compute abilities ( to start workloads ) please add the corresponding
    entry in: `ComputeType`.
    `ComputeType` is a subset of this Enum.
    """

    AWS = "AWS"
    GCP = "GCP"
    AZURE = "AZURE"
    SNOWFLAKE = "SNOWFLAKE"
    MICROSOFT_365 = "MICROSOFT365"

    def visit(
        self,
        aws: typing.Callable[[], T_Result],
        gcp: typing.Callable[[], T_Result],
        azure: typing.Callable[[], T_Result],
        snowflake: typing.Callable[[], T_Result],
        microsoft_365: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is AccountType.AWS:
            return aws()
        if self is AccountType.GCP:
            return gcp()
        if self is AccountType.AZURE:
            return azure()
        if self is AccountType.SNOWFLAKE:
            return snowflake()
        if self is AccountType.MICROSOFT_365:
            return microsoft_365()
