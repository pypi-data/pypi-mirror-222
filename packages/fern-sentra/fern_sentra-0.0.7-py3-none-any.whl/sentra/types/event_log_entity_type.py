# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class EventLogEntityType(str, enum.Enum):
    """
    An enumeration.
    """

    POLICY = "POLICY"
    ACCESS = "ACCESS"
    ASSET = "ASSET"
    STORE = "STORE"
    ALERT = "ALERT"
    ACCOUNT = "ACCOUNT"
    CLASS = "CLASS"
    INTEGRATION = "INTEGRATION"
    USER = "USER"
    TOKEN = "TOKEN"

    def visit(
        self,
        policy: typing.Callable[[], T_Result],
        access: typing.Callable[[], T_Result],
        asset: typing.Callable[[], T_Result],
        store: typing.Callable[[], T_Result],
        alert: typing.Callable[[], T_Result],
        account: typing.Callable[[], T_Result],
        class_: typing.Callable[[], T_Result],
        integration: typing.Callable[[], T_Result],
        user: typing.Callable[[], T_Result],
        token: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is EventLogEntityType.POLICY:
            return policy()
        if self is EventLogEntityType.ACCESS:
            return access()
        if self is EventLogEntityType.ASSET:
            return asset()
        if self is EventLogEntityType.STORE:
            return store()
        if self is EventLogEntityType.ALERT:
            return alert()
        if self is EventLogEntityType.ACCOUNT:
            return account()
        if self is EventLogEntityType.CLASS:
            return class_()
        if self is EventLogEntityType.INTEGRATION:
            return integration()
        if self is EventLogEntityType.USER:
            return user()
        if self is EventLogEntityType.TOKEN:
            return token()
