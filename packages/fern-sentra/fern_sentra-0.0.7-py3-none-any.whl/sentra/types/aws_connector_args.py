# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .aws_installation_mode import AwsInstallationMode
from .runtime_properties import RuntimeProperties


class AwsConnectorArgs(pydantic.BaseModel):
    runtime_properties: typing.Optional[RuntimeProperties]
    external_id: str
    role_name: typing.Optional[str]
    installation_id: typing.Optional[str]
    sentra_mgmt_role: typing.Optional[str]
    scanner_read_role: typing.Optional[str]
    installation_mode: typing.Optional[AwsInstallationMode]
    scanner_instance_profile: typing.Optional[str]
    sentra_scanner_mgmt_role: typing.Optional[str]
    remote_runner_results_bucket: typing.Optional[str]
    remote_runner_inputs_bucket: typing.Optional[str]
    installation_main_region: typing.Optional[str]
    scanner_role_name: typing.Optional[str]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
