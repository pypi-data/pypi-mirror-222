# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class Permissions(str, enum.Enum):
    """
    An enumeration.
    """

    DASHBOARD_VIEW = "DASHBOARD_VIEW"
    DATA_ACCESS_VIEW = "DATA_ACCESS_VIEW"
    DATA_STORE_VIEW = "DATA_STORE_VIEW"
    DATA_STORE_UPDATE = "DATA_STORE_UPDATE"
    DATA_ASSET_VIEW = "DATA_ASSET_VIEW"
    DATA_ASSET_UPDATE = "DATA_ASSET_UPDATE"
    USER_VIEW = "USER_VIEW"
    USER_ADD = "USER_ADD"
    USER_UPDATE = "USER_UPDATE"
    USER_DELETE = "USER_DELETE"
    ROLE_VIEW = "ROLE_VIEW"
    ROLE_ADD = "ROLE_ADD"
    ROLE_UPDATE = "ROLE_UPDATE"
    ROLE_DELETE = "ROLE_DELETE"
    CONNECTOR_VIEW = "CONNECTOR_VIEW"
    CONNECTOR_ADD = "CONNECTOR_ADD"
    CONNECTOR_UPDATE = "CONNECTOR_UPDATE"
    CONNECTOR_DELETE = "CONNECTOR_DELETE"
    INTEGRATION_VIEW = "INTEGRATION_VIEW"
    INTEGRATION_ADD = "INTEGRATION_ADD"
    INTEGRATION_UPDATE = "INTEGRATION_UPDATE"
    INTEGRATION_DELETE = "INTEGRATION_DELETE"
    POLICY_VIEW = "POLICY_VIEW"
    POLICY_ADD = "POLICY_ADD"
    POLICY_UPDATE = "POLICY_UPDATE"
    POLICY_DELETE = "POLICY_DELETE"
    ALERT_VIEW = "ALERT_VIEW"
    ALERT_ADD = "ALERT_ADD"
    ALERT_UPDATE = "ALERT_UPDATE"
    ALERT_DELETE = "ALERT_DELETE"
    DATA_CLASS_VIEW = "DATA_CLASS_VIEW"
    DATA_CLASS_UPDATE = "DATA_CLASS_UPDATE"
    DATA_CLASS_ADD = "DATA_CLASS_ADD"
    DATA_CLASS_DELETE = "DATA_CLASS_DELETE"
    AUDIT_LOG_VIEW = "AUDIT_LOG_VIEW"
    CONTEXT_LABEL_VIEW = "CONTEXT_LABEL_VIEW"
    TOKENS_VIEW = "TOKENS_VIEW"
    TOKENS_UPDATE = "TOKENS_UPDATE"
    TOKENS_ADD = "TOKENS_ADD"
    TOKENS_DELETE = "TOKENS_DELETE"
    LOGIN = "LOGIN"
    EXPORT = "EXPORT"
    SETTINGS = "SETTINGS"

    def visit(
        self,
        dashboard_view: typing.Callable[[], T_Result],
        data_access_view: typing.Callable[[], T_Result],
        data_store_view: typing.Callable[[], T_Result],
        data_store_update: typing.Callable[[], T_Result],
        data_asset_view: typing.Callable[[], T_Result],
        data_asset_update: typing.Callable[[], T_Result],
        user_view: typing.Callable[[], T_Result],
        user_add: typing.Callable[[], T_Result],
        user_update: typing.Callable[[], T_Result],
        user_delete: typing.Callable[[], T_Result],
        role_view: typing.Callable[[], T_Result],
        role_add: typing.Callable[[], T_Result],
        role_update: typing.Callable[[], T_Result],
        role_delete: typing.Callable[[], T_Result],
        connector_view: typing.Callable[[], T_Result],
        connector_add: typing.Callable[[], T_Result],
        connector_update: typing.Callable[[], T_Result],
        connector_delete: typing.Callable[[], T_Result],
        integration_view: typing.Callable[[], T_Result],
        integration_add: typing.Callable[[], T_Result],
        integration_update: typing.Callable[[], T_Result],
        integration_delete: typing.Callable[[], T_Result],
        policy_view: typing.Callable[[], T_Result],
        policy_add: typing.Callable[[], T_Result],
        policy_update: typing.Callable[[], T_Result],
        policy_delete: typing.Callable[[], T_Result],
        alert_view: typing.Callable[[], T_Result],
        alert_add: typing.Callable[[], T_Result],
        alert_update: typing.Callable[[], T_Result],
        alert_delete: typing.Callable[[], T_Result],
        data_class_view: typing.Callable[[], T_Result],
        data_class_update: typing.Callable[[], T_Result],
        data_class_add: typing.Callable[[], T_Result],
        data_class_delete: typing.Callable[[], T_Result],
        audit_log_view: typing.Callable[[], T_Result],
        context_label_view: typing.Callable[[], T_Result],
        tokens_view: typing.Callable[[], T_Result],
        tokens_update: typing.Callable[[], T_Result],
        tokens_add: typing.Callable[[], T_Result],
        tokens_delete: typing.Callable[[], T_Result],
        login: typing.Callable[[], T_Result],
        export: typing.Callable[[], T_Result],
        settings: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is Permissions.DASHBOARD_VIEW:
            return dashboard_view()
        if self is Permissions.DATA_ACCESS_VIEW:
            return data_access_view()
        if self is Permissions.DATA_STORE_VIEW:
            return data_store_view()
        if self is Permissions.DATA_STORE_UPDATE:
            return data_store_update()
        if self is Permissions.DATA_ASSET_VIEW:
            return data_asset_view()
        if self is Permissions.DATA_ASSET_UPDATE:
            return data_asset_update()
        if self is Permissions.USER_VIEW:
            return user_view()
        if self is Permissions.USER_ADD:
            return user_add()
        if self is Permissions.USER_UPDATE:
            return user_update()
        if self is Permissions.USER_DELETE:
            return user_delete()
        if self is Permissions.ROLE_VIEW:
            return role_view()
        if self is Permissions.ROLE_ADD:
            return role_add()
        if self is Permissions.ROLE_UPDATE:
            return role_update()
        if self is Permissions.ROLE_DELETE:
            return role_delete()
        if self is Permissions.CONNECTOR_VIEW:
            return connector_view()
        if self is Permissions.CONNECTOR_ADD:
            return connector_add()
        if self is Permissions.CONNECTOR_UPDATE:
            return connector_update()
        if self is Permissions.CONNECTOR_DELETE:
            return connector_delete()
        if self is Permissions.INTEGRATION_VIEW:
            return integration_view()
        if self is Permissions.INTEGRATION_ADD:
            return integration_add()
        if self is Permissions.INTEGRATION_UPDATE:
            return integration_update()
        if self is Permissions.INTEGRATION_DELETE:
            return integration_delete()
        if self is Permissions.POLICY_VIEW:
            return policy_view()
        if self is Permissions.POLICY_ADD:
            return policy_add()
        if self is Permissions.POLICY_UPDATE:
            return policy_update()
        if self is Permissions.POLICY_DELETE:
            return policy_delete()
        if self is Permissions.ALERT_VIEW:
            return alert_view()
        if self is Permissions.ALERT_ADD:
            return alert_add()
        if self is Permissions.ALERT_UPDATE:
            return alert_update()
        if self is Permissions.ALERT_DELETE:
            return alert_delete()
        if self is Permissions.DATA_CLASS_VIEW:
            return data_class_view()
        if self is Permissions.DATA_CLASS_UPDATE:
            return data_class_update()
        if self is Permissions.DATA_CLASS_ADD:
            return data_class_add()
        if self is Permissions.DATA_CLASS_DELETE:
            return data_class_delete()
        if self is Permissions.AUDIT_LOG_VIEW:
            return audit_log_view()
        if self is Permissions.CONTEXT_LABEL_VIEW:
            return context_label_view()
        if self is Permissions.TOKENS_VIEW:
            return tokens_view()
        if self is Permissions.TOKENS_UPDATE:
            return tokens_update()
        if self is Permissions.TOKENS_ADD:
            return tokens_add()
        if self is Permissions.TOKENS_DELETE:
            return tokens_delete()
        if self is Permissions.LOGIN:
            return login()
        if self is Permissions.EXPORT:
            return export()
        if self is Permissions.SETTINGS:
            return settings()
