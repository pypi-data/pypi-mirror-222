# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class IamRoleSchema(pydantic.BaseModel):
    organization_id: int
    connector_id: int
    name: str
    created_at: str
    last_activity: typing.Optional[str]
    arn: str
    access_policies_checksum: typing.Optional[str]
    assumable_by_users_count: typing.Optional[int]
    assumable_by_all_users: typing.Optional[int]
    id: str

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
