# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class PolicyRuleEntity(str, enum.Enum):
    """
    An enumeration.
    """

    STORE = "store"
    ASSET = "asset"
    SIMILAR_ASSETS = "similar_assets"
    IDENTITY = "identity"
    IAM_GROUP = "iam_group"
    IAM_ROLE = "iam_role"

    def visit(
        self,
        store: typing.Callable[[], T_Result],
        asset: typing.Callable[[], T_Result],
        similar_assets: typing.Callable[[], T_Result],
        identity: typing.Callable[[], T_Result],
        iam_group: typing.Callable[[], T_Result],
        iam_role: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is PolicyRuleEntity.STORE:
            return store()
        if self is PolicyRuleEntity.ASSET:
            return asset()
        if self is PolicyRuleEntity.SIMILAR_ASSETS:
            return similar_assets()
        if self is PolicyRuleEntity.IDENTITY:
            return identity()
        if self is PolicyRuleEntity.IAM_GROUP:
            return iam_group()
        if self is PolicyRuleEntity.IAM_ROLE:
            return iam_role()
