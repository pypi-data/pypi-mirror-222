# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class AccessPermissions(str, enum.Enum):
    """
    An enumeration.
    """

    READ = "read"
    WRITE = "write"
    PERMISSION_MANAGEMENT = "permission_management"
    METADATA = "metadata"

    def visit(
        self,
        read: typing.Callable[[], T_Result],
        write: typing.Callable[[], T_Result],
        permission_management: typing.Callable[[], T_Result],
        metadata: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is AccessPermissions.READ:
            return read()
        if self is AccessPermissions.WRITE:
            return write()
        if self is AccessPermissions.PERMISSION_MANAGEMENT:
            return permission_management()
        if self is AccessPermissions.METADATA:
            return metadata()
