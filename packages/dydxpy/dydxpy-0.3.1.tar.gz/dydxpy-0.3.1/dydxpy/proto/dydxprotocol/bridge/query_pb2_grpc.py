# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from dydxprotocol.bridge import query_pb2 as dydxprotocol_dot_bridge_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EventParams = channel.unary_unary(
                '/dydxprotocol.bridge.Query/EventParams',
                request_serializer=dydxprotocol_dot_bridge_dot_query__pb2.QueryEventParamsRequest.SerializeToString,
                response_deserializer=dydxprotocol_dot_bridge_dot_query__pb2.QueryEventParamsResponse.FromString,
                )
        self.ProposeParams = channel.unary_unary(
                '/dydxprotocol.bridge.Query/ProposeParams',
                request_serializer=dydxprotocol_dot_bridge_dot_query__pb2.QueryProposeParamsRequest.SerializeToString,
                response_deserializer=dydxprotocol_dot_bridge_dot_query__pb2.QueryProposeParamsResponse.FromString,
                )
        self.SafetyParams = channel.unary_unary(
                '/dydxprotocol.bridge.Query/SafetyParams',
                request_serializer=dydxprotocol_dot_bridge_dot_query__pb2.QuerySafetyParamsRequest.SerializeToString,
                response_deserializer=dydxprotocol_dot_bridge_dot_query__pb2.QuerySafetyParamsResponse.FromString,
                )
        self.NextAcknowledgedEventId = channel.unary_unary(
                '/dydxprotocol.bridge.Query/NextAcknowledgedEventId',
                request_serializer=dydxprotocol_dot_bridge_dot_query__pb2.QueryNextAcknowledgedEventIdRequest.SerializeToString,
                response_deserializer=dydxprotocol_dot_bridge_dot_query__pb2.QueryNextAcknowledgedEventIdResponse.FromString,
                )
        self.NextRecognizedEventId = channel.unary_unary(
                '/dydxprotocol.bridge.Query/NextRecognizedEventId',
                request_serializer=dydxprotocol_dot_bridge_dot_query__pb2.QueryNextRecognizedEventIdRequest.SerializeToString,
                response_deserializer=dydxprotocol_dot_bridge_dot_query__pb2.QueryNextRecognizedEventIdResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service.
    """

    def EventParams(self, request, context):
        """Queries the EventParams.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProposeParams(self, request, context):
        """Queries the ProposeParams.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SafetyParams(self, request, context):
        """Queries the SafetyParams.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NextAcknowledgedEventId(self, request, context):
        """Queries the NextAcknowledgedEventId.
        An "acknowledged" event is one that is in-consensus and has been stored
        in-state.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NextRecognizedEventId(self, request, context):
        """Queries the NextRecognizedEventId.
        A "recognized" event is one that is finalized on the Ethereum blockchain
        and has been identified by the queried node. It is not yet in-consensus.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'EventParams': grpc.unary_unary_rpc_method_handler(
                    servicer.EventParams,
                    request_deserializer=dydxprotocol_dot_bridge_dot_query__pb2.QueryEventParamsRequest.FromString,
                    response_serializer=dydxprotocol_dot_bridge_dot_query__pb2.QueryEventParamsResponse.SerializeToString,
            ),
            'ProposeParams': grpc.unary_unary_rpc_method_handler(
                    servicer.ProposeParams,
                    request_deserializer=dydxprotocol_dot_bridge_dot_query__pb2.QueryProposeParamsRequest.FromString,
                    response_serializer=dydxprotocol_dot_bridge_dot_query__pb2.QueryProposeParamsResponse.SerializeToString,
            ),
            'SafetyParams': grpc.unary_unary_rpc_method_handler(
                    servicer.SafetyParams,
                    request_deserializer=dydxprotocol_dot_bridge_dot_query__pb2.QuerySafetyParamsRequest.FromString,
                    response_serializer=dydxprotocol_dot_bridge_dot_query__pb2.QuerySafetyParamsResponse.SerializeToString,
            ),
            'NextAcknowledgedEventId': grpc.unary_unary_rpc_method_handler(
                    servicer.NextAcknowledgedEventId,
                    request_deserializer=dydxprotocol_dot_bridge_dot_query__pb2.QueryNextAcknowledgedEventIdRequest.FromString,
                    response_serializer=dydxprotocol_dot_bridge_dot_query__pb2.QueryNextAcknowledgedEventIdResponse.SerializeToString,
            ),
            'NextRecognizedEventId': grpc.unary_unary_rpc_method_handler(
                    servicer.NextRecognizedEventId,
                    request_deserializer=dydxprotocol_dot_bridge_dot_query__pb2.QueryNextRecognizedEventIdRequest.FromString,
                    response_serializer=dydxprotocol_dot_bridge_dot_query__pb2.QueryNextRecognizedEventIdResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dydxprotocol.bridge.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service.
    """

    @staticmethod
    def EventParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dydxprotocol.bridge.Query/EventParams',
            dydxprotocol_dot_bridge_dot_query__pb2.QueryEventParamsRequest.SerializeToString,
            dydxprotocol_dot_bridge_dot_query__pb2.QueryEventParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProposeParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dydxprotocol.bridge.Query/ProposeParams',
            dydxprotocol_dot_bridge_dot_query__pb2.QueryProposeParamsRequest.SerializeToString,
            dydxprotocol_dot_bridge_dot_query__pb2.QueryProposeParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SafetyParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dydxprotocol.bridge.Query/SafetyParams',
            dydxprotocol_dot_bridge_dot_query__pb2.QuerySafetyParamsRequest.SerializeToString,
            dydxprotocol_dot_bridge_dot_query__pb2.QuerySafetyParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NextAcknowledgedEventId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dydxprotocol.bridge.Query/NextAcknowledgedEventId',
            dydxprotocol_dot_bridge_dot_query__pb2.QueryNextAcknowledgedEventIdRequest.SerializeToString,
            dydxprotocol_dot_bridge_dot_query__pb2.QueryNextAcknowledgedEventIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NextRecognizedEventId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dydxprotocol.bridge.Query/NextRecognizedEventId',
            dydxprotocol_dot_bridge_dot_query__pb2.QueryNextRecognizedEventIdRequest.SerializeToString,
            dydxprotocol_dot_bridge_dot_query__pb2.QueryNextRecognizedEventIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
