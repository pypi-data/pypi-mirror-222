# coding: utf-8
# Copyright (c) 2016, 2023, Oracle and/or its affiliates.  All rights reserved.
# This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
# NOTE: This class is auto generated by OracleSDKGenerator. DO NOT EDIT. API Version: v1

from __future__ import print_function
import click
import oci  # noqa: F401
import six  # noqa: F401
import sys  # noqa: F401
from oci_cli.cli_root import cli
from oci_cli import cli_constants  # noqa: F401
from oci_cli import cli_util
from oci_cli import json_skeleton_utils
from oci_cli import custom_types  # noqa: F401
from oci_cli.aliasing import CommandGroupWithAlias


@cli.command(cli_util.override('identity_domains.identity_domains_root_group.command_name', 'identity-domains'), cls=CommandGroupWithAlias, help=cli_util.override('identity_domains.identity_domains_root_group.help', """Use the Identity Domains API to manage resources within an identity domain, for example, users, dynamic resource groups, groups, and identity providers. For information about managing resources within identity domains, see [Identity and Access Management (with identity domains)]. This REST API is SCIM compliant.
Use the table of contents and search tool to explore the Identity Domains API."""), short_help=cli_util.override('identity_domains.identity_domains_root_group.short_help', """Identity Domains API"""))
@cli_util.help_option_group
def identity_domains_root_group():
    pass


@click.command(cli_util.override('identity_domains.my_user_db_credential_group.command_name', 'my-user-db-credential'), cls=CommandGroupWithAlias, help="""User's Db Credential""")
@cli_util.help_option_group
def my_user_db_credential_group():
    pass


@click.command(cli_util.override('identity_domains.authentication_factor_settings_group.command_name', 'authentication-factor-settings'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def authentication_factor_settings_group():
    pass


@click.command(cli_util.override('identity_domains.dynamic_resource_groups_group.command_name', 'dynamic-resource-groups'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def dynamic_resource_groups_group():
    pass


@click.command(cli_util.override('identity_domains.o_auth2_client_credential_group.command_name', 'o-auth2-client-credential'), cls=CommandGroupWithAlias, help="""User's oauth2 client credential""")
@cli_util.help_option_group
def o_auth2_client_credential_group():
    pass


@click.command(cli_util.override('identity_domains.my_o_auth2_client_credentials_group.command_name', 'my-o-auth2-client-credentials'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def my_o_auth2_client_credentials_group():
    pass


@click.command(cli_util.override('identity_domains.my_smtp_credential_group.command_name', 'my-smtp-credential'), cls=CommandGroupWithAlias, help="""User's smtp credential""")
@cli_util.help_option_group
def my_smtp_credential_group():
    pass


@click.command(cli_util.override('identity_domains.my_api_keys_group.command_name', 'my-api-keys'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def my_api_keys_group():
    pass


@click.command(cli_util.override('identity_domains.my_authentication_factors_remover_group.command_name', 'my-authentication-factors-remover'), cls=CommandGroupWithAlias, help="""This schema defines the attributes of Authentication Factors Remover call.""")
@cli_util.help_option_group
def my_authentication_factors_remover_group():
    pass


@click.command(cli_util.override('identity_domains.dynamic_resource_group_group.command_name', 'dynamic-resource-group'), cls=CommandGroupWithAlias, help="""Schema for DynamicResourceGroup resource.""")
@cli_util.help_option_group
def dynamic_resource_group_group():
    pass


@click.command(cli_util.override('identity_domains.user_db_credentials_group.command_name', 'user-db-credentials'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def user_db_credentials_group():
    pass


@click.command(cli_util.override('identity_domains.my_user_db_credentials_group.command_name', 'my-user-db-credentials'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def my_user_db_credentials_group():
    pass


@click.command(cli_util.override('identity_domains.identity_providers_group.command_name', 'identity-providers'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def identity_providers_group():
    pass


@click.command(cli_util.override('identity_domains.me_group.command_name', 'me'), cls=CommandGroupWithAlias, help="""User Account""")
@cli_util.help_option_group
def me_group():
    pass


@click.command(cli_util.override('identity_domains.user_db_credential_group.command_name', 'user-db-credential'), cls=CommandGroupWithAlias, help="""User's Db Credential""")
@cli_util.help_option_group
def user_db_credential_group():
    pass


@click.command(cli_util.override('identity_domains.user_password_changer_group.command_name', 'user-password-changer'), cls=CommandGroupWithAlias, help="""Schema to handle userpassword change by administrator.""")
@cli_util.help_option_group
def user_password_changer_group():
    pass


@click.command(cli_util.override('identity_domains.group_group.command_name', 'group'), cls=CommandGroupWithAlias, help="""Group resource.""")
@cli_util.help_option_group
def group_group():
    pass


@click.command(cli_util.override('identity_domains.my_device_group.command_name', 'my-device'), cls=CommandGroupWithAlias, help="""Device Resource.""")
@cli_util.help_option_group
def my_device_group():
    pass


@click.command(cli_util.override('identity_domains.authentication_factors_remover_group.command_name', 'authentication-factors-remover'), cls=CommandGroupWithAlias, help="""This schema defines the attributes of Authentication Factors Remover call.""")
@cli_util.help_option_group
def authentication_factors_remover_group():
    pass


@click.command(cli_util.override('identity_domains.users_group.command_name', 'users'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def users_group():
    pass


@click.command(cli_util.override('identity_domains.my_smtp_credentials_group.command_name', 'my-smtp-credentials'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def my_smtp_credentials_group():
    pass


@click.command(cli_util.override('identity_domains.my_o_auth2_client_credential_group.command_name', 'my-o-auth2-client-credential'), cls=CommandGroupWithAlias, help="""User's oauth2 client credential""")
@cli_util.help_option_group
def my_o_auth2_client_credential_group():
    pass


@click.command(cli_util.override('identity_domains.me_password_changer_group.command_name', 'me-password-changer'), cls=CommandGroupWithAlias, help="""Schema to handle userpassword change by self.""")
@cli_util.help_option_group
def me_password_changer_group():
    pass


@click.command(cli_util.override('identity_domains.authentication_factor_setting_group.command_name', 'authentication-factor-setting'), cls=CommandGroupWithAlias, help="""Multi Factor Authentication Settings for Tenant""")
@cli_util.help_option_group
def authentication_factor_setting_group():
    pass


@click.command(cli_util.override('identity_domains.my_authentication_factor_validator_group.command_name', 'my-authentication-factor-validator'), cls=CommandGroupWithAlias, help="""Validate any given Authentication Factor""")
@cli_util.help_option_group
def my_authentication_factor_validator_group():
    pass


@click.command(cli_util.override('identity_domains.my_customer_secret_key_group.command_name', 'my-customer-secret-key'), cls=CommandGroupWithAlias, help="""User's customer secret key""")
@cli_util.help_option_group
def my_customer_secret_key_group():
    pass


@click.command(cli_util.override('identity_domains.my_authentication_factor_initiator_group.command_name', 'my-authentication-factor-initiator'), cls=CommandGroupWithAlias, help="""This schema defines the attributes of Initiator call.""")
@cli_util.help_option_group
def my_authentication_factor_initiator_group():
    pass


@click.command(cli_util.override('identity_domains.password_policies_group.command_name', 'password-policies'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def password_policies_group():
    pass


@click.command(cli_util.override('identity_domains.customer_secret_keys_group.command_name', 'customer-secret-keys'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def customer_secret_keys_group():
    pass


@click.command(cli_util.override('identity_domains.user_status_changer_group.command_name', 'user-status-changer'), cls=CommandGroupWithAlias, help="""Schema to handle user status change by administrator.""")
@cli_util.help_option_group
def user_status_changer_group():
    pass


@click.command(cli_util.override('identity_domains.my_auth_tokens_group.command_name', 'my-auth-tokens'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def my_auth_tokens_group():
    pass


@click.command(cli_util.override('identity_domains.my_customer_secret_keys_group.command_name', 'my-customer-secret-keys'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def my_customer_secret_keys_group():
    pass


@click.command(cli_util.override('identity_domains.user_password_resetter_group.command_name', 'user-password-resetter'), cls=CommandGroupWithAlias, help="""Schema to handle userpassword reset by administrator.""")
@cli_util.help_option_group
def user_password_resetter_group():
    pass


@click.command(cli_util.override('identity_domains.my_support_accounts_group.command_name', 'my-support-accounts'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def my_support_accounts_group():
    pass


@click.command(cli_util.override('identity_domains.kmsi_setting_group.command_name', 'kmsi-setting'), cls=CommandGroupWithAlias, help="""Kmsi Settings schema""")
@cli_util.help_option_group
def kmsi_setting_group():
    pass


@click.command(cli_util.override('identity_domains.smtp_credential_group.command_name', 'smtp-credential'), cls=CommandGroupWithAlias, help="""User's smtp credential""")
@cli_util.help_option_group
def smtp_credential_group():
    pass


@click.command(cli_util.override('identity_domains.my_trusted_user_agent_group.command_name', 'my-trusted-user-agent'), cls=CommandGroupWithAlias, help="""This schema defines the attributes of Trusted User Agents owned by users. Multi-Factor Authentication uses Trusted User Agents to authenticate users.  A User Agent is software application that a user uses to issue requests.\r    For example, a User Agent could be a particular browser (possibly one of several executing on a desktop or laptop) or a particular mobile application (again, one of several executing on a particular mobile device). \r    A User Agent is trusted once the Multi-Factor Authentication has verified it in some way.""")
@cli_util.help_option_group
def my_trusted_user_agent_group():
    pass


@click.command(cli_util.override('identity_domains.my_api_key_group.command_name', 'my-api-key'), cls=CommandGroupWithAlias, help="""User's api key""")
@cli_util.help_option_group
def my_api_key_group():
    pass


@click.command(cli_util.override('identity_domains.api_keys_group.command_name', 'api-keys'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def api_keys_group():
    pass


@click.command(cli_util.override('identity_domains.kmsi_settings_group.command_name', 'kmsi-settings'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def kmsi_settings_group():
    pass


@click.command(cli_util.override('identity_domains.my_trusted_user_agents_group.command_name', 'my-trusted-user-agents'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def my_trusted_user_agents_group():
    pass


@click.command(cli_util.override('identity_domains.customer_secret_key_group.command_name', 'customer-secret-key'), cls=CommandGroupWithAlias, help="""User's customer secret key""")
@cli_util.help_option_group
def customer_secret_key_group():
    pass


@click.command(cli_util.override('identity_domains.my_auth_token_group.command_name', 'my-auth-token'), cls=CommandGroupWithAlias, help="""User's Auth token resource""")
@cli_util.help_option_group
def my_auth_token_group():
    pass


@click.command(cli_util.override('identity_domains.groups_group.command_name', 'groups'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def groups_group():
    pass


@click.command(cli_util.override('identity_domains.o_auth2_client_credentials_group.command_name', 'o-auth2-client-credentials'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def o_auth2_client_credentials_group():
    pass


@click.command(cli_util.override('identity_domains.user_capabilities_changer_group.command_name', 'user-capabilities-changer'), cls=CommandGroupWithAlias, help="""User Capabilities Changer""")
@cli_util.help_option_group
def user_capabilities_changer_group():
    pass


@click.command(cli_util.override('identity_domains.my_support_account_group.command_name', 'my-support-account'), cls=CommandGroupWithAlias, help="""Support Provider Account""")
@cli_util.help_option_group
def my_support_account_group():
    pass


@click.command(cli_util.override('identity_domains.my_devices_group.command_name', 'my-devices'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def my_devices_group():
    pass


@click.command(cli_util.override('identity_domains.identity_provider_group.command_name', 'identity-provider'), cls=CommandGroupWithAlias, help="""Federation trusted partner Identity Provider""")
@cli_util.help_option_group
def identity_provider_group():
    pass


@click.command(cli_util.override('identity_domains.password_policy_group.command_name', 'password-policy'), cls=CommandGroupWithAlias, help="""PasswordPolicy resource.""")
@cli_util.help_option_group
def password_policy_group():
    pass


@click.command(cli_util.override('identity_domains.auth_tokens_group.command_name', 'auth-tokens'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def auth_tokens_group():
    pass


@click.command(cli_util.override('identity_domains.api_key_group.command_name', 'api-key'), cls=CommandGroupWithAlias, help="""User's api key""")
@cli_util.help_option_group
def api_key_group():
    pass


@click.command(cli_util.override('identity_domains.my_groups_group.command_name', 'my-groups'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def my_groups_group():
    pass


@click.command(cli_util.override('identity_domains.smtp_credentials_group.command_name', 'smtp-credentials'), cls=CommandGroupWithAlias, help="""The SCIM protocol defines a standard set of query parameters that can be used to filter, sort, and paginate to return zero or more resources in a query response. Queries MAY be made against a single resource or a resource type endpoint (e.g., /Users), or the service provider Base URI.""")
@cli_util.help_option_group
def smtp_credentials_group():
    pass


@click.command(cli_util.override('identity_domains.auth_token_group.command_name', 'auth-token'), cls=CommandGroupWithAlias, help="""User's Auth token resource""")
@cli_util.help_option_group
def auth_token_group():
    pass


@click.command(cli_util.override('identity_domains.user_group.command_name', 'user'), cls=CommandGroupWithAlias, help="""User Account""")
@cli_util.help_option_group
def user_group():
    pass


identity_domains_root_group.add_command(my_user_db_credential_group)
identity_domains_root_group.add_command(authentication_factor_settings_group)
identity_domains_root_group.add_command(dynamic_resource_groups_group)
identity_domains_root_group.add_command(o_auth2_client_credential_group)
identity_domains_root_group.add_command(my_o_auth2_client_credentials_group)
identity_domains_root_group.add_command(my_smtp_credential_group)
identity_domains_root_group.add_command(my_api_keys_group)
identity_domains_root_group.add_command(my_authentication_factors_remover_group)
identity_domains_root_group.add_command(dynamic_resource_group_group)
identity_domains_root_group.add_command(user_db_credentials_group)
identity_domains_root_group.add_command(my_user_db_credentials_group)
identity_domains_root_group.add_command(identity_providers_group)
identity_domains_root_group.add_command(me_group)
identity_domains_root_group.add_command(user_db_credential_group)
identity_domains_root_group.add_command(user_password_changer_group)
identity_domains_root_group.add_command(group_group)
identity_domains_root_group.add_command(my_device_group)
identity_domains_root_group.add_command(authentication_factors_remover_group)
identity_domains_root_group.add_command(users_group)
identity_domains_root_group.add_command(my_smtp_credentials_group)
identity_domains_root_group.add_command(my_o_auth2_client_credential_group)
identity_domains_root_group.add_command(me_password_changer_group)
identity_domains_root_group.add_command(authentication_factor_setting_group)
identity_domains_root_group.add_command(my_authentication_factor_validator_group)
identity_domains_root_group.add_command(my_customer_secret_key_group)
identity_domains_root_group.add_command(my_authentication_factor_initiator_group)
identity_domains_root_group.add_command(password_policies_group)
identity_domains_root_group.add_command(customer_secret_keys_group)
identity_domains_root_group.add_command(user_status_changer_group)
identity_domains_root_group.add_command(my_auth_tokens_group)
identity_domains_root_group.add_command(my_customer_secret_keys_group)
identity_domains_root_group.add_command(user_password_resetter_group)
identity_domains_root_group.add_command(my_support_accounts_group)
identity_domains_root_group.add_command(kmsi_setting_group)
identity_domains_root_group.add_command(smtp_credential_group)
identity_domains_root_group.add_command(my_trusted_user_agent_group)
identity_domains_root_group.add_command(my_api_key_group)
identity_domains_root_group.add_command(api_keys_group)
identity_domains_root_group.add_command(kmsi_settings_group)
identity_domains_root_group.add_command(my_trusted_user_agents_group)
identity_domains_root_group.add_command(customer_secret_key_group)
identity_domains_root_group.add_command(my_auth_token_group)
identity_domains_root_group.add_command(groups_group)
identity_domains_root_group.add_command(o_auth2_client_credentials_group)
identity_domains_root_group.add_command(user_capabilities_changer_group)
identity_domains_root_group.add_command(my_support_account_group)
identity_domains_root_group.add_command(my_devices_group)
identity_domains_root_group.add_command(identity_provider_group)
identity_domains_root_group.add_command(password_policy_group)
identity_domains_root_group.add_command(auth_tokens_group)
identity_domains_root_group.add_command(api_key_group)
identity_domains_root_group.add_command(my_groups_group)
identity_domains_root_group.add_command(smtp_credentials_group)
identity_domains_root_group.add_command(auth_token_group)
identity_domains_root_group.add_command(user_group)


@api_key_group.command(name=cli_util.override('identity_domains.create_api_key.command_name', 'create'), help=u"""Add a user's api key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createApiKey)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--fingerprint', required=True, help=u"""Fingerprint

**Added In:** 2010242156

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - type: string  - mutability: readOnly  - required: true  - returned: default""")
@cli_util.option('--key', required=True, help=u"""Key

**Added In:** 2010242156

**SCIM++ Properties:**  - caseExact: true  - idcsPii: true  - type: string  - mutability: immutable  - required: true  - returned: default""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--description', help=u"""Description

**Added In:** 2101262133

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readWrite  - required: false  - returned: default""")
@cli_util.option('--user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionself-change-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'ApiKeyUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'ApiKeyUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}}, output_type={'module': 'identity_domains', 'class': 'ApiKey'})
@cli_util.wrap_exceptions
def create_api_key(ctx, from_json, schemas, fingerprint, key, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, description, user, urnietfparamsscimschemasoracleidcsextensionself_change_user):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['fingerprint'] = fingerprint
    _details['key'] = key

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if description is not None:
        _details['description'] = description

    if user is not None:
        _details['user'] = cli_util.parse_json_parameter("user", user)

    if urnietfparamsscimschemasoracleidcsextensionself_change_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:selfChange:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionself_change_user", urnietfparamsscimschemasoracleidcsextensionself_change_user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_api_key(
        api_key=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@auth_token_group.command(name=cli_util.override('identity_domains.create_auth_token.command_name', 'create'), help=u"""Add a user's auth token

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createAuthToken)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--description', help=u"""Description

**Added In:** 2010242156

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readWrite  - required: false  - returned: default""")
@cli_util.option('--status', type=custom_types.CliCaseInsensitiveChoice(["ACTIVE", "INACTIVE"]), help=u"""User credential status

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: never  - type: string  - uniqueness: none""")
@cli_util.option('--expires-on', help=u"""User credential expires on

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: dateTime  - uniqueness: none""")
@cli_util.option('--user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionself-change-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'AuthTokenUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'AuthTokenUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}}, output_type={'module': 'identity_domains', 'class': 'AuthToken'})
@cli_util.wrap_exceptions
def create_auth_token(ctx, from_json, schemas, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, description, status, expires_on, user, urnietfparamsscimschemasoracleidcsextensionself_change_user):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if description is not None:
        _details['description'] = description

    if status is not None:
        _details['status'] = status

    if expires_on is not None:
        _details['expiresOn'] = expires_on

    if user is not None:
        _details['user'] = cli_util.parse_json_parameter("user", user)

    if urnietfparamsscimschemasoracleidcsextensionself_change_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:selfChange:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionself_change_user", urnietfparamsscimschemasoracleidcsextensionself_change_user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_auth_token(
        auth_token=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@authentication_factors_remover_group.command(name=cli_util.override('identity_domains.create_authentication_factors_remover.command_name', 'create'), help=u"""Remove All Authentication Factor Channels for a User

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createAuthenticationFactorsRemover)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--user', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--type', type=custom_types.CliCaseInsensitiveChoice(["KMSI", "MFA", "ACCOUNTRECOVERY", "ALL"]), help=u"""Specifies the type of factors to remove. Either MFA factors or AccountRecovery factors or All factors

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: readWrite  - returned: default  - uniqueness: none  - idcsSearchable: false""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'AuthenticationFactorsRemoverUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'AuthenticationFactorsRemoverUser'}}, output_type={'module': 'identity_domains', 'class': 'AuthenticationFactorsRemover'})
@cli_util.wrap_exceptions
def create_authentication_factors_remover(ctx, from_json, schemas, user, authorization, resource_type_schema_version, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, type):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['user'] = cli_util.parse_json_parameter("user", user)

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if type is not None:
        _details['type'] = type

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_authentication_factors_remover(
        authentication_factors_remover=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@customer_secret_key_group.command(name=cli_util.override('identity_domains.create_customer_secret_key.command_name', 'create'), help=u"""Add a user's customer secret key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createCustomerSecretKey)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--display-name', help=u"""Display Name

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readWrite  - required: false  - returned: default""")
@cli_util.option('--description', help=u"""Description

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readWrite  - required: false  - returned: default""")
@cli_util.option('--status', type=custom_types.CliCaseInsensitiveChoice(["ACTIVE", "INACTIVE"]), help=u"""User credential status

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: never  - type: string  - uniqueness: none""")
@cli_util.option('--expires-on', help=u"""User credential expires on

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: dateTime  - uniqueness: none""")
@cli_util.option('--access-key', help=u"""Access key

**SCIM++ Properties:**  - caseExact: true  - type: string  - mutability: readOnly  - required: false  - returned: default""")
@cli_util.option('--user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionself-change-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'CustomerSecretKeyUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'CustomerSecretKeyUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}}, output_type={'module': 'identity_domains', 'class': 'CustomerSecretKey'})
@cli_util.wrap_exceptions
def create_customer_secret_key(ctx, from_json, schemas, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, display_name, description, status, expires_on, access_key, user, urnietfparamsscimschemasoracleidcsextensionself_change_user):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if display_name is not None:
        _details['displayName'] = display_name

    if description is not None:
        _details['description'] = description

    if status is not None:
        _details['status'] = status

    if expires_on is not None:
        _details['expiresOn'] = expires_on

    if access_key is not None:
        _details['accessKey'] = access_key

    if user is not None:
        _details['user'] = cli_util.parse_json_parameter("user", user)

    if urnietfparamsscimschemasoracleidcsextensionself_change_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:selfChange:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionself_change_user", urnietfparamsscimschemasoracleidcsextensionself_change_user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_customer_secret_key(
        customer_secret_key=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@dynamic_resource_group_group.command(name=cli_util.override('identity_domains.create_dynamic_resource_group.command_name', 'create'), help=u"""Create a DynamicResourceGroup

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createDynamicResourceGroup)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--matching-rule', required=True, help=u"""Store as a string the matching-rule for this Dynamic Resource Group. This may match any number of Apps in this Domain, as well as matching any number of OCI resources that are not in any Domain but that are in the OCI Compartment that contains this Domain.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: true  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--display-name', required=True, help=u"""User-friendly, mutable identifier

**SCIM++ Properties:**  - idcsCsvAttributeName: Display Name  - idcsCsvAttributeNameMappings: [[columnHeaderName:Name, deprecatedColumnHeaderName:Display Name]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: true  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--description', help=u"""text that explains the purpose of this Dynamic Resource Group

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Description  - idcsCsvAttributeNameMappings: [[columnHeaderName:Description]]  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: always  - type: string  - uniqueness: none""")
@cli_util.option('--grants', type=custom_types.CLI_COMPLEX_TYPE, help=u"""Grants assigned to group

**SCIM++ Properties:**  - idcsAddedSinceVersion: 3  - idcsSearchable: true  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type DynamicResourceGroupGrants.  For documentation on DynamicResourceGroupGrants please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/DynamicResourceGroupGrants.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--dynamic-group-app-roles', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of appRoles that are currently granted to this Dynamic Resource Group.  The Identity service will assert these AppRoles for any resource that satisfies the matching-rule of this DynamicResourceGroup.

**SCIM++ Properties:**  - caseExact: false  - idcsCompositeKey: [value]  - idcsSearchable: true  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type DynamicResourceGroupDynamicGroupAppRoles.  For documentation on DynamicResourceGroupDynamicGroupAppRoles please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/DynamicResourceGroupDynamicGroupAppRoles.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextension-oci-tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'grants': {'module': 'identity_domains', 'class': 'list[DynamicResourceGroupGrants]'}, 'dynamic-group-app-roles': {'module': 'identity_domains', 'class': 'list[DynamicResourceGroupDynamicGroupAppRoles]'}, 'urnietfparamsscimschemasoracleidcsextension-oci-tags': {'module': 'identity_domains', 'class': 'ExtensionOCITags'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'grants': {'module': 'identity_domains', 'class': 'list[DynamicResourceGroupGrants]'}, 'dynamic-group-app-roles': {'module': 'identity_domains', 'class': 'list[DynamicResourceGroupDynamicGroupAppRoles]'}, 'urnietfparamsscimschemasoracleidcsextension-oci-tags': {'module': 'identity_domains', 'class': 'ExtensionOCITags'}}, output_type={'module': 'identity_domains', 'class': 'DynamicResourceGroup'})
@cli_util.wrap_exceptions
def create_dynamic_resource_group(ctx, from_json, schemas, matching_rule, display_name, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, description, grants, dynamic_group_app_roles, urnietfparamsscimschemasoracleidcsextension_oci_tags):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['matchingRule'] = matching_rule
    _details['displayName'] = display_name

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if description is not None:
        _details['description'] = description

    if grants is not None:
        _details['grants'] = cli_util.parse_json_parameter("grants", grants)

    if dynamic_group_app_roles is not None:
        _details['dynamicGroupAppRoles'] = cli_util.parse_json_parameter("dynamic_group_app_roles", dynamic_group_app_roles)

    if urnietfparamsscimschemasoracleidcsextension_oci_tags is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:OCITags'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextension_oci_tags", urnietfparamsscimschemasoracleidcsextension_oci_tags)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_dynamic_resource_group(
        dynamic_resource_group=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@group_group.command(name=cli_util.override('identity_domains.create_group.command_name', 'create'), help=u"""Create a Group

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createGroup)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--display-name', required=True, help=u"""Group display name

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Display Name  - idcsCsvAttributeNameMappings: [[columnHeaderName:Name, deprecatedColumnHeaderName:Display Name]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: true  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--external-id', help=u"""An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--non-unique-display-name', help=u"""A human readable name for Group as defined by the Service Consumer

**Added In:** 2011192329

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Non-Unique Display Name  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: always  - type: string""")
@cli_util.option('--members', type=custom_types.CLI_COMPLEX_TYPE, help=u"""Group members - when requesting members attribute, a max of 10,000 members will be returned in a single request. It is recommended to use startIndex and count to return members in pages instead of in a single response, eg : #attributes=members[startIndex=1%26count=10]

**SCIM++ Properties:**  - caseExact: false  - idcsCompositeKey: [value]  - idcsCsvAttributeNameMappings: [[columnHeaderName:User Members, mapsTo:members[User].value, multiValueDelimiter:;]]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - idcsPaginateResponse: true  - type: complex  - uniqueness: none

This option is a JSON list with items of type GroupMembers.  For documentation on GroupMembers please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/GroupMembers.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensiongroup-group', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionposix-group', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionrequestable-group', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensiondbcs-group', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensiondynamic-group', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextension-oci-tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'members': {'module': 'identity_domains', 'class': 'list[GroupMembers]'}, 'urnietfparamsscimschemasoracleidcsextensiongroup-group': {'module': 'identity_domains', 'class': 'ExtensionGroupGroup'}, 'urnietfparamsscimschemasoracleidcsextensionposix-group': {'module': 'identity_domains', 'class': 'ExtensionPosixGroup'}, 'urnietfparamsscimschemasoracleidcsextensionrequestable-group': {'module': 'identity_domains', 'class': 'ExtensionRequestableGroup'}, 'urnietfparamsscimschemasoracleidcsextensiondbcs-group': {'module': 'identity_domains', 'class': 'ExtensionDbcsGroup'}, 'urnietfparamsscimschemasoracleidcsextensiondynamic-group': {'module': 'identity_domains', 'class': 'ExtensionDynamicGroup'}, 'urnietfparamsscimschemasoracleidcsextension-oci-tags': {'module': 'identity_domains', 'class': 'ExtensionOCITags'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'members': {'module': 'identity_domains', 'class': 'list[GroupMembers]'}, 'urnietfparamsscimschemasoracleidcsextensiongroup-group': {'module': 'identity_domains', 'class': 'ExtensionGroupGroup'}, 'urnietfparamsscimschemasoracleidcsextensionposix-group': {'module': 'identity_domains', 'class': 'ExtensionPosixGroup'}, 'urnietfparamsscimschemasoracleidcsextensionrequestable-group': {'module': 'identity_domains', 'class': 'ExtensionRequestableGroup'}, 'urnietfparamsscimschemasoracleidcsextensiondbcs-group': {'module': 'identity_domains', 'class': 'ExtensionDbcsGroup'}, 'urnietfparamsscimschemasoracleidcsextensiondynamic-group': {'module': 'identity_domains', 'class': 'ExtensionDynamicGroup'}, 'urnietfparamsscimschemasoracleidcsextension-oci-tags': {'module': 'identity_domains', 'class': 'ExtensionOCITags'}}, output_type={'module': 'identity_domains', 'class': 'Group'})
@cli_util.wrap_exceptions
def create_group(ctx, from_json, schemas, display_name, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, external_id, non_unique_display_name, members, urnietfparamsscimschemasoracleidcsextensiongroup_group, urnietfparamsscimschemasoracleidcsextensionposix_group, urnietfparamsscimschemasoracleidcsextensionrequestable_group, urnietfparamsscimschemasoracleidcsextensiondbcs_group, urnietfparamsscimschemasoracleidcsextensiondynamic_group, urnietfparamsscimschemasoracleidcsextension_oci_tags):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['displayName'] = display_name

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if external_id is not None:
        _details['externalId'] = external_id

    if non_unique_display_name is not None:
        _details['nonUniqueDisplayName'] = non_unique_display_name

    if members is not None:
        _details['members'] = cli_util.parse_json_parameter("members", members)

    if urnietfparamsscimschemasoracleidcsextensiongroup_group is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:group:Group'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensiongroup_group", urnietfparamsscimschemasoracleidcsextensiongroup_group)

    if urnietfparamsscimschemasoracleidcsextensionposix_group is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:posix:Group'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionposix_group", urnietfparamsscimschemasoracleidcsextensionposix_group)

    if urnietfparamsscimschemasoracleidcsextensionrequestable_group is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:requestable:Group'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionrequestable_group", urnietfparamsscimschemasoracleidcsextensionrequestable_group)

    if urnietfparamsscimschemasoracleidcsextensiondbcs_group is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:dbcs:Group'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensiondbcs_group", urnietfparamsscimschemasoracleidcsextensiondbcs_group)

    if urnietfparamsscimschemasoracleidcsextensiondynamic_group is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:dynamic:Group'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensiondynamic_group", urnietfparamsscimschemasoracleidcsextensiondynamic_group)

    if urnietfparamsscimschemasoracleidcsextension_oci_tags is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:OCITags'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextension_oci_tags", urnietfparamsscimschemasoracleidcsextension_oci_tags)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_group(
        group=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@identity_provider_group.command(name=cli_util.override('identity_domains.create_identity_provider.command_name', 'create'), help=u"""Create an Identity Provider

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createIdentityProvider)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--partner-name', required=True, help=u"""Unique name of the trusted Identity Provider.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: true  - returned: always  - type: string  - uniqueness: server""")
@cli_util.option('--enabled', required=True, type=click.BOOL, help=u"""Set to true to indicate Partner enabled.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: true  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--external-id', help=u"""An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--description', help=u"""Description

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--metadata', help=u"""Metadata

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--partner-provider-id', help=u"""Provider ID

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: server""")
@cli_util.option('--tenant-provider-id', help=u"""The alternate Provider ID to be used as the Oracle Identity Cloud Service providerID (instead of the one in SamlSettings) when interacting with this IdP.

**Added In:** 19.2.1

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--succinct-id', help=u"""Succinct ID

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: server""")
@cli_util.option('--idp-sso-url', help=u"""Identity Provider SSO URL

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--logout-request-url', help=u"""Logout request URL

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--logout-response-url', help=u"""Logout response URL

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--signing-certificate', help=u"""Signing certificate

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--encryption-certificate', help=u"""Encryption certificate

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--name-id-format', help=u"""Default authentication request name ID format.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--include-signing-cert-in-signature', type=click.BOOL, help=u"""Set to true to include the signing certificate in the signature.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--authn-request-binding', type=custom_types.CliCaseInsensitiveChoice(["Redirect", "Post"]), help=u"""HTTP binding to use for authentication requests.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--logout-binding', type=custom_types.CliCaseInsensitiveChoice(["Redirect", "Post"]), help=u"""HTTP binding to use for logout.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--logout-enabled', type=click.BOOL, help=u"""Set to true to enable logout.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--signature-hash-algorithm', type=custom_types.CliCaseInsensitiveChoice(["SHA-1", "SHA-256"]), help=u"""Signature hash algorithm.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--icon-url', help=u"""Identity Provider Icon URL.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--shown-on-login-page', type=click.BOOL, help=u"""Set to true to indicate whether to show IdP in login page or not.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--jit-user-prov-enabled', type=click.BOOL, help=u"""Set to true to indicate JIT User Provisioning is enabled

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--jit-user-prov-group-assertion-attribute-enabled', type=click.BOOL, help=u"""Set to true to indicate JIT User Provisioning Groups should be assigned based on assertion attribute

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--jit-user-prov-group-static-list-enabled', type=click.BOOL, help=u"""Set to true to indicate JIT User Provisioning Groups should be assigned from a static list

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--jit-user-prov-create-user-enabled', type=click.BOOL, help=u"""Set to true to indicate JIT User Creation is enabled

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--jit-user-prov-attribute-update-enabled', type=click.BOOL, help=u"""Set to true to indicate JIT User Creation is enabled

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--jit-user-prov-group-assignment-method', type=custom_types.CliCaseInsensitiveChoice(["Overwrite", "Merge"]), help=u"""The default value is 'Overwrite', which tells Just-In-Time user-provisioning to replace any current group-assignments for a User with those assigned by assertions and/or those assigned statically. Specify 'Merge' if you want Just-In-Time user-provisioning to combine its group-assignments with those the user already has.

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--jit-user-prov-group-mapping-mode', type=custom_types.CliCaseInsensitiveChoice(["implicit", "explicit"]), help=u"""Property to indicate the mode of group mapping

**Added In:** 2205120021

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--jit-user-prov-group-mappings', type=custom_types.CLI_COMPLEX_TYPE, help=u"""The list of mappings between the Identity Domain Group and the IDP group.

**Added In:** 2205120021

**SCIM++ Properties:**  - idcsCompositeKey: [idpGroup]  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type IdentityProviderJitUserProvGroupMappings.  For documentation on IdentityProviderJitUserProvGroupMappings please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/IdentityProviderJitUserProvGroupMappings.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--jit-user-prov-group-saml-attribute-name', help=u"""Name of the assertion attribute containing the users groups

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--service-instance-identifier', help=u"""The serviceInstanceIdentifier of the App that hosts this IdP. This value will match the opcServiceInstanceGUID of any service-instance that the IdP represents.

**Added In:** 18.2.6

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: never  - type: string  - uniqueness: server""")
@cli_util.option('--user-mapping-method', type=custom_types.CliCaseInsensitiveChoice(["NameIDToUserAttribute", "AssertionAttributeToUserAttribute", "CorrelationPolicyRule"]), help=u"""User mapping method.

**Deprecated Since: 20.1.3**

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none  - idcsValuePersistedInOtherAttribute: true""")
@cli_util.option('--user-mapping-store-attribute', help=u"""This property specifies the userstore attribute value that must match the incoming assertion attribute value or the incoming nameid attribute value in order to identify the user during SSO.<br>You can construct the userMappingStoreAttribute value by specifying attributes from the Oracle Identity Cloud Service Core Users schema. For examples of how to construct the userMappingStoreAttribute value, see the <b>Example of a Request Body</b> section of the Examples tab for the <a href='./op-admin-v1-identityproviders-post.html'>POST</a> and <a href='./op-admin-v1-identityproviders-id-put.html'>PUT</a> methods of the /IdentityProviders endpoint.

**Deprecated Since: 20.1.3**

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none  - idcsValuePersistedInOtherAttribute: true""")
@cli_util.option('--assertion-attribute', help=u"""Assertion attribute name.

**Deprecated Since: 20.1.3**

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none  - idcsValuePersistedInOtherAttribute: true""")
@cli_util.option('--type', type=custom_types.CliCaseInsensitiveChoice(["SAML", "SOCIAL", "IWA", "X509", "LOCAL"]), help=u"""Identity Provider Type

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: always  - type: string  - uniqueness: none""")
@cli_util.option('--require-force-authn', type=click.BOOL, help=u"""This SP requires requests SAML IdP to enforce re-authentication.

**Added In:** 2102181953

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--requires-encrypted-assertion', type=click.BOOL, help=u"""SAML SP must accept encrypted assertion only.

**Added In:** 2102181953

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--saml-ho-k-required', type=click.BOOL, help=u"""SAML SP HoK Enabled.

**Added In:** 2102181953

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--requested-authentication-context', type=custom_types.CLI_COMPLEX_TYPE, help=u"""SAML SP authentication type.

**Added In:** 2102181953

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--jit-user-prov-ignore-error-on-absent-groups', type=click.BOOL, help=u"""Set to true to indicate ignoring absence of group while provisioning

**Added In:** 2111112015

**SCIM++ Properties:**  - caseExact: false  - idcsAddedSinceVersion: 30  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--jit-user-prov-attributes', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--jit-user-prov-assigned-groups', type=custom_types.CLI_COMPLEX_TYPE, help=u"""Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.

**Added In:** 20.1.3

**SCIM++ Properties:**  - idcsCompositeKey: [value]  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type IdentityProviderJitUserProvAssignedGroups.  For documentation on IdentityProviderJitUserProvAssignedGroups please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/IdentityProviderJitUserProvAssignedGroups.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--correlation-policy', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionsocial-identity-provider', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionx509-identity-provider', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'jit-user-prov-group-mappings': {'module': 'identity_domains', 'class': 'list[IdentityProviderJitUserProvGroupMappings]'}, 'requested-authentication-context': {'module': 'identity_domains', 'class': 'list[string]'}, 'jit-user-prov-attributes': {'module': 'identity_domains', 'class': 'IdentityProviderJitUserProvAttributes'}, 'jit-user-prov-assigned-groups': {'module': 'identity_domains', 'class': 'list[IdentityProviderJitUserProvAssignedGroups]'}, 'correlation-policy': {'module': 'identity_domains', 'class': 'IdentityProviderCorrelationPolicy'}, 'urnietfparamsscimschemasoracleidcsextensionsocial-identity-provider': {'module': 'identity_domains', 'class': 'ExtensionSocialIdentityProvider'}, 'urnietfparamsscimschemasoracleidcsextensionx509-identity-provider': {'module': 'identity_domains', 'class': 'ExtensionX509IdentityProvider'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'jit-user-prov-group-mappings': {'module': 'identity_domains', 'class': 'list[IdentityProviderJitUserProvGroupMappings]'}, 'requested-authentication-context': {'module': 'identity_domains', 'class': 'list[string]'}, 'jit-user-prov-attributes': {'module': 'identity_domains', 'class': 'IdentityProviderJitUserProvAttributes'}, 'jit-user-prov-assigned-groups': {'module': 'identity_domains', 'class': 'list[IdentityProviderJitUserProvAssignedGroups]'}, 'correlation-policy': {'module': 'identity_domains', 'class': 'IdentityProviderCorrelationPolicy'}, 'urnietfparamsscimschemasoracleidcsextensionsocial-identity-provider': {'module': 'identity_domains', 'class': 'ExtensionSocialIdentityProvider'}, 'urnietfparamsscimschemasoracleidcsextensionx509-identity-provider': {'module': 'identity_domains', 'class': 'ExtensionX509IdentityProvider'}}, output_type={'module': 'identity_domains', 'class': 'IdentityProvider'})
@cli_util.wrap_exceptions
def create_identity_provider(ctx, from_json, schemas, partner_name, enabled, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, external_id, description, metadata, partner_provider_id, tenant_provider_id, succinct_id, idp_sso_url, logout_request_url, logout_response_url, signing_certificate, encryption_certificate, name_id_format, include_signing_cert_in_signature, authn_request_binding, logout_binding, logout_enabled, signature_hash_algorithm, icon_url, shown_on_login_page, jit_user_prov_enabled, jit_user_prov_group_assertion_attribute_enabled, jit_user_prov_group_static_list_enabled, jit_user_prov_create_user_enabled, jit_user_prov_attribute_update_enabled, jit_user_prov_group_assignment_method, jit_user_prov_group_mapping_mode, jit_user_prov_group_mappings, jit_user_prov_group_saml_attribute_name, service_instance_identifier, user_mapping_method, user_mapping_store_attribute, assertion_attribute, type, require_force_authn, requires_encrypted_assertion, saml_ho_k_required, requested_authentication_context, jit_user_prov_ignore_error_on_absent_groups, jit_user_prov_attributes, jit_user_prov_assigned_groups, correlation_policy, urnietfparamsscimschemasoracleidcsextensionsocial_identity_provider, urnietfparamsscimschemasoracleidcsextensionx509_identity_provider):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['partnerName'] = partner_name
    _details['enabled'] = enabled

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if external_id is not None:
        _details['externalId'] = external_id

    if description is not None:
        _details['description'] = description

    if metadata is not None:
        _details['metadata'] = metadata

    if partner_provider_id is not None:
        _details['partnerProviderId'] = partner_provider_id

    if tenant_provider_id is not None:
        _details['tenantProviderId'] = tenant_provider_id

    if succinct_id is not None:
        _details['succinctId'] = succinct_id

    if idp_sso_url is not None:
        _details['idpSsoUrl'] = idp_sso_url

    if logout_request_url is not None:
        _details['logoutRequestUrl'] = logout_request_url

    if logout_response_url is not None:
        _details['logoutResponseUrl'] = logout_response_url

    if signing_certificate is not None:
        _details['signingCertificate'] = signing_certificate

    if encryption_certificate is not None:
        _details['encryptionCertificate'] = encryption_certificate

    if name_id_format is not None:
        _details['nameIdFormat'] = name_id_format

    if include_signing_cert_in_signature is not None:
        _details['includeSigningCertInSignature'] = include_signing_cert_in_signature

    if authn_request_binding is not None:
        _details['authnRequestBinding'] = authn_request_binding

    if logout_binding is not None:
        _details['logoutBinding'] = logout_binding

    if logout_enabled is not None:
        _details['logoutEnabled'] = logout_enabled

    if signature_hash_algorithm is not None:
        _details['signatureHashAlgorithm'] = signature_hash_algorithm

    if icon_url is not None:
        _details['iconUrl'] = icon_url

    if shown_on_login_page is not None:
        _details['shownOnLoginPage'] = shown_on_login_page

    if jit_user_prov_enabled is not None:
        _details['jitUserProvEnabled'] = jit_user_prov_enabled

    if jit_user_prov_group_assertion_attribute_enabled is not None:
        _details['jitUserProvGroupAssertionAttributeEnabled'] = jit_user_prov_group_assertion_attribute_enabled

    if jit_user_prov_group_static_list_enabled is not None:
        _details['jitUserProvGroupStaticListEnabled'] = jit_user_prov_group_static_list_enabled

    if jit_user_prov_create_user_enabled is not None:
        _details['jitUserProvCreateUserEnabled'] = jit_user_prov_create_user_enabled

    if jit_user_prov_attribute_update_enabled is not None:
        _details['jitUserProvAttributeUpdateEnabled'] = jit_user_prov_attribute_update_enabled

    if jit_user_prov_group_assignment_method is not None:
        _details['jitUserProvGroupAssignmentMethod'] = jit_user_prov_group_assignment_method

    if jit_user_prov_group_mapping_mode is not None:
        _details['jitUserProvGroupMappingMode'] = jit_user_prov_group_mapping_mode

    if jit_user_prov_group_mappings is not None:
        _details['jitUserProvGroupMappings'] = cli_util.parse_json_parameter("jit_user_prov_group_mappings", jit_user_prov_group_mappings)

    if jit_user_prov_group_saml_attribute_name is not None:
        _details['jitUserProvGroupSAMLAttributeName'] = jit_user_prov_group_saml_attribute_name

    if service_instance_identifier is not None:
        _details['serviceInstanceIdentifier'] = service_instance_identifier

    if user_mapping_method is not None:
        _details['userMappingMethod'] = user_mapping_method

    if user_mapping_store_attribute is not None:
        _details['userMappingStoreAttribute'] = user_mapping_store_attribute

    if assertion_attribute is not None:
        _details['assertionAttribute'] = assertion_attribute

    if type is not None:
        _details['type'] = type

    if require_force_authn is not None:
        _details['requireForceAuthn'] = require_force_authn

    if requires_encrypted_assertion is not None:
        _details['requiresEncryptedAssertion'] = requires_encrypted_assertion

    if saml_ho_k_required is not None:
        _details['samlHoKRequired'] = saml_ho_k_required

    if requested_authentication_context is not None:
        _details['requestedAuthenticationContext'] = cli_util.parse_json_parameter("requested_authentication_context", requested_authentication_context)

    if jit_user_prov_ignore_error_on_absent_groups is not None:
        _details['jitUserProvIgnoreErrorOnAbsentGroups'] = jit_user_prov_ignore_error_on_absent_groups

    if jit_user_prov_attributes is not None:
        _details['jitUserProvAttributes'] = cli_util.parse_json_parameter("jit_user_prov_attributes", jit_user_prov_attributes)

    if jit_user_prov_assigned_groups is not None:
        _details['jitUserProvAssignedGroups'] = cli_util.parse_json_parameter("jit_user_prov_assigned_groups", jit_user_prov_assigned_groups)

    if correlation_policy is not None:
        _details['correlationPolicy'] = cli_util.parse_json_parameter("correlation_policy", correlation_policy)

    if urnietfparamsscimschemasoracleidcsextensionsocial_identity_provider is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:social:IdentityProvider'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionsocial_identity_provider", urnietfparamsscimschemasoracleidcsextensionsocial_identity_provider)

    if urnietfparamsscimschemasoracleidcsextensionx509_identity_provider is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:x509:IdentityProvider'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionx509_identity_provider", urnietfparamsscimschemasoracleidcsextensionx509_identity_provider)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_identity_provider(
        identity_provider=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@me_group.command(name=cli_util.override('identity_domains.create_me.command_name', 'create'), help=u"""Self Register

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createMe)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--user-name', required=True, help=u"""User name

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: User ID  - idcsCsvAttributeNameMappings: [[columnHeaderName:User Name, deprecatedColumnHeaderName:User ID]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: true  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--name', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--external-id', help=u"""An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeNameMappings: [[columnHeaderName:External Id]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--description', help=u"""Description of the user

**Added In:** 2012271618

**SCIM++ Properties:**  - caseExact: false  - idcsPii: true  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--display-name', help=u"""Display name

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Display Name  - idcsCsvAttributeNameMappings: [[columnHeaderName:Display Name]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--nick-name', help=u"""Nick name

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Nick Name  - idcsCsvAttributeNameMappings: [[columnHeaderName:Nick Name]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--profile-url', help=u"""A fully-qualified URL to a page representing the User's online profile

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Profile URL  - idcsCsvAttributeNameMappings: [[columnHeaderName:Profile Url]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: reference  - uniqueness: none""")
@cli_util.option('--title', help=u"""Title

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Title  - idcsCsvAttributeNameMappings: [[columnHeaderName:Title]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--user-type', type=custom_types.CliCaseInsensitiveChoice(["Contractor", "Employee", "Intern", "Temp", "External", "Service", "Generic"]), help=u"""Used to identify the organization-to-user relationship

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: User Type  - idcsCsvAttributeNameMappings: [[columnHeaderName:User Type]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--locale', help=u"""Used to indicate the User's default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Locale  - idcsCsvAttributeNameMappings: [[columnHeaderName:Locale]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--preferred-language', help=u"""User's preferred written or spoken language used for localized user interfaces

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Preferred Language  - idcsCsvAttributeNameMappings: [[columnHeaderName:Preferred Language]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--timezone', help=u"""User's timezone

**SCIM++ Properties:**  - caseExact: false  - idcsCanonicalValueSourceFilter: attrName eq \"timezones\" and attrValues.value eq \"$(timezone)\"  - idcsCanonicalValueSourceResourceType: AllowedValue  - idcsCsvAttributeName: TimeZone  - idcsCsvAttributeNameMappings: [[columnHeaderName:Time Zone, deprecatedColumnHeaderName:TimeZone]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--active', type=click.BOOL, help=u"""User status

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Active  - idcsCsvAttributeNameMappings: [[columnHeaderName:Active]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--password', help=u"""Password attribute. Max length for password is controlled via Password Policy.

**SCIM++ Properties:**  - idcsCsvAttributeName: Password  - idcsCsvAttributeNameMappings: [[columnHeaderName:Password]]  - idcsPii: true  - idcsSearchable: false  - idcsSensitive: hash  - multiValued: false  - mutability: writeOnly  - required: false  - returned: never  - type: string  - uniqueness: none""")
@cli_util.option('--emails', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A complex attribute representing emails

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - idcsCsvAttributeNameMappings: [[columnHeaderName:Work Email, mapsTo:emails[work].value], [columnHeaderName:Home Email, mapsTo:emails[home].value], [columnHeaderName:Primary Email Type, mapsTo:emails[$(type)].primary], [columnHeaderName:Other Email, mapsTo:emails[other].value], [columnHeaderName:Recovery Email, mapsTo:emails[recovery].value], [columnHeaderName:Work Email Verified, mapsTo:emails[work].verified], [columnHeaderName:Home Email Verified, mapsTo:emails[home].verified], [columnHeaderName:Other Email Verified, mapsTo:emails[other].verified], [columnHeaderName:Recovery Email Verified, mapsTo:emails[recovery].verified]]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type MeEmails.  For documentation on MeEmails please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MeEmails.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--phone-numbers', type=custom_types.CLI_COMPLEX_TYPE, help=u"""Phone numbers

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - idcsCsvAttributeNameMappings: [[columnHeaderName:Work Phone, mapsTo:phoneNumbers[work].value], [columnHeaderName:Mobile No, mapsTo:phoneNumbers[mobile].value], [columnHeaderName:Home Phone, mapsTo:phoneNumbers[home].value], [columnHeaderName:Fax, mapsTo:phoneNumbers[fax].value], [columnHeaderName:Pager, mapsTo:phoneNumbers[pager].value], [columnHeaderName:Other Phone, mapsTo:phoneNumbers[other].value], [columnHeaderName:Recovery Phone, mapsTo:phoneNumbers[recovery].value], [columnHeaderName:Primary Phone Type, mapsTo:phoneNumbers[$(type)].primary]]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type MePhoneNumbers.  For documentation on MePhoneNumbers please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MePhoneNumbers.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--ims', type=custom_types.CLI_COMPLEX_TYPE, help=u"""User's instant messaging addresses

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type MeIms.  For documentation on MeIms please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MeIms.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--photos', type=custom_types.CLI_COMPLEX_TYPE, help=u"""URLs of photos for the User

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type MePhotos.  For documentation on MePhotos please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MePhotos.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--addresses', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.

**SCIM++ Properties:**  - idcsCompositeKey: [type]  - idcsCsvAttributeNameMappings: [[columnHeaderName:Work Address Street, deprecatedColumnHeaderName:Work Street Address, mapsTo:addresses[work].streetAddress], [columnHeaderName:Work Address Locality, deprecatedColumnHeaderName:Work City, mapsTo:addresses[work].locality], [columnHeaderName:Work Address Region, deprecatedColumnHeaderName:Work State, mapsTo:addresses[work].region], [columnHeaderName:Work Address Postal Code, deprecatedColumnHeaderName:Work Postal Code, mapsTo:addresses[work].postalCode], [columnHeaderName:Work Address Country, deprecatedColumnHeaderName:Work Country, mapsTo:addresses[work].country], [columnHeaderName:Work Address Formatted, mapsTo:addresses[work].formatted], [columnHeaderName:Home Address Formatted, mapsTo:addresses[home].formatted], [columnHeaderName:Other Address Formatted, mapsTo:addresses[other].formatted], [columnHeaderName:Home Address Street, mapsTo:addresses[home].streetAddress], [columnHeaderName:Other Address Street, mapsTo:addresses[other].streetAddress], [columnHeaderName:Home Address Locality, mapsTo:addresses[home].locality], [columnHeaderName:Other Address Locality, mapsTo:addresses[other].locality], [columnHeaderName:Home Address Region, mapsTo:addresses[home].region], [columnHeaderName:Other Address Region, mapsTo:addresses[other].region], [columnHeaderName:Home Address Country, mapsTo:addresses[home].country], [columnHeaderName:Other Address Country, mapsTo:addresses[other].country], [columnHeaderName:Home Address Postal Code, mapsTo:addresses[home].postalCode], [columnHeaderName:Other Address Postal Code, mapsTo:addresses[other].postalCode], [columnHeaderName:Primary Address Type, mapsTo:addresses[$(type)].primary]]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type Addresses.  For documentation on addresses please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Addresses.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--groups', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of groups that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated

**SCIM++ Properties:**  - idcsCompositeKey: [value]  - idcsSearchable: true  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type MeGroups.  For documentation on MeGroups please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MeGroups.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--entitlements', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of entitlements for the User that represent a thing the User has.

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type MeEntitlements.  For documentation on MeEntitlements please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MeEntitlements.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--roles', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of roles for the User that collectively represent who the User is; e.g., 'Student', 'Faculty'.

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type MeRoles.  For documentation on MeRoles please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MeRoles.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--x509-certificates', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of certificates issued to the User.

**SCIM++ Properties:**  - idcsCompositeKey: [value]  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type MeX509Certificates.  For documentation on MeX509Certificates please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MeX509Certificates.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasextensionenterprise2-0-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionuser-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionpassword-state-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionuser-state-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionme-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionposix-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionmfa-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionsecurity-questions-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionself-registration-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionterms-of-use-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextension-oci-tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionuser-credentials-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensioncapabilities-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensiondb-credentials-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'name': {'module': 'identity_domains', 'class': 'MeName'}, 'emails': {'module': 'identity_domains', 'class': 'list[MeEmails]'}, 'phone-numbers': {'module': 'identity_domains', 'class': 'list[MePhoneNumbers]'}, 'ims': {'module': 'identity_domains', 'class': 'list[MeIms]'}, 'photos': {'module': 'identity_domains', 'class': 'list[MePhotos]'}, 'addresses': {'module': 'identity_domains', 'class': 'list[Addresses]'}, 'groups': {'module': 'identity_domains', 'class': 'list[MeGroups]'}, 'entitlements': {'module': 'identity_domains', 'class': 'list[MeEntitlements]'}, 'roles': {'module': 'identity_domains', 'class': 'list[MeRoles]'}, 'x509-certificates': {'module': 'identity_domains', 'class': 'list[MeX509Certificates]'}, 'urnietfparamsscimschemasextensionenterprise2-0-user': {'module': 'identity_domains', 'class': 'ExtensionEnterprise20User'}, 'urnietfparamsscimschemasoracleidcsextensionuser-user': {'module': 'identity_domains', 'class': 'ExtensionUserUser'}, 'urnietfparamsscimschemasoracleidcsextensionpassword-state-user': {'module': 'identity_domains', 'class': 'ExtensionPasswordStateUser'}, 'urnietfparamsscimschemasoracleidcsextensionuser-state-user': {'module': 'identity_domains', 'class': 'ExtensionUserStateUser'}, 'urnietfparamsscimschemasoracleidcsextensionme-user': {'module': 'identity_domains', 'class': 'ExtensionMeUser'}, 'urnietfparamsscimschemasoracleidcsextensionposix-user': {'module': 'identity_domains', 'class': 'ExtensionPosixUser'}, 'urnietfparamsscimschemasoracleidcsextensionmfa-user': {'module': 'identity_domains', 'class': 'ExtensionMfaUser'}, 'urnietfparamsscimschemasoracleidcsextensionsecurity-questions-user': {'module': 'identity_domains', 'class': 'ExtensionSecurityQuestionsUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-registration-user': {'module': 'identity_domains', 'class': 'ExtensionSelfRegistrationUser'}, 'urnietfparamsscimschemasoracleidcsextensionterms-of-use-user': {'module': 'identity_domains', 'class': 'ExtensionTermsOfUseUser'}, 'urnietfparamsscimschemasoracleidcsextension-oci-tags': {'module': 'identity_domains', 'class': 'ExtensionOCITags'}, 'urnietfparamsscimschemasoracleidcsextensionuser-credentials-user': {'module': 'identity_domains', 'class': 'ExtensionUserCredentialsUser'}, 'urnietfparamsscimschemasoracleidcsextensioncapabilities-user': {'module': 'identity_domains', 'class': 'ExtensionCapabilitiesUser'}, 'urnietfparamsscimschemasoracleidcsextensiondb-credentials-user': {'module': 'identity_domains', 'class': 'ExtensionDbCredentialsUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'name': {'module': 'identity_domains', 'class': 'MeName'}, 'emails': {'module': 'identity_domains', 'class': 'list[MeEmails]'}, 'phone-numbers': {'module': 'identity_domains', 'class': 'list[MePhoneNumbers]'}, 'ims': {'module': 'identity_domains', 'class': 'list[MeIms]'}, 'photos': {'module': 'identity_domains', 'class': 'list[MePhotos]'}, 'addresses': {'module': 'identity_domains', 'class': 'list[Addresses]'}, 'groups': {'module': 'identity_domains', 'class': 'list[MeGroups]'}, 'entitlements': {'module': 'identity_domains', 'class': 'list[MeEntitlements]'}, 'roles': {'module': 'identity_domains', 'class': 'list[MeRoles]'}, 'x509-certificates': {'module': 'identity_domains', 'class': 'list[MeX509Certificates]'}, 'urnietfparamsscimschemasextensionenterprise2-0-user': {'module': 'identity_domains', 'class': 'ExtensionEnterprise20User'}, 'urnietfparamsscimschemasoracleidcsextensionuser-user': {'module': 'identity_domains', 'class': 'ExtensionUserUser'}, 'urnietfparamsscimschemasoracleidcsextensionpassword-state-user': {'module': 'identity_domains', 'class': 'ExtensionPasswordStateUser'}, 'urnietfparamsscimschemasoracleidcsextensionuser-state-user': {'module': 'identity_domains', 'class': 'ExtensionUserStateUser'}, 'urnietfparamsscimschemasoracleidcsextensionme-user': {'module': 'identity_domains', 'class': 'ExtensionMeUser'}, 'urnietfparamsscimschemasoracleidcsextensionposix-user': {'module': 'identity_domains', 'class': 'ExtensionPosixUser'}, 'urnietfparamsscimschemasoracleidcsextensionmfa-user': {'module': 'identity_domains', 'class': 'ExtensionMfaUser'}, 'urnietfparamsscimschemasoracleidcsextensionsecurity-questions-user': {'module': 'identity_domains', 'class': 'ExtensionSecurityQuestionsUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-registration-user': {'module': 'identity_domains', 'class': 'ExtensionSelfRegistrationUser'}, 'urnietfparamsscimschemasoracleidcsextensionterms-of-use-user': {'module': 'identity_domains', 'class': 'ExtensionTermsOfUseUser'}, 'urnietfparamsscimschemasoracleidcsextension-oci-tags': {'module': 'identity_domains', 'class': 'ExtensionOCITags'}, 'urnietfparamsscimschemasoracleidcsextensionuser-credentials-user': {'module': 'identity_domains', 'class': 'ExtensionUserCredentialsUser'}, 'urnietfparamsscimschemasoracleidcsextensioncapabilities-user': {'module': 'identity_domains', 'class': 'ExtensionCapabilitiesUser'}, 'urnietfparamsscimschemasoracleidcsextensiondb-credentials-user': {'module': 'identity_domains', 'class': 'ExtensionDbCredentialsUser'}}, output_type={'module': 'identity_domains', 'class': 'Me'})
@cli_util.wrap_exceptions
def create_me(ctx, from_json, schemas, user_name, name, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, external_id, description, display_name, nick_name, profile_url, title, user_type, locale, preferred_language, timezone, active, password, emails, phone_numbers, ims, photos, addresses, groups, entitlements, roles, x509_certificates, urnietfparamsscimschemasextensionenterprise2_0_user, urnietfparamsscimschemasoracleidcsextensionuser_user, urnietfparamsscimschemasoracleidcsextensionpassword_state_user, urnietfparamsscimschemasoracleidcsextensionuser_state_user, urnietfparamsscimschemasoracleidcsextensionme_user, urnietfparamsscimschemasoracleidcsextensionposix_user, urnietfparamsscimschemasoracleidcsextensionmfa_user, urnietfparamsscimschemasoracleidcsextensionsecurity_questions_user, urnietfparamsscimschemasoracleidcsextensionself_registration_user, urnietfparamsscimschemasoracleidcsextensionterms_of_use_user, urnietfparamsscimschemasoracleidcsextension_oci_tags, urnietfparamsscimschemasoracleidcsextensionuser_credentials_user, urnietfparamsscimschemasoracleidcsextensioncapabilities_user, urnietfparamsscimschemasoracleidcsextensiondb_credentials_user):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['userName'] = user_name
    _details['name'] = cli_util.parse_json_parameter("name", name)

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if external_id is not None:
        _details['externalId'] = external_id

    if description is not None:
        _details['description'] = description

    if display_name is not None:
        _details['displayName'] = display_name

    if nick_name is not None:
        _details['nickName'] = nick_name

    if profile_url is not None:
        _details['profileUrl'] = profile_url

    if title is not None:
        _details['title'] = title

    if user_type is not None:
        _details['userType'] = user_type

    if locale is not None:
        _details['locale'] = locale

    if preferred_language is not None:
        _details['preferredLanguage'] = preferred_language

    if timezone is not None:
        _details['timezone'] = timezone

    if active is not None:
        _details['active'] = active

    if password is not None:
        _details['password'] = password

    if emails is not None:
        _details['emails'] = cli_util.parse_json_parameter("emails", emails)

    if phone_numbers is not None:
        _details['phoneNumbers'] = cli_util.parse_json_parameter("phone_numbers", phone_numbers)

    if ims is not None:
        _details['ims'] = cli_util.parse_json_parameter("ims", ims)

    if photos is not None:
        _details['photos'] = cli_util.parse_json_parameter("photos", photos)

    if addresses is not None:
        _details['addresses'] = cli_util.parse_json_parameter("addresses", addresses)

    if groups is not None:
        _details['groups'] = cli_util.parse_json_parameter("groups", groups)

    if entitlements is not None:
        _details['entitlements'] = cli_util.parse_json_parameter("entitlements", entitlements)

    if roles is not None:
        _details['roles'] = cli_util.parse_json_parameter("roles", roles)

    if x509_certificates is not None:
        _details['x509Certificates'] = cli_util.parse_json_parameter("x509_certificates", x509_certificates)

    if urnietfparamsscimschemasextensionenterprise2_0_user is not None:
        _details['urn:ietf:params:scim:schemas:extension:enterprise:2.0:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasextensionenterprise2_0_user", urnietfparamsscimschemasextensionenterprise2_0_user)

    if urnietfparamsscimschemasoracleidcsextensionuser_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:user:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionuser_user", urnietfparamsscimschemasoracleidcsextensionuser_user)

    if urnietfparamsscimschemasoracleidcsextensionpassword_state_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:passwordState:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionpassword_state_user", urnietfparamsscimschemasoracleidcsextensionpassword_state_user)

    if urnietfparamsscimschemasoracleidcsextensionuser_state_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:userState:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionuser_state_user", urnietfparamsscimschemasoracleidcsextensionuser_state_user)

    if urnietfparamsscimschemasoracleidcsextensionme_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:me:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionme_user", urnietfparamsscimschemasoracleidcsextensionme_user)

    if urnietfparamsscimschemasoracleidcsextensionposix_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:posix:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionposix_user", urnietfparamsscimschemasoracleidcsextensionposix_user)

    if urnietfparamsscimschemasoracleidcsextensionmfa_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:mfa:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionmfa_user", urnietfparamsscimschemasoracleidcsextensionmfa_user)

    if urnietfparamsscimschemasoracleidcsextensionsecurity_questions_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:securityQuestions:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionsecurity_questions_user", urnietfparamsscimschemasoracleidcsextensionsecurity_questions_user)

    if urnietfparamsscimschemasoracleidcsextensionself_registration_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:selfRegistration:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionself_registration_user", urnietfparamsscimschemasoracleidcsextensionself_registration_user)

    if urnietfparamsscimschemasoracleidcsextensionterms_of_use_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:termsOfUse:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionterms_of_use_user", urnietfparamsscimschemasoracleidcsextensionterms_of_use_user)

    if urnietfparamsscimschemasoracleidcsextension_oci_tags is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:OCITags'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextension_oci_tags", urnietfparamsscimschemasoracleidcsextension_oci_tags)

    if urnietfparamsscimschemasoracleidcsextensionuser_credentials_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:userCredentials:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionuser_credentials_user", urnietfparamsscimschemasoracleidcsextensionuser_credentials_user)

    if urnietfparamsscimschemasoracleidcsextensioncapabilities_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:capabilities:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensioncapabilities_user", urnietfparamsscimschemasoracleidcsextensioncapabilities_user)

    if urnietfparamsscimschemasoracleidcsextensiondb_credentials_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:dbCredentials:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensiondb_credentials_user", urnietfparamsscimschemasoracleidcsextensiondb_credentials_user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_me(
        me=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_api_key_group.command(name=cli_util.override('identity_domains.create_my_api_key.command_name', 'create'), help=u"""Add a user's api key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createMyApiKey)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--fingerprint', required=True, help=u"""Fingerprint

**Added In:** 2010242156

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - type: string  - mutability: readOnly  - required: true  - returned: default""")
@cli_util.option('--key', required=True, help=u"""Key

**Added In:** 2010242156

**SCIM++ Properties:**  - caseExact: true  - idcsPii: true  - type: string  - mutability: immutable  - required: true  - returned: default""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--description', help=u"""Description

**Added In:** 2101262133

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readWrite  - required: false  - returned: default""")
@cli_util.option('--user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'MyApiKeyUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'MyApiKeyUser'}}, output_type={'module': 'identity_domains', 'class': 'MyApiKey'})
@cli_util.wrap_exceptions
def create_my_api_key(ctx, from_json, schemas, fingerprint, key, authorization, resource_type_schema_version, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, description, user):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['fingerprint'] = fingerprint
    _details['key'] = key

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if description is not None:
        _details['description'] = description

    if user is not None:
        _details['user'] = cli_util.parse_json_parameter("user", user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_my_api_key(
        my_api_key=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_auth_token_group.command(name=cli_util.override('identity_domains.create_my_auth_token.command_name', 'create'), help=u"""Add user's auth token

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createMyAuthToken)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--description', help=u"""Description

**Added In:** 2010242156

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readWrite  - required: false  - returned: default""")
@cli_util.option('--status', type=custom_types.CliCaseInsensitiveChoice(["ACTIVE", "INACTIVE"]), help=u"""User credential status

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: never  - type: string  - uniqueness: none""")
@cli_util.option('--expires-on', help=u"""User credential expires on

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: dateTime  - uniqueness: none""")
@cli_util.option('--user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'MyAuthTokenUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'MyAuthTokenUser'}}, output_type={'module': 'identity_domains', 'class': 'MyAuthToken'})
@cli_util.wrap_exceptions
def create_my_auth_token(ctx, from_json, schemas, authorization, resource_type_schema_version, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, description, status, expires_on, user):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if description is not None:
        _details['description'] = description

    if status is not None:
        _details['status'] = status

    if expires_on is not None:
        _details['expiresOn'] = expires_on

    if user is not None:
        _details['user'] = cli_util.parse_json_parameter("user", user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_my_auth_token(
        my_auth_token=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_authentication_factor_initiator_group.command(name=cli_util.override('identity_domains.create_my_authentication_factor_initiator.command_name', 'create'), help=u"""Initiate Self Service Enrollment using the Requested MFA Factor

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createMyAuthenticationFactorInitiator)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--auth-factor', required=True, type=custom_types.CliCaseInsensitiveChoice(["EMAIL", "TOTP", "PUSH", "SMS", "VOICE", "PHONE_CALL", "THIRDPARTY", "FIDO_AUTHENTICATOR", "YUBICO_OTP"]), help=u"""Auth Factor represents the type of multi-factor authentication channel for which the request has been initiated.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--device-id', required=True, help=u"""Enrolled Device id on which the multi factor has been initiated.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--type', type=custom_types.CliCaseInsensitiveChoice(["SAML", "OIDC"]), help=u"""Authentication flow type either SAML / OIDC

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--request-id', help=u"""Unique RequestId generated for each initiator request.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--user-name', help=u"""Name of the user who initiates the request.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none  - idcsPii: true""")
@cli_util.option('--scenario', type=custom_types.CliCaseInsensitiveChoice(["ENROLLMENT", "AUTHENTICATION"]), help=u"""Specifies the scenario to initiate.

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: readWrite  - returned: default  - uniqueness: none  - idcsSearchable: false""")
@cli_util.option('--third-party-factor', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--preference-type', type=custom_types.CliCaseInsensitiveChoice(["PASSWORDLESS", "MFA"]), help=u"""Indicates whether to user passwordless factor to be updated or mfa factor to be updated

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: writeOnly  - returned: never  - uniqueness: none""")
@cli_util.option('--additional-attributes', type=custom_types.CLI_COMPLEX_TYPE, help=u"""Additional attributes which will be sent as part of a push notification

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type MyAuthenticationFactorInitiatorAdditionalAttributes.  For documentation on MyAuthenticationFactorInitiatorAdditionalAttributes please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MyAuthenticationFactorInitiatorAdditionalAttributes.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--is-acc-rec-enabled', type=click.BOOL, help=u"""Flag indicates whether the device is enrolled in account recovery

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'third-party-factor': {'module': 'identity_domains', 'class': 'MyAuthenticationFactorInitiatorThirdPartyFactor'}, 'additional-attributes': {'module': 'identity_domains', 'class': 'list[MyAuthenticationFactorInitiatorAdditionalAttributes]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'third-party-factor': {'module': 'identity_domains', 'class': 'MyAuthenticationFactorInitiatorThirdPartyFactor'}, 'additional-attributes': {'module': 'identity_domains', 'class': 'list[MyAuthenticationFactorInitiatorAdditionalAttributes]'}}, output_type={'module': 'identity_domains', 'class': 'MyAuthenticationFactorInitiator'})
@cli_util.wrap_exceptions
def create_my_authentication_factor_initiator(ctx, from_json, schemas, auth_factor, device_id, authorization, resource_type_schema_version, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, type, request_id, user_name, scenario, third_party_factor, preference_type, additional_attributes, is_acc_rec_enabled):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['authFactor'] = auth_factor
    _details['deviceId'] = device_id

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if type is not None:
        _details['type'] = type

    if request_id is not None:
        _details['requestId'] = request_id

    if user_name is not None:
        _details['userName'] = user_name

    if scenario is not None:
        _details['scenario'] = scenario

    if third_party_factor is not None:
        _details['thirdPartyFactor'] = cli_util.parse_json_parameter("third_party_factor", third_party_factor)

    if preference_type is not None:
        _details['preferenceType'] = preference_type

    if additional_attributes is not None:
        _details['additionalAttributes'] = cli_util.parse_json_parameter("additional_attributes", additional_attributes)

    if is_acc_rec_enabled is not None:
        _details['isAccRecEnabled'] = is_acc_rec_enabled

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_my_authentication_factor_initiator(
        my_authentication_factor_initiator=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_authentication_factor_validator_group.command(name=cli_util.override('identity_domains.create_my_authentication_factor_validator.command_name', 'create'), help=u"""Validate Self Service Enrollment using the Requested MFA Factor

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createMyAuthenticationFactorValidator)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--auth-factor', required=True, type=custom_types.CliCaseInsensitiveChoice(["USERNAME_PASSWORD", "PUSH", "TOTP", "EMAIL", "SMS", "VOICE", "BYPASSCODE", "SECURITY_QUESTIONS", "TRUST_TOKEN", "PHONE_CALL", "THIRDPARTY", "FIDO_AUTHENTICATOR", "YUBICO_OTP", "KMSI_TOKEN"]), help=u"""Authentication Factor which is being validated

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: true  - mutability: readWrite  - returned: default  - uniqueness: none  - idcsSearchable: false""")
@cli_util.option('--scenario', required=True, type=custom_types.CliCaseInsensitiveChoice(["ENROLLMENT", "AUTHENTICATION"]), help=u"""Specifies whether the service is being used to enroll or validate a factor

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: true  - mutability: readWrite  - returned: default  - uniqueness: none  - idcsSearchable: false""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--request-id', help=u"""Request ID which is being validated

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: readWrite  - returned: default  - uniqueness: none  - idcsSearchable: false""")
@cli_util.option('--otp-code', help=u"""The One Time Passcode which needs to be validated

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: readWrite  - returned: never  - uniqueness: none  - idcsSensitive: encrypt  - idcsSearchable: false""")
@cli_util.option('--device-id', help=u"""Device id whose factor is being validated

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: readWrite  - returned: default  - uniqueness: none  - idcsSearchable: false""")
@cli_util.option('--status', type=custom_types.CliCaseInsensitiveChoice(["SUCCESS", "FAILURE"]), help=u"""Validation status returned in the response

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: readOnly  - returned: default  - uniqueness: none  - idcsSearchable: false""")
@cli_util.option('--user-id', help=u"""User guid for whom the validation has initiated. Optional.

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: readWrite  - returned: default  - uniqueness: none  - idcsSearchable: false""")
@cli_util.option('--user-name', help=u"""User name for whom the validation has initiated

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: readWrite  - returned: default  - uniqueness: none  - idcsSearchable: false  - idcsPii: true""")
@cli_util.option('--display-name', help=u"""Display name of the verified device

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: readWrite  - returned: default  - uniqueness: none  - idcsSearchable: false""")
@cli_util.option('--message', help=u"""Validator message which is passed by the client. When it is a PUSH notification, it can be a rejection message.

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: readWrite  - returned: default  - uniqueness: none  - idcsSearchable: false""")
@cli_util.option('--type', type=custom_types.CliCaseInsensitiveChoice(["SAML", "OIDC"]), help=u"""type indicating whether the flow is OIDC, SAML etc.,

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: writeOnly  - returned: default  - uniqueness: none""")
@cli_util.option('--update-user-preference', type=click.BOOL, help=u"""Indicates whether to update user preferred mfa factor or not

**SCIM++ Properties:**  - type: boolean  - multiValued: false  - required: false  - mutability: writeOnly  - returned: never  - uniqueness: none""")
@cli_util.option('--preference-type', type=custom_types.CliCaseInsensitiveChoice(["PASSWORDLESS", "MFA"]), help=u"""Indicates whether to user passwordless factor to be updated or mfa factor to be updated

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: writeOnly  - returned: never  - uniqueness: none""")
@cli_util.option('--security-questions', type=custom_types.CLI_COMPLEX_TYPE, help=u"""List of security questions the user has submitted to get authenticated.

**SCIM++ Properties:**  - type: complex  - multiValued: true  - required: false  - mutability: writeOnly  - returned: never  - uniqueness: none  - idcsSearchable: false

This option is a JSON list with items of type MyAuthenticationFactorValidatorSecurityQuestions.  For documentation on MyAuthenticationFactorValidatorSecurityQuestions please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MyAuthenticationFactorValidatorSecurityQuestions.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--name', help=u"""Name of the client to be trusted

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: writeOnly  - returned: never  - uniqueness: none""")
@cli_util.option('--platform', help=u"""Platform of the client to be trusted

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: writeOnly  - returned: never  - uniqueness: none""")
@cli_util.option('--location', help=u"""Location of the trusted client.

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: writeOnly  - returned: never  - uniqueness: none""")
@cli_util.option('--trusted-token-id', help=u"""Trusted token resource identifier.

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: writeOnly  - returned: never  - uniqueness: none""")
@cli_util.option('--kmsi-token-id', help=u"""KMSI token resource identifier.

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: writeOnly  - returned: never  - uniqueness: none""")
@cli_util.option('--policy-enabled-second-factors', type=custom_types.CLI_COMPLEX_TYPE, help=u"""Sign-On Policy dictated allowed second factors.

**SCIM++ Properties:**  - type: string  - multiValued: true  - required: false  - mutability: writeOnly  - returned: never  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--create-trusted-agent', type=click.BOOL, help=u"""Indicates to create trust token.

**SCIM++ Properties:**  - type: boolean  - multiValued: false  - required: false  - mutability: writeOnly  - returned: never  - uniqueness: none""")
@cli_util.option('--create-kmsi-token', type=click.BOOL, help=u"""Indicates to create kmsi token.

**SCIM++ Properties:**  - type: boolean  - multiValued: false  - required: false  - mutability: writeOnly  - returned: never  - uniqueness: none""")
@cli_util.option('--is-acc-rec-enabled', type=click.BOOL, help=u"""Flag indicates whether the factor is enrolled in account recovery. If the value is not provided or false, then it will be treated as MFA factor validation.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--policy-trusted-frequency-mins', type=click.INT, help=u"""Sign-On Policy dictated validity duration for trusted client in Minutes.

**SCIM++ Properties:**  - type: integer  - multiValued: false  - required: false  - mutability: writeOnly  - returned: never  - uniqueness: none""")
@cli_util.option('--third-party-factor', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--additional-attributes', type=custom_types.CLI_COMPLEX_TYPE, help=u"""Additional attributes which will be sent as part of a push notification

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type MyAuthenticationFactorValidatorAdditionalAttributes.  For documentation on MyAuthenticationFactorValidatorAdditionalAttributes please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MyAuthenticationFactorValidatorAdditionalAttributes.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'security-questions': {'module': 'identity_domains', 'class': 'list[MyAuthenticationFactorValidatorSecurityQuestions]'}, 'policy-enabled-second-factors': {'module': 'identity_domains', 'class': 'list[string]'}, 'third-party-factor': {'module': 'identity_domains', 'class': 'MyAuthenticationFactorValidatorThirdPartyFactor'}, 'additional-attributes': {'module': 'identity_domains', 'class': 'list[MyAuthenticationFactorValidatorAdditionalAttributes]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'security-questions': {'module': 'identity_domains', 'class': 'list[MyAuthenticationFactorValidatorSecurityQuestions]'}, 'policy-enabled-second-factors': {'module': 'identity_domains', 'class': 'list[string]'}, 'third-party-factor': {'module': 'identity_domains', 'class': 'MyAuthenticationFactorValidatorThirdPartyFactor'}, 'additional-attributes': {'module': 'identity_domains', 'class': 'list[MyAuthenticationFactorValidatorAdditionalAttributes]'}}, output_type={'module': 'identity_domains', 'class': 'MyAuthenticationFactorValidator'})
@cli_util.wrap_exceptions
def create_my_authentication_factor_validator(ctx, from_json, schemas, auth_factor, scenario, authorization, resource_type_schema_version, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, request_id, otp_code, device_id, status, user_id, user_name, display_name, message, type, update_user_preference, preference_type, security_questions, name, platform, location, trusted_token_id, kmsi_token_id, policy_enabled_second_factors, create_trusted_agent, create_kmsi_token, is_acc_rec_enabled, policy_trusted_frequency_mins, third_party_factor, additional_attributes):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['authFactor'] = auth_factor
    _details['scenario'] = scenario

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if request_id is not None:
        _details['requestId'] = request_id

    if otp_code is not None:
        _details['otpCode'] = otp_code

    if device_id is not None:
        _details['deviceId'] = device_id

    if status is not None:
        _details['status'] = status

    if user_id is not None:
        _details['userId'] = user_id

    if user_name is not None:
        _details['userName'] = user_name

    if display_name is not None:
        _details['displayName'] = display_name

    if message is not None:
        _details['message'] = message

    if type is not None:
        _details['type'] = type

    if update_user_preference is not None:
        _details['updateUserPreference'] = update_user_preference

    if preference_type is not None:
        _details['preferenceType'] = preference_type

    if security_questions is not None:
        _details['securityQuestions'] = cli_util.parse_json_parameter("security_questions", security_questions)

    if name is not None:
        _details['name'] = name

    if platform is not None:
        _details['platform'] = platform

    if location is not None:
        _details['location'] = location

    if trusted_token_id is not None:
        _details['trustedTokenId'] = trusted_token_id

    if kmsi_token_id is not None:
        _details['kmsiTokenId'] = kmsi_token_id

    if policy_enabled_second_factors is not None:
        _details['policyEnabledSecondFactors'] = cli_util.parse_json_parameter("policy_enabled_second_factors", policy_enabled_second_factors)

    if create_trusted_agent is not None:
        _details['createTrustedAgent'] = create_trusted_agent

    if create_kmsi_token is not None:
        _details['createKmsiToken'] = create_kmsi_token

    if is_acc_rec_enabled is not None:
        _details['isAccRecEnabled'] = is_acc_rec_enabled

    if policy_trusted_frequency_mins is not None:
        _details['policyTrustedFrequencyMins'] = policy_trusted_frequency_mins

    if third_party_factor is not None:
        _details['thirdPartyFactor'] = cli_util.parse_json_parameter("third_party_factor", third_party_factor)

    if additional_attributes is not None:
        _details['additionalAttributes'] = cli_util.parse_json_parameter("additional_attributes", additional_attributes)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_my_authentication_factor_validator(
        my_authentication_factor_validator=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_authentication_factors_remover_group.command(name=cli_util.override('identity_domains.create_my_authentication_factors_remover.command_name', 'create'), help=u"""Remove All Authentication Factor Channels for a User

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createMyAuthenticationFactorsRemover)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--user', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--type', type=custom_types.CliCaseInsensitiveChoice(["KMSI", "MFA", "ACCOUNTRECOVERY", "ALL"]), help=u"""Specifies the type of factors to remove. Either MFA factors or AccountRecovery factors or All factors

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: readWrite  - returned: default  - uniqueness: none  - idcsSearchable: false""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'MyAuthenticationFactorsRemoverUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'MyAuthenticationFactorsRemoverUser'}}, output_type={'module': 'identity_domains', 'class': 'MyAuthenticationFactorsRemover'})
@cli_util.wrap_exceptions
def create_my_authentication_factors_remover(ctx, from_json, schemas, user, authorization, resource_type_schema_version, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, type):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['user'] = cli_util.parse_json_parameter("user", user)

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if type is not None:
        _details['type'] = type

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_my_authentication_factors_remover(
        my_authentication_factors_remover=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_customer_secret_key_group.command(name=cli_util.override('identity_domains.create_my_customer_secret_key.command_name', 'create'), help=u"""Add a user's customer secret key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createMyCustomerSecretKey)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--display-name', help=u"""Display Name

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readWrite  - required: false  - returned: default""")
@cli_util.option('--description', help=u"""Description

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readWrite  - required: false  - returned: default""")
@cli_util.option('--status', type=custom_types.CliCaseInsensitiveChoice(["ACTIVE", "INACTIVE"]), help=u"""User credential status

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: never  - type: string  - uniqueness: none""")
@cli_util.option('--expires-on', help=u"""User credential expires on

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: dateTime  - uniqueness: none""")
@cli_util.option('--access-key', help=u"""Access key

**SCIM++ Properties:**  - caseExact: true  - type: string  - mutability: readOnly  - required: false  - returned: default""")
@cli_util.option('--user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'MyCustomerSecretKeyUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'MyCustomerSecretKeyUser'}}, output_type={'module': 'identity_domains', 'class': 'MyCustomerSecretKey'})
@cli_util.wrap_exceptions
def create_my_customer_secret_key(ctx, from_json, schemas, authorization, resource_type_schema_version, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, display_name, description, status, expires_on, access_key, user):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if display_name is not None:
        _details['displayName'] = display_name

    if description is not None:
        _details['description'] = description

    if status is not None:
        _details['status'] = status

    if expires_on is not None:
        _details['expiresOn'] = expires_on

    if access_key is not None:
        _details['accessKey'] = access_key

    if user is not None:
        _details['user'] = cli_util.parse_json_parameter("user", user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_my_customer_secret_key(
        my_customer_secret_key=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_o_auth2_client_credential_group.command(name=cli_util.override('identity_domains.create_my_o_auth2_client_credential.command_name', 'create'), help=u"""Add a user's oauth2 client credential

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createMyOAuth2ClientCredential)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--name', required=True, help=u"""Name

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readWrite  - required: true  - returned: default""")
@cli_util.option('--scopes', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""Scopes

**SCIM++ Properties:**  - caseExact: false  - idcsCompositeKey: [audience, scope]  - type: complex  - mutability: readWrite  - multiValued: true  - required: true  - returned: default""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--description', help=u"""Description

**Added In:** 2101262133

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readWrite  - required: false  - returned: default""")
@cli_util.option('--status', type=custom_types.CliCaseInsensitiveChoice(["ACTIVE", "INACTIVE"]), help=u"""User credential status

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: never  - type: string  - uniqueness: none""")
@cli_util.option('--expires-on', help=u"""User credential expires on

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: dateTime  - uniqueness: none""")
@cli_util.option('--is-reset-secret', type=click.BOOL, help=u"""Specifies if secret need to be reset

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: writeOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'scopes': {'module': 'identity_domains', 'class': 'list[MyOAuth2ClientCredentialScopes]'}, 'user': {'module': 'identity_domains', 'class': 'MyOAuth2ClientCredentialUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'scopes': {'module': 'identity_domains', 'class': 'list[MyOAuth2ClientCredentialScopes]'}, 'user': {'module': 'identity_domains', 'class': 'MyOAuth2ClientCredentialUser'}}, output_type={'module': 'identity_domains', 'class': 'MyOAuth2ClientCredential'})
@cli_util.wrap_exceptions
def create_my_o_auth2_client_credential(ctx, from_json, schemas, name, scopes, authorization, resource_type_schema_version, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, description, status, expires_on, is_reset_secret, user):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['name'] = name
    _details['scopes'] = cli_util.parse_json_parameter("scopes", scopes)

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if description is not None:
        _details['description'] = description

    if status is not None:
        _details['status'] = status

    if expires_on is not None:
        _details['expiresOn'] = expires_on

    if is_reset_secret is not None:
        _details['isResetSecret'] = is_reset_secret

    if user is not None:
        _details['user'] = cli_util.parse_json_parameter("user", user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_my_o_auth2_client_credential(
        my_o_auth2_client_credential=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_smtp_credential_group.command(name=cli_util.override('identity_domains.create_my_smtp_credential.command_name', 'create'), help=u"""Add a user's smtp credenials

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createMySmtpCredential)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--user-name', required=True, help=u"""User name

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readOnly  - required: true  - returned: default""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--description', help=u"""Description

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readWrite  - required: false  - returned: default""")
@cli_util.option('--status', type=custom_types.CliCaseInsensitiveChoice(["ACTIVE", "INACTIVE"]), help=u"""User credential status

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: never  - type: string  - uniqueness: none""")
@cli_util.option('--expires-on', help=u"""User credential expires on

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: dateTime  - uniqueness: none""")
@cli_util.option('--user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'MySmtpCredentialUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'MySmtpCredentialUser'}}, output_type={'module': 'identity_domains', 'class': 'MySmtpCredential'})
@cli_util.wrap_exceptions
def create_my_smtp_credential(ctx, from_json, schemas, user_name, authorization, resource_type_schema_version, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, description, status, expires_on, user):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['userName'] = user_name

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if description is not None:
        _details['description'] = description

    if status is not None:
        _details['status'] = status

    if expires_on is not None:
        _details['expiresOn'] = expires_on

    if user is not None:
        _details['user'] = cli_util.parse_json_parameter("user", user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_my_smtp_credential(
        my_smtp_credential=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_support_account_group.command(name=cli_util.override('identity_domains.create_my_support_account.command_name', 'create'), help=u"""Create a Support Account

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createMySupportAccount)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--token', required=True, help=u"""User Support Account Token

**Added In:** 2102181953

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - required: true  - returned: never  - type: string  - uniqueness: none""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--provider', type=custom_types.CliCaseInsensitiveChoice(["MOS"]), help=u"""User Support Account Provider

**Added In:** 2102181953

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - idcsSearchable: true  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--user-id', help=u"""User Support User Id

**Added In:** 2102181953

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readOnly  - idcsSearchable: true  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'MySupportAccountUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'MySupportAccountUser'}}, output_type={'module': 'identity_domains', 'class': 'MySupportAccount'})
@cli_util.wrap_exceptions
def create_my_support_account(ctx, from_json, schemas, token, authorization, resource_type_schema_version, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, provider, user_id, user):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['token'] = token

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if provider is not None:
        _details['provider'] = provider

    if user_id is not None:
        _details['userId'] = user_id

    if user is not None:
        _details['user'] = cli_util.parse_json_parameter("user", user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_my_support_account(
        my_support_account=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_user_db_credential_group.command(name=cli_util.override('identity_domains.create_my_user_db_credential.command_name', 'create'), help=u"""Set a User's DbCredential

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createMyUserDbCredential)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--db-password', required=True, help=u"""The db password of the user

**SCIM++ Properties:**  - type: string  - mutability: immutable  - returned: default  - required: true""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--name', help=u"""Name

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readOnly  - required: false  - returned: default""")
@cli_util.option('--description', help=u"""Description

**Added In:** 2109020413

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readWrite  - required: false  - returned: default""")
@cli_util.option('--mixed-db-password', help=u"""The db password of the user with mixed salt

**SCIM++ Properties:**  - type: string  - mutability: readOnly  - returned: default  - required: false""")
@cli_util.option('--salt', help=u"""The salt of the password

**SCIM++ Properties:**  - type: string  - mutability: readOnly  - returned: default  - required: false""")
@cli_util.option('--mixed-salt', help=u"""The mixed salt of the password

**SCIM++ Properties:**  - type: string  - mutability: readOnly  - returned: default  - required: false""")
@cli_util.option('--last-set-date', help=u"""A DateTime that specifies the date and time when the current db password was set

**SCIM++ Properties:**  - type: dateTime  - mutability: readOnly  - returned: default""")
@cli_util.option('--expired', type=click.BOOL, help=u"""Indicates that the db password has expired

**SCIM++ Properties:**  - type: boolean  - mutability: readOnly  - returned: default""")
@cli_util.option('--status', type=custom_types.CliCaseInsensitiveChoice(["ACTIVE", "INACTIVE"]), help=u"""User credential status

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: never  - type: string  - uniqueness: none""")
@cli_util.option('--expires-on', help=u"""User credential expires on

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: dateTime  - uniqueness: none""")
@cli_util.option('--user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'MyUserDbCredentialsUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'MyUserDbCredentialsUser'}}, output_type={'module': 'identity_domains', 'class': 'MyUserDbCredential'})
@cli_util.wrap_exceptions
def create_my_user_db_credential(ctx, from_json, schemas, db_password, authorization, resource_type_schema_version, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, name, description, mixed_db_password, salt, mixed_salt, last_set_date, expired, status, expires_on, user):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['dbPassword'] = db_password

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if name is not None:
        _details['name'] = name

    if description is not None:
        _details['description'] = description

    if mixed_db_password is not None:
        _details['mixedDbPassword'] = mixed_db_password

    if salt is not None:
        _details['salt'] = salt

    if mixed_salt is not None:
        _details['mixedSalt'] = mixed_salt

    if last_set_date is not None:
        _details['lastSetDate'] = last_set_date

    if expired is not None:
        _details['expired'] = expired

    if status is not None:
        _details['status'] = status

    if expires_on is not None:
        _details['expiresOn'] = expires_on

    if user is not None:
        _details['user'] = cli_util.parse_json_parameter("user", user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_my_user_db_credential(
        my_user_db_credential=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@o_auth2_client_credential_group.command(name=cli_util.override('identity_domains.create_o_auth2_client_credential.command_name', 'create'), help=u"""Add a user's oauth2 client credential

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createOAuth2ClientCredential)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--name', required=True, help=u"""Name

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readWrite  - required: true  - returned: default""")
@cli_util.option('--scopes', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""Scopes

**SCIM++ Properties:**  - caseExact: false  - idcsCompositeKey: [audience, scope]  - type: complex  - mutability: readWrite  - multiValued: true  - required: true  - returned: default""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--description', help=u"""Description

**Added In:** 2101262133

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readWrite  - required: false  - returned: default""")
@cli_util.option('--status', type=custom_types.CliCaseInsensitiveChoice(["ACTIVE", "INACTIVE"]), help=u"""User credential status

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: never  - type: string  - uniqueness: none""")
@cli_util.option('--expires-on', help=u"""User credential expires on

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: dateTime  - uniqueness: none""")
@cli_util.option('--is-reset-secret', type=click.BOOL, help=u"""Specifies if secret need to be reset

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: writeOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionself-change-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'scopes': {'module': 'identity_domains', 'class': 'list[OAuth2ClientCredentialScopes]'}, 'user': {'module': 'identity_domains', 'class': 'OAuth2ClientCredentialUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'scopes': {'module': 'identity_domains', 'class': 'list[OAuth2ClientCredentialScopes]'}, 'user': {'module': 'identity_domains', 'class': 'OAuth2ClientCredentialUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}}, output_type={'module': 'identity_domains', 'class': 'OAuth2ClientCredential'})
@cli_util.wrap_exceptions
def create_o_auth2_client_credential(ctx, from_json, schemas, name, scopes, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, description, status, expires_on, is_reset_secret, user, urnietfparamsscimschemasoracleidcsextensionself_change_user):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['name'] = name
    _details['scopes'] = cli_util.parse_json_parameter("scopes", scopes)

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if description is not None:
        _details['description'] = description

    if status is not None:
        _details['status'] = status

    if expires_on is not None:
        _details['expiresOn'] = expires_on

    if is_reset_secret is not None:
        _details['isResetSecret'] = is_reset_secret

    if user is not None:
        _details['user'] = cli_util.parse_json_parameter("user", user)

    if urnietfparamsscimschemasoracleidcsextensionself_change_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:selfChange:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionself_change_user", urnietfparamsscimschemasoracleidcsextensionself_change_user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_o_auth2_client_credential(
        o_auth2_client_credential=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@password_policy_group.command(name=cli_util.override('identity_domains.create_password_policy.command_name', 'create'), help=u"""Create a Password Policy

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createPasswordPolicy)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--name', required=True, help=u"""A String that is the name of the policy to display to the user. This is the only mandatory attribute for a password policy.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: true  - returned: always  - type: string  - uniqueness: server""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--external-id', help=u"""An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--description', help=u"""A String that describes the password policy

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--max-length', type=click.INT, help=u"""The maximum password length (in characters). A value of 0 or no value indicates no maximum length restriction.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--min-length', type=click.INT, help=u"""The minimum password length (in characters). A value of 0 or no value indicates no minimum length restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--min-alphas', type=click.INT, help=u"""The minimum number of alphabetic characters in a password.  A value of 0 or no value indicates no minimum alphas restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--min-numerals', type=click.INT, help=u"""The minimum number of numeric characters in a password.  A value of 0 or no value indicates no minimum numeric character restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--min-alpha-numerals', type=click.INT, help=u"""The minimum number of a combination of alphabetic and numeric characters in a password.  A value of 0 or no value indicates no minimum alphanumeric character restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--min-special-chars', type=click.INT, help=u"""The minimum number of special characters in a password. A value of 0 or no value indicates no minimum special characters restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--max-special-chars', type=click.INT, help=u"""The maximum number of special characters in a password.  A value of 0 or no value indicates no maximum special characters restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--min-lower-case', type=click.INT, help=u"""The minimum number of lowercase alphabetic characters in a password.  A value of 0 or no value indicates no minimum lowercase restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--min-upper-case', type=click.INT, help=u"""The minimum number of uppercase alphabetic characters in a password. A value of 0 or no value indicates no minimum uppercase restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--min-unique-chars', type=click.INT, help=u"""The minimum number of unique characters in a password.  A value of 0 or no value indicates no minimum unique characters restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--max-repeated-chars', type=click.INT, help=u"""The maximum number of repeated characters allowed in a password.  A value of 0 or no value indicates no such restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--starts-with-alphabet', type=click.BOOL, help=u"""Indicates that the password must begin with an alphabetic character

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--first-name-disallowed', type=click.BOOL, help=u"""Indicates a sequence of characters that match the user's first name of given name cannot be the password. Password validation against policy will be ignored if length of first name is less than or equal to 3 characters.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--last-name-disallowed', type=click.BOOL, help=u"""Indicates a sequence of characters that match the user's last name of given name cannot be the password. Password validation against policy will be ignored if length of last name is less than or equal to 3 characters.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--user-name-disallowed', type=click.BOOL, help=u"""Indicates a sequence of characters that match the username cannot be the password. Password validation against policy will be ignored if length of user name is less than or equal to 3 characters.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--min-password-age', type=click.INT, help=u"""Minimum time after which the user can resubmit the reset password request

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--password-expires-after', type=click.INT, help=u"""The number of days after which the password expires automatically

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--password-expire-warning', type=click.INT, help=u"""An integer indicating the number of days before which the user should be warned about password expiry.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--required-chars', help=u"""A String value whose contents indicate a set of characters that must appear, in any sequence, in a password value

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--disallowed-chars', help=u"""A String value whose contents indicate a set of characters that cannot appear, in any sequence, in a password value

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--allowed-chars', help=u"""A String value whose contents indicate a set of characters that can appear, in any sequence, in a password value

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--disallowed-substrings', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A String value whose contents indicate a set of substrings that cannot appear, in any sequence, in a password value

**SCIM++ Properties:**  - caseExact: false  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--dictionary-word-disallowed', type=click.BOOL, help=u"""Indicates whether the password can match a dictionary word

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--dictionary-location', help=u"""A Reference value that contains the URI of a dictionary of words not allowed to appear within a password value

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--dictionary-delimiter', help=u"""A delimiter used to separate characters in the dictionary file

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--max-incorrect-attempts', type=click.INT, help=u"""An integer that represents the maximum number of failed logins before an account is locked

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--lockout-duration', type=click.INT, help=u"""The time period in minutes to lock out a user account when the threshold of invalid login attempts is reached. The available range is from 5 through 1440 minutes (24 hours).

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--num-passwords-in-history', type=click.INT, help=u"""The number of passwords that will be kept in history that may not be used as a password

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--password-strength', type=custom_types.CliCaseInsensitiveChoice(["Simple", "Standard", "Custom"]), help=u"""Indicates whether the password policy is configured as Simple, Standard, or Custom.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--force-password-reset', type=click.BOOL, help=u"""Indicates whether all of the users should be forced to reset their password on the next login (to comply with new password policy changes)

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: writeOnly  - required: false  - returned: never  - type: boolean  - uniqueness: none""")
@cli_util.option('--groups', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of groups that the password policy belongs to.

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: false  - idcsCompositeKey: [value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type PasswordPolicyGroups.  For documentation on PasswordPolicyGroups please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/PasswordPolicyGroups.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--priority', type=click.INT, help=u"""Password policy priority

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - idcsMinValue: 1  - uniqueness: server""")
@cli_util.option('--configured-password-policy-rules', type=custom_types.CLI_COMPLEX_TYPE, help=u"""List of password policy rules that have values set. This map of stringKey:stringValue pairs can be used to aid users while setting/resetting password

**SCIM++ Properties:**  - caseExact: false  - idcsCompositeKey: [key]  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type PasswordPolicyConfiguredPasswordPolicyRules.  For documentation on PasswordPolicyConfiguredPasswordPolicyRules please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/PasswordPolicyConfiguredPasswordPolicyRules.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'disallowed-substrings': {'module': 'identity_domains', 'class': 'list[string]'}, 'groups': {'module': 'identity_domains', 'class': 'list[PasswordPolicyGroups]'}, 'configured-password-policy-rules': {'module': 'identity_domains', 'class': 'list[PasswordPolicyConfiguredPasswordPolicyRules]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'disallowed-substrings': {'module': 'identity_domains', 'class': 'list[string]'}, 'groups': {'module': 'identity_domains', 'class': 'list[PasswordPolicyGroups]'}, 'configured-password-policy-rules': {'module': 'identity_domains', 'class': 'list[PasswordPolicyConfiguredPasswordPolicyRules]'}}, output_type={'module': 'identity_domains', 'class': 'PasswordPolicy'})
@cli_util.wrap_exceptions
def create_password_policy(ctx, from_json, schemas, name, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, external_id, description, max_length, min_length, min_alphas, min_numerals, min_alpha_numerals, min_special_chars, max_special_chars, min_lower_case, min_upper_case, min_unique_chars, max_repeated_chars, starts_with_alphabet, first_name_disallowed, last_name_disallowed, user_name_disallowed, min_password_age, password_expires_after, password_expire_warning, required_chars, disallowed_chars, allowed_chars, disallowed_substrings, dictionary_word_disallowed, dictionary_location, dictionary_delimiter, max_incorrect_attempts, lockout_duration, num_passwords_in_history, password_strength, force_password_reset, groups, priority, configured_password_policy_rules):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['name'] = name

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if external_id is not None:
        _details['externalId'] = external_id

    if description is not None:
        _details['description'] = description

    if max_length is not None:
        _details['maxLength'] = max_length

    if min_length is not None:
        _details['minLength'] = min_length

    if min_alphas is not None:
        _details['minAlphas'] = min_alphas

    if min_numerals is not None:
        _details['minNumerals'] = min_numerals

    if min_alpha_numerals is not None:
        _details['minAlphaNumerals'] = min_alpha_numerals

    if min_special_chars is not None:
        _details['minSpecialChars'] = min_special_chars

    if max_special_chars is not None:
        _details['maxSpecialChars'] = max_special_chars

    if min_lower_case is not None:
        _details['minLowerCase'] = min_lower_case

    if min_upper_case is not None:
        _details['minUpperCase'] = min_upper_case

    if min_unique_chars is not None:
        _details['minUniqueChars'] = min_unique_chars

    if max_repeated_chars is not None:
        _details['maxRepeatedChars'] = max_repeated_chars

    if starts_with_alphabet is not None:
        _details['startsWithAlphabet'] = starts_with_alphabet

    if first_name_disallowed is not None:
        _details['firstNameDisallowed'] = first_name_disallowed

    if last_name_disallowed is not None:
        _details['lastNameDisallowed'] = last_name_disallowed

    if user_name_disallowed is not None:
        _details['userNameDisallowed'] = user_name_disallowed

    if min_password_age is not None:
        _details['minPasswordAge'] = min_password_age

    if password_expires_after is not None:
        _details['passwordExpiresAfter'] = password_expires_after

    if password_expire_warning is not None:
        _details['passwordExpireWarning'] = password_expire_warning

    if required_chars is not None:
        _details['requiredChars'] = required_chars

    if disallowed_chars is not None:
        _details['disallowedChars'] = disallowed_chars

    if allowed_chars is not None:
        _details['allowedChars'] = allowed_chars

    if disallowed_substrings is not None:
        _details['disallowedSubstrings'] = cli_util.parse_json_parameter("disallowed_substrings", disallowed_substrings)

    if dictionary_word_disallowed is not None:
        _details['dictionaryWordDisallowed'] = dictionary_word_disallowed

    if dictionary_location is not None:
        _details['dictionaryLocation'] = dictionary_location

    if dictionary_delimiter is not None:
        _details['dictionaryDelimiter'] = dictionary_delimiter

    if max_incorrect_attempts is not None:
        _details['maxIncorrectAttempts'] = max_incorrect_attempts

    if lockout_duration is not None:
        _details['lockoutDuration'] = lockout_duration

    if num_passwords_in_history is not None:
        _details['numPasswordsInHistory'] = num_passwords_in_history

    if password_strength is not None:
        _details['passwordStrength'] = password_strength

    if force_password_reset is not None:
        _details['forcePasswordReset'] = force_password_reset

    if groups is not None:
        _details['groups'] = cli_util.parse_json_parameter("groups", groups)

    if priority is not None:
        _details['priority'] = priority

    if configured_password_policy_rules is not None:
        _details['configuredPasswordPolicyRules'] = cli_util.parse_json_parameter("configured_password_policy_rules", configured_password_policy_rules)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_password_policy(
        password_policy=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@smtp_credential_group.command(name=cli_util.override('identity_domains.create_smtp_credential.command_name', 'create'), help=u"""Add a user's smtp credenials

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createSmtpCredential)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--user-name', required=True, help=u"""User name

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readOnly  - required: true  - returned: default""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--description', help=u"""Description

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readWrite  - required: false  - returned: default""")
@cli_util.option('--status', type=custom_types.CliCaseInsensitiveChoice(["ACTIVE", "INACTIVE"]), help=u"""User credential status

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: never  - type: string  - uniqueness: none""")
@cli_util.option('--expires-on', help=u"""User credential expires on

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: dateTime  - uniqueness: none""")
@cli_util.option('--user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionself-change-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'SmtpCredentialUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'SmtpCredentialUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}}, output_type={'module': 'identity_domains', 'class': 'SmtpCredential'})
@cli_util.wrap_exceptions
def create_smtp_credential(ctx, from_json, schemas, user_name, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, description, status, expires_on, user, urnietfparamsscimschemasoracleidcsextensionself_change_user):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['userName'] = user_name

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if description is not None:
        _details['description'] = description

    if status is not None:
        _details['status'] = status

    if expires_on is not None:
        _details['expiresOn'] = expires_on

    if user is not None:
        _details['user'] = cli_util.parse_json_parameter("user", user)

    if urnietfparamsscimschemasoracleidcsextensionself_change_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:selfChange:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionself_change_user", urnietfparamsscimschemasoracleidcsextensionself_change_user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_smtp_credential(
        smtp_credential=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@user_group.command(name=cli_util.override('identity_domains.create_user.command_name', 'create'), help=u"""Create a User

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createUser)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--user-name', required=True, help=u"""User name

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: User ID  - idcsCsvAttributeNameMappings: [[columnHeaderName:User Name, deprecatedColumnHeaderName:User ID]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: true  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--name', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--external-id', help=u"""An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeNameMappings: [[columnHeaderName:External Id]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--description', help=u"""Description of the user

**Added In:** 2012271618

**SCIM++ Properties:**  - caseExact: false  - idcsPii: true  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--display-name', help=u"""Display name

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Display Name  - idcsCsvAttributeNameMappings: [[columnHeaderName:Display Name]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--nick-name', help=u"""Nick name

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Nick Name  - idcsCsvAttributeNameMappings: [[columnHeaderName:Nick Name]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--profile-url', help=u"""A fully-qualified URL to a page representing the User's online profile

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Profile URL  - idcsCsvAttributeNameMappings: [[columnHeaderName:Profile Url]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: reference  - uniqueness: none""")
@cli_util.option('--title', help=u"""Title

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Title  - idcsCsvAttributeNameMappings: [[columnHeaderName:Title]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--user-type', type=custom_types.CliCaseInsensitiveChoice(["Contractor", "Employee", "Intern", "Temp", "External", "Service", "Generic"]), help=u"""Used to identify the organization-to-user relationship

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: User Type  - idcsCsvAttributeNameMappings: [[columnHeaderName:User Type]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--locale', help=u"""Used to indicate the User's default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Locale  - idcsCsvAttributeNameMappings: [[columnHeaderName:Locale]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--preferred-language', help=u"""User's preferred written or spoken language used for localized user interfaces

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Preferred Language  - idcsCsvAttributeNameMappings: [[columnHeaderName:Preferred Language]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--timezone', help=u"""User's timezone

**SCIM++ Properties:**  - caseExact: false  - idcsCanonicalValueSourceFilter: attrName eq \"timezones\" and attrValues.value eq \"$(timezone)\"  - idcsCanonicalValueSourceResourceType: AllowedValue  - idcsCsvAttributeName: TimeZone  - idcsCsvAttributeNameMappings: [[columnHeaderName:Time Zone, deprecatedColumnHeaderName:TimeZone]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--active', type=click.BOOL, help=u"""User status

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Active  - idcsCsvAttributeNameMappings: [[columnHeaderName:Active]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--password', help=u"""Password attribute. Max length for password is controlled via Password Policy.

**SCIM++ Properties:**  - idcsCsvAttributeName: Password  - idcsCsvAttributeNameMappings: [[columnHeaderName:Password]]  - idcsPii: true  - idcsSearchable: false  - idcsSensitive: hash  - multiValued: false  - mutability: writeOnly  - required: false  - returned: never  - type: string  - uniqueness: none""")
@cli_util.option('--emails', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A complex attribute representing emails

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - idcsCsvAttributeNameMappings: [[columnHeaderName:Work Email, mapsTo:emails[work].value], [columnHeaderName:Home Email, mapsTo:emails[home].value], [columnHeaderName:Primary Email Type, mapsTo:emails[$(type)].primary], [columnHeaderName:Other Email, mapsTo:emails[other].value], [columnHeaderName:Recovery Email, mapsTo:emails[recovery].value], [columnHeaderName:Work Email Verified, mapsTo:emails[work].verified], [columnHeaderName:Home Email Verified, mapsTo:emails[home].verified], [columnHeaderName:Other Email Verified, mapsTo:emails[other].verified], [columnHeaderName:Recovery Email Verified, mapsTo:emails[recovery].verified]]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type UserEmails.  For documentation on UserEmails please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserEmails.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--phone-numbers', type=custom_types.CLI_COMPLEX_TYPE, help=u"""Phone numbers

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - idcsCsvAttributeNameMappings: [[columnHeaderName:Work Phone, mapsTo:phoneNumbers[work].value], [columnHeaderName:Mobile No, mapsTo:phoneNumbers[mobile].value], [columnHeaderName:Home Phone, mapsTo:phoneNumbers[home].value], [columnHeaderName:Fax, mapsTo:phoneNumbers[fax].value], [columnHeaderName:Pager, mapsTo:phoneNumbers[pager].value], [columnHeaderName:Other Phone, mapsTo:phoneNumbers[other].value], [columnHeaderName:Recovery Phone, mapsTo:phoneNumbers[recovery].value], [columnHeaderName:Primary Phone Type, mapsTo:phoneNumbers[$(type)].primary]]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type UserPhoneNumbers.  For documentation on UserPhoneNumbers please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserPhoneNumbers.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--ims', type=custom_types.CLI_COMPLEX_TYPE, help=u"""User's instant messaging addresses

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type UserIms.  For documentation on UserIms please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserIms.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--photos', type=custom_types.CLI_COMPLEX_TYPE, help=u"""URLs of photos for the User

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type UserPhotos.  For documentation on UserPhotos please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserPhotos.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--addresses', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.

**SCIM++ Properties:**  - idcsCompositeKey: [type]  - idcsCsvAttributeNameMappings: [[columnHeaderName:Work Address Street, deprecatedColumnHeaderName:Work Street Address, mapsTo:addresses[work].streetAddress], [columnHeaderName:Work Address Locality, deprecatedColumnHeaderName:Work City, mapsTo:addresses[work].locality], [columnHeaderName:Work Address Region, deprecatedColumnHeaderName:Work State, mapsTo:addresses[work].region], [columnHeaderName:Work Address Postal Code, deprecatedColumnHeaderName:Work Postal Code, mapsTo:addresses[work].postalCode], [columnHeaderName:Work Address Country, deprecatedColumnHeaderName:Work Country, mapsTo:addresses[work].country], [columnHeaderName:Work Address Formatted, mapsTo:addresses[work].formatted], [columnHeaderName:Home Address Formatted, mapsTo:addresses[home].formatted], [columnHeaderName:Other Address Formatted, mapsTo:addresses[other].formatted], [columnHeaderName:Home Address Street, mapsTo:addresses[home].streetAddress], [columnHeaderName:Other Address Street, mapsTo:addresses[other].streetAddress], [columnHeaderName:Home Address Locality, mapsTo:addresses[home].locality], [columnHeaderName:Other Address Locality, mapsTo:addresses[other].locality], [columnHeaderName:Home Address Region, mapsTo:addresses[home].region], [columnHeaderName:Other Address Region, mapsTo:addresses[other].region], [columnHeaderName:Home Address Country, mapsTo:addresses[home].country], [columnHeaderName:Other Address Country, mapsTo:addresses[other].country], [columnHeaderName:Home Address Postal Code, mapsTo:addresses[home].postalCode], [columnHeaderName:Other Address Postal Code, mapsTo:addresses[other].postalCode], [columnHeaderName:Primary Address Type, mapsTo:addresses[$(type)].primary]]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type Addresses.  For documentation on addresses please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Addresses.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--groups', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of groups that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated

**SCIM++ Properties:**  - idcsCompositeKey: [value]  - idcsSearchable: true  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type UserGroups.  For documentation on UserGroups please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserGroups.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--entitlements', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of entitlements for the User that represent a thing the User has.

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type UserEntitlements.  For documentation on UserEntitlements please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserEntitlements.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--roles', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of roles for the User that collectively represent who the User is; e.g., 'Student', 'Faculty'.

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type UserRoles.  For documentation on UserRoles please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserRoles.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--x509-certificates', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of certificates issued to the User.

**SCIM++ Properties:**  - idcsCompositeKey: [value]  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type UserX509Certificates.  For documentation on UserX509Certificates please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserX509Certificates.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasextensionenterprise2-0-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionuser-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionpassword-state-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionuser-state-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionposix-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionkerberos-user-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionmfa-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionadaptive-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionsff-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionsecurity-questions-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionself-registration-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionsocial-account-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensiondb-user-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionterms-of-use-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionpasswordless-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextension-oci-tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionuser-credentials-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensioncapabilities-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensiondb-credentials-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionself-change-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'name': {'module': 'identity_domains', 'class': 'UserName'}, 'emails': {'module': 'identity_domains', 'class': 'list[UserEmails]'}, 'phone-numbers': {'module': 'identity_domains', 'class': 'list[UserPhoneNumbers]'}, 'ims': {'module': 'identity_domains', 'class': 'list[UserIms]'}, 'photos': {'module': 'identity_domains', 'class': 'list[UserPhotos]'}, 'addresses': {'module': 'identity_domains', 'class': 'list[Addresses]'}, 'groups': {'module': 'identity_domains', 'class': 'list[UserGroups]'}, 'entitlements': {'module': 'identity_domains', 'class': 'list[UserEntitlements]'}, 'roles': {'module': 'identity_domains', 'class': 'list[UserRoles]'}, 'x509-certificates': {'module': 'identity_domains', 'class': 'list[UserX509Certificates]'}, 'urnietfparamsscimschemasextensionenterprise2-0-user': {'module': 'identity_domains', 'class': 'ExtensionEnterprise20User'}, 'urnietfparamsscimschemasoracleidcsextensionuser-user': {'module': 'identity_domains', 'class': 'ExtensionUserUser'}, 'urnietfparamsscimschemasoracleidcsextensionpassword-state-user': {'module': 'identity_domains', 'class': 'ExtensionPasswordStateUser'}, 'urnietfparamsscimschemasoracleidcsextensionuser-state-user': {'module': 'identity_domains', 'class': 'ExtensionUserStateUser'}, 'urnietfparamsscimschemasoracleidcsextensionposix-user': {'module': 'identity_domains', 'class': 'ExtensionPosixUser'}, 'urnietfparamsscimschemasoracleidcsextensionkerberos-user-user': {'module': 'identity_domains', 'class': 'ExtensionKerberosUserUser'}, 'urnietfparamsscimschemasoracleidcsextensionmfa-user': {'module': 'identity_domains', 'class': 'ExtensionMfaUser'}, 'urnietfparamsscimschemasoracleidcsextensionadaptive-user': {'module': 'identity_domains', 'class': 'ExtensionAdaptiveUser'}, 'urnietfparamsscimschemasoracleidcsextensionsff-user': {'module': 'identity_domains', 'class': 'ExtensionSffUser'}, 'urnietfparamsscimschemasoracleidcsextensionsecurity-questions-user': {'module': 'identity_domains', 'class': 'ExtensionSecurityQuestionsUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-registration-user': {'module': 'identity_domains', 'class': 'ExtensionSelfRegistrationUser'}, 'urnietfparamsscimschemasoracleidcsextensionsocial-account-user': {'module': 'identity_domains', 'class': 'ExtensionSocialAccountUser'}, 'urnietfparamsscimschemasoracleidcsextensiondb-user-user': {'module': 'identity_domains', 'class': 'ExtensionDbUserUser'}, 'urnietfparamsscimschemasoracleidcsextensionterms-of-use-user': {'module': 'identity_domains', 'class': 'ExtensionTermsOfUseUser'}, 'urnietfparamsscimschemasoracleidcsextensionpasswordless-user': {'module': 'identity_domains', 'class': 'ExtensionPasswordlessUser'}, 'urnietfparamsscimschemasoracleidcsextension-oci-tags': {'module': 'identity_domains', 'class': 'ExtensionOCITags'}, 'urnietfparamsscimschemasoracleidcsextensionuser-credentials-user': {'module': 'identity_domains', 'class': 'ExtensionUserCredentialsUser'}, 'urnietfparamsscimschemasoracleidcsextensioncapabilities-user': {'module': 'identity_domains', 'class': 'ExtensionCapabilitiesUser'}, 'urnietfparamsscimschemasoracleidcsextensiondb-credentials-user': {'module': 'identity_domains', 'class': 'ExtensionDbCredentialsUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'name': {'module': 'identity_domains', 'class': 'UserName'}, 'emails': {'module': 'identity_domains', 'class': 'list[UserEmails]'}, 'phone-numbers': {'module': 'identity_domains', 'class': 'list[UserPhoneNumbers]'}, 'ims': {'module': 'identity_domains', 'class': 'list[UserIms]'}, 'photos': {'module': 'identity_domains', 'class': 'list[UserPhotos]'}, 'addresses': {'module': 'identity_domains', 'class': 'list[Addresses]'}, 'groups': {'module': 'identity_domains', 'class': 'list[UserGroups]'}, 'entitlements': {'module': 'identity_domains', 'class': 'list[UserEntitlements]'}, 'roles': {'module': 'identity_domains', 'class': 'list[UserRoles]'}, 'x509-certificates': {'module': 'identity_domains', 'class': 'list[UserX509Certificates]'}, 'urnietfparamsscimschemasextensionenterprise2-0-user': {'module': 'identity_domains', 'class': 'ExtensionEnterprise20User'}, 'urnietfparamsscimschemasoracleidcsextensionuser-user': {'module': 'identity_domains', 'class': 'ExtensionUserUser'}, 'urnietfparamsscimschemasoracleidcsextensionpassword-state-user': {'module': 'identity_domains', 'class': 'ExtensionPasswordStateUser'}, 'urnietfparamsscimschemasoracleidcsextensionuser-state-user': {'module': 'identity_domains', 'class': 'ExtensionUserStateUser'}, 'urnietfparamsscimschemasoracleidcsextensionposix-user': {'module': 'identity_domains', 'class': 'ExtensionPosixUser'}, 'urnietfparamsscimschemasoracleidcsextensionkerberos-user-user': {'module': 'identity_domains', 'class': 'ExtensionKerberosUserUser'}, 'urnietfparamsscimschemasoracleidcsextensionmfa-user': {'module': 'identity_domains', 'class': 'ExtensionMfaUser'}, 'urnietfparamsscimschemasoracleidcsextensionadaptive-user': {'module': 'identity_domains', 'class': 'ExtensionAdaptiveUser'}, 'urnietfparamsscimschemasoracleidcsextensionsff-user': {'module': 'identity_domains', 'class': 'ExtensionSffUser'}, 'urnietfparamsscimschemasoracleidcsextensionsecurity-questions-user': {'module': 'identity_domains', 'class': 'ExtensionSecurityQuestionsUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-registration-user': {'module': 'identity_domains', 'class': 'ExtensionSelfRegistrationUser'}, 'urnietfparamsscimschemasoracleidcsextensionsocial-account-user': {'module': 'identity_domains', 'class': 'ExtensionSocialAccountUser'}, 'urnietfparamsscimschemasoracleidcsextensiondb-user-user': {'module': 'identity_domains', 'class': 'ExtensionDbUserUser'}, 'urnietfparamsscimschemasoracleidcsextensionterms-of-use-user': {'module': 'identity_domains', 'class': 'ExtensionTermsOfUseUser'}, 'urnietfparamsscimschemasoracleidcsextensionpasswordless-user': {'module': 'identity_domains', 'class': 'ExtensionPasswordlessUser'}, 'urnietfparamsscimschemasoracleidcsextension-oci-tags': {'module': 'identity_domains', 'class': 'ExtensionOCITags'}, 'urnietfparamsscimschemasoracleidcsextensionuser-credentials-user': {'module': 'identity_domains', 'class': 'ExtensionUserCredentialsUser'}, 'urnietfparamsscimschemasoracleidcsextensioncapabilities-user': {'module': 'identity_domains', 'class': 'ExtensionCapabilitiesUser'}, 'urnietfparamsscimschemasoracleidcsextensiondb-credentials-user': {'module': 'identity_domains', 'class': 'ExtensionDbCredentialsUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}}, output_type={'module': 'identity_domains', 'class': 'User'})
@cli_util.wrap_exceptions
def create_user(ctx, from_json, schemas, user_name, name, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, external_id, description, display_name, nick_name, profile_url, title, user_type, locale, preferred_language, timezone, active, password, emails, phone_numbers, ims, photos, addresses, groups, entitlements, roles, x509_certificates, urnietfparamsscimschemasextensionenterprise2_0_user, urnietfparamsscimschemasoracleidcsextensionuser_user, urnietfparamsscimschemasoracleidcsextensionpassword_state_user, urnietfparamsscimschemasoracleidcsextensionuser_state_user, urnietfparamsscimschemasoracleidcsextensionposix_user, urnietfparamsscimschemasoracleidcsextensionkerberos_user_user, urnietfparamsscimschemasoracleidcsextensionmfa_user, urnietfparamsscimschemasoracleidcsextensionadaptive_user, urnietfparamsscimschemasoracleidcsextensionsff_user, urnietfparamsscimschemasoracleidcsextensionsecurity_questions_user, urnietfparamsscimschemasoracleidcsextensionself_registration_user, urnietfparamsscimschemasoracleidcsextensionsocial_account_user, urnietfparamsscimschemasoracleidcsextensiondb_user_user, urnietfparamsscimschemasoracleidcsextensionterms_of_use_user, urnietfparamsscimschemasoracleidcsextensionpasswordless_user, urnietfparamsscimschemasoracleidcsextension_oci_tags, urnietfparamsscimschemasoracleidcsextensionuser_credentials_user, urnietfparamsscimschemasoracleidcsextensioncapabilities_user, urnietfparamsscimschemasoracleidcsextensiondb_credentials_user, urnietfparamsscimschemasoracleidcsextensionself_change_user):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['userName'] = user_name
    _details['name'] = cli_util.parse_json_parameter("name", name)

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if external_id is not None:
        _details['externalId'] = external_id

    if description is not None:
        _details['description'] = description

    if display_name is not None:
        _details['displayName'] = display_name

    if nick_name is not None:
        _details['nickName'] = nick_name

    if profile_url is not None:
        _details['profileUrl'] = profile_url

    if title is not None:
        _details['title'] = title

    if user_type is not None:
        _details['userType'] = user_type

    if locale is not None:
        _details['locale'] = locale

    if preferred_language is not None:
        _details['preferredLanguage'] = preferred_language

    if timezone is not None:
        _details['timezone'] = timezone

    if active is not None:
        _details['active'] = active

    if password is not None:
        _details['password'] = password

    if emails is not None:
        _details['emails'] = cli_util.parse_json_parameter("emails", emails)

    if phone_numbers is not None:
        _details['phoneNumbers'] = cli_util.parse_json_parameter("phone_numbers", phone_numbers)

    if ims is not None:
        _details['ims'] = cli_util.parse_json_parameter("ims", ims)

    if photos is not None:
        _details['photos'] = cli_util.parse_json_parameter("photos", photos)

    if addresses is not None:
        _details['addresses'] = cli_util.parse_json_parameter("addresses", addresses)

    if groups is not None:
        _details['groups'] = cli_util.parse_json_parameter("groups", groups)

    if entitlements is not None:
        _details['entitlements'] = cli_util.parse_json_parameter("entitlements", entitlements)

    if roles is not None:
        _details['roles'] = cli_util.parse_json_parameter("roles", roles)

    if x509_certificates is not None:
        _details['x509Certificates'] = cli_util.parse_json_parameter("x509_certificates", x509_certificates)

    if urnietfparamsscimschemasextensionenterprise2_0_user is not None:
        _details['urn:ietf:params:scim:schemas:extension:enterprise:2.0:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasextensionenterprise2_0_user", urnietfparamsscimschemasextensionenterprise2_0_user)

    if urnietfparamsscimschemasoracleidcsextensionuser_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:user:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionuser_user", urnietfparamsscimschemasoracleidcsextensionuser_user)

    if urnietfparamsscimschemasoracleidcsextensionpassword_state_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:passwordState:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionpassword_state_user", urnietfparamsscimschemasoracleidcsextensionpassword_state_user)

    if urnietfparamsscimschemasoracleidcsextensionuser_state_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:userState:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionuser_state_user", urnietfparamsscimschemasoracleidcsextensionuser_state_user)

    if urnietfparamsscimschemasoracleidcsextensionposix_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:posix:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionposix_user", urnietfparamsscimschemasoracleidcsextensionposix_user)

    if urnietfparamsscimschemasoracleidcsextensionkerberos_user_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:kerberosUser:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionkerberos_user_user", urnietfparamsscimschemasoracleidcsextensionkerberos_user_user)

    if urnietfparamsscimschemasoracleidcsextensionmfa_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:mfa:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionmfa_user", urnietfparamsscimschemasoracleidcsextensionmfa_user)

    if urnietfparamsscimschemasoracleidcsextensionadaptive_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:adaptive:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionadaptive_user", urnietfparamsscimschemasoracleidcsextensionadaptive_user)

    if urnietfparamsscimschemasoracleidcsextensionsff_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:sff:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionsff_user", urnietfparamsscimschemasoracleidcsextensionsff_user)

    if urnietfparamsscimschemasoracleidcsextensionsecurity_questions_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:securityQuestions:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionsecurity_questions_user", urnietfparamsscimschemasoracleidcsextensionsecurity_questions_user)

    if urnietfparamsscimschemasoracleidcsextensionself_registration_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:selfRegistration:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionself_registration_user", urnietfparamsscimschemasoracleidcsextensionself_registration_user)

    if urnietfparamsscimschemasoracleidcsextensionsocial_account_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:socialAccount:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionsocial_account_user", urnietfparamsscimschemasoracleidcsextensionsocial_account_user)

    if urnietfparamsscimschemasoracleidcsextensiondb_user_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:dbUser:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensiondb_user_user", urnietfparamsscimschemasoracleidcsextensiondb_user_user)

    if urnietfparamsscimschemasoracleidcsextensionterms_of_use_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:termsOfUse:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionterms_of_use_user", urnietfparamsscimschemasoracleidcsextensionterms_of_use_user)

    if urnietfparamsscimschemasoracleidcsextensionpasswordless_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:passwordless:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionpasswordless_user", urnietfparamsscimschemasoracleidcsextensionpasswordless_user)

    if urnietfparamsscimschemasoracleidcsextension_oci_tags is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:OCITags'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextension_oci_tags", urnietfparamsscimschemasoracleidcsextension_oci_tags)

    if urnietfparamsscimschemasoracleidcsextensionuser_credentials_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:userCredentials:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionuser_credentials_user", urnietfparamsscimschemasoracleidcsextensionuser_credentials_user)

    if urnietfparamsscimschemasoracleidcsextensioncapabilities_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:capabilities:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensioncapabilities_user", urnietfparamsscimschemasoracleidcsextensioncapabilities_user)

    if urnietfparamsscimschemasoracleidcsextensiondb_credentials_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:dbCredentials:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensiondb_credentials_user", urnietfparamsscimschemasoracleidcsextensiondb_credentials_user)

    if urnietfparamsscimschemasoracleidcsextensionself_change_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:selfChange:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionself_change_user", urnietfparamsscimschemasoracleidcsextensionself_change_user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_user(
        user=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@user_db_credential_group.command(name=cli_util.override('identity_domains.create_user_db_credential.command_name', 'create'), help=u"""Set a User's DbCredential

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](createUserDbCredential)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--db-password', required=True, help=u"""The db password of the user

**SCIM++ Properties:**  - type: string  - mutability: immutable  - returned: default  - required: true""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--name', help=u"""Name

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readOnly  - required: false  - returned: default""")
@cli_util.option('--description', help=u"""Description

**Added In:** 2109020413

**SCIM++ Properties:**  - caseExact: false  - type: string  - mutability: readWrite  - required: false  - returned: default""")
@cli_util.option('--mixed-db-password', help=u"""The db password of the user with mixed salt

**SCIM++ Properties:**  - type: string  - mutability: readOnly  - returned: default  - required: false""")
@cli_util.option('--salt', help=u"""The salt of the password

**SCIM++ Properties:**  - type: string  - mutability: readOnly  - returned: default  - required: false""")
@cli_util.option('--mixed-salt', help=u"""The mixed salt of the password

**SCIM++ Properties:**  - type: string  - mutability: readOnly  - returned: default  - required: false""")
@cli_util.option('--last-set-date', help=u"""A DateTime that specifies the date and time when the current db password was set

**SCIM++ Properties:**  - type: dateTime  - mutability: readOnly  - returned: default""")
@cli_util.option('--expired', type=click.BOOL, help=u"""Indicates that the db password has expired

**SCIM++ Properties:**  - type: boolean  - mutability: readOnly  - returned: default""")
@cli_util.option('--status', type=custom_types.CliCaseInsensitiveChoice(["ACTIVE", "INACTIVE"]), help=u"""User credential status

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: never  - type: string  - uniqueness: none""")
@cli_util.option('--expires-on', help=u"""User credential expires on

**Added In:** 2109090424

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: dateTime  - uniqueness: none""")
@cli_util.option('--user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionself-change-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'UserDbCredentialsUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user': {'module': 'identity_domains', 'class': 'UserDbCredentialsUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}}, output_type={'module': 'identity_domains', 'class': 'UserDbCredential'})
@cli_util.wrap_exceptions
def create_user_db_credential(ctx, from_json, schemas, db_password, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, name, description, mixed_db_password, salt, mixed_salt, last_set_date, expired, status, expires_on, user, urnietfparamsscimschemasoracleidcsextensionself_change_user):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['dbPassword'] = db_password

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if name is not None:
        _details['name'] = name

    if description is not None:
        _details['description'] = description

    if mixed_db_password is not None:
        _details['mixedDbPassword'] = mixed_db_password

    if salt is not None:
        _details['salt'] = salt

    if mixed_salt is not None:
        _details['mixedSalt'] = mixed_salt

    if last_set_date is not None:
        _details['lastSetDate'] = last_set_date

    if expired is not None:
        _details['expired'] = expired

    if status is not None:
        _details['status'] = status

    if expires_on is not None:
        _details['expiresOn'] = expires_on

    if user is not None:
        _details['user'] = cli_util.parse_json_parameter("user", user)

    if urnietfparamsscimschemasoracleidcsextensionself_change_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:selfChange:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionself_change_user", urnietfparamsscimschemasoracleidcsextensionself_change_user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.create_user_db_credential(
        user_db_credential=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@api_key_group.command(name=cli_util.override('identity_domains.delete_api_key.command_name', 'delete'), help=u"""Delete user's api key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteApiKey)""")
@cli_util.option('--api-key-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_api_key(ctx, from_json, api_key_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(api_key_id, six.string_types) and len(api_key_id.strip()) == 0:
        raise click.UsageError('Parameter --api-key-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_api_key(
        api_key_id=api_key_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@auth_token_group.command(name=cli_util.override('identity_domains.delete_auth_token.command_name', 'delete'), help=u"""Delete user's auth token

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteAuthToken)""")
@cli_util.option('--auth-token-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_auth_token(ctx, from_json, auth_token_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(auth_token_id, six.string_types) and len(auth_token_id.strip()) == 0:
        raise click.UsageError('Parameter --auth-token-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_auth_token(
        auth_token_id=auth_token_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@customer_secret_key_group.command(name=cli_util.override('identity_domains.delete_customer_secret_key.command_name', 'delete'), help=u"""Delete user's customer secret key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteCustomerSecretKey)""")
@cli_util.option('--customer-secret-key-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_customer_secret_key(ctx, from_json, customer_secret_key_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(customer_secret_key_id, six.string_types) and len(customer_secret_key_id.strip()) == 0:
        raise click.UsageError('Parameter --customer-secret-key-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_customer_secret_key(
        customer_secret_key_id=customer_secret_key_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@dynamic_resource_group_group.command(name=cli_util.override('identity_domains.delete_dynamic_resource_group.command_name', 'delete'), help=u"""Delete a DynamicResourceGroup

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteDynamicResourceGroup)""")
@cli_util.option('--dynamic-resource-group-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_dynamic_resource_group(ctx, from_json, dynamic_resource_group_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(dynamic_resource_group_id, six.string_types) and len(dynamic_resource_group_id.strip()) == 0:
        raise click.UsageError('Parameter --dynamic-resource-group-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_dynamic_resource_group(
        dynamic_resource_group_id=dynamic_resource_group_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@group_group.command(name=cli_util.override('identity_domains.delete_group.command_name', 'delete'), help=u"""Delete a Group

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteGroup)""")
@cli_util.option('--group-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_group(ctx, from_json, group_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(group_id, six.string_types) and len(group_id.strip()) == 0:
        raise click.UsageError('Parameter --group-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_group(
        group_id=group_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@identity_provider_group.command(name=cli_util.override('identity_domains.delete_identity_provider.command_name', 'delete'), help=u"""Delete an Identity Provider

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteIdentityProvider)""")
@cli_util.option('--identity-provider-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_identity_provider(ctx, from_json, identity_provider_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(identity_provider_id, six.string_types) and len(identity_provider_id.strip()) == 0:
        raise click.UsageError('Parameter --identity-provider-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_identity_provider(
        identity_provider_id=identity_provider_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_api_key_group.command(name=cli_util.override('identity_domains.delete_my_api_key.command_name', 'delete'), help=u"""Delete user's api key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteMyApiKey)""")
@cli_util.option('--my-api-key-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_my_api_key(ctx, from_json, my_api_key_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(my_api_key_id, six.string_types) and len(my_api_key_id.strip()) == 0:
        raise click.UsageError('Parameter --my-api-key-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_my_api_key(
        my_api_key_id=my_api_key_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_auth_token_group.command(name=cli_util.override('identity_domains.delete_my_auth_token.command_name', 'delete'), help=u"""Delete user's auth token

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteMyAuthToken)""")
@cli_util.option('--my-auth-token-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_my_auth_token(ctx, from_json, my_auth_token_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(my_auth_token_id, six.string_types) and len(my_auth_token_id.strip()) == 0:
        raise click.UsageError('Parameter --my-auth-token-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_my_auth_token(
        my_auth_token_id=my_auth_token_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_customer_secret_key_group.command(name=cli_util.override('identity_domains.delete_my_customer_secret_key.command_name', 'delete'), help=u"""Delete user's customer secret key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteMyCustomerSecretKey)""")
@cli_util.option('--my-customer-secret-key-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_my_customer_secret_key(ctx, from_json, my_customer_secret_key_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(my_customer_secret_key_id, six.string_types) and len(my_customer_secret_key_id.strip()) == 0:
        raise click.UsageError('Parameter --my-customer-secret-key-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_my_customer_secret_key(
        my_customer_secret_key_id=my_customer_secret_key_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_device_group.command(name=cli_util.override('identity_domains.delete_my_device.command_name', 'delete'), help=u"""Delete a Device

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteMyDevice)""")
@cli_util.option('--my-device-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_my_device(ctx, from_json, my_device_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(my_device_id, six.string_types) and len(my_device_id.strip()) == 0:
        raise click.UsageError('Parameter --my-device-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_my_device(
        my_device_id=my_device_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_o_auth2_client_credential_group.command(name=cli_util.override('identity_domains.delete_my_o_auth2_client_credential.command_name', 'delete'), help=u"""Delete user's oauth2 client credential

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteMyOAuth2ClientCredential)""")
@cli_util.option('--my-o-auth2-client-credential-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_my_o_auth2_client_credential(ctx, from_json, my_o_auth2_client_credential_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(my_o_auth2_client_credential_id, six.string_types) and len(my_o_auth2_client_credential_id.strip()) == 0:
        raise click.UsageError('Parameter --my-o-auth2-client-credential-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_my_o_auth2_client_credential(
        my_o_auth2_client_credential_id=my_o_auth2_client_credential_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_smtp_credential_group.command(name=cli_util.override('identity_domains.delete_my_smtp_credential.command_name', 'delete'), help=u"""Delete user's smtp credenials

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteMySmtpCredential)""")
@cli_util.option('--my-smtp-credential-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_my_smtp_credential(ctx, from_json, my_smtp_credential_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(my_smtp_credential_id, six.string_types) and len(my_smtp_credential_id.strip()) == 0:
        raise click.UsageError('Parameter --my-smtp-credential-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_my_smtp_credential(
        my_smtp_credential_id=my_smtp_credential_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_support_account_group.command(name=cli_util.override('identity_domains.delete_my_support_account.command_name', 'delete'), help=u"""Delete a Support Account

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteMySupportAccount)""")
@cli_util.option('--my-support-account-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_my_support_account(ctx, from_json, my_support_account_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(my_support_account_id, six.string_types) and len(my_support_account_id.strip()) == 0:
        raise click.UsageError('Parameter --my-support-account-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_my_support_account(
        my_support_account_id=my_support_account_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_trusted_user_agent_group.command(name=cli_util.override('identity_domains.delete_my_trusted_user_agent.command_name', 'delete'), help=u"""Delete a Trusted User Agent

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteMyTrustedUserAgent)""")
@cli_util.option('--my-trusted-user-agent-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_my_trusted_user_agent(ctx, from_json, my_trusted_user_agent_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(my_trusted_user_agent_id, six.string_types) and len(my_trusted_user_agent_id.strip()) == 0:
        raise click.UsageError('Parameter --my-trusted-user-agent-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_my_trusted_user_agent(
        my_trusted_user_agent_id=my_trusted_user_agent_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_user_db_credential_group.command(name=cli_util.override('identity_domains.delete_my_user_db_credential.command_name', 'delete'), help=u"""Remove a User's DbCredential

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteMyUserDbCredential)""")
@cli_util.option('--my-user-db-credential-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_my_user_db_credential(ctx, from_json, my_user_db_credential_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(my_user_db_credential_id, six.string_types) and len(my_user_db_credential_id.strip()) == 0:
        raise click.UsageError('Parameter --my-user-db-credential-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_my_user_db_credential(
        my_user_db_credential_id=my_user_db_credential_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@o_auth2_client_credential_group.command(name=cli_util.override('identity_domains.delete_o_auth2_client_credential.command_name', 'delete'), help=u"""Delete user's oauth2 client credential

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteOAuth2ClientCredential)""")
@cli_util.option('--o-auth2-client-credential-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_o_auth2_client_credential(ctx, from_json, o_auth2_client_credential_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(o_auth2_client_credential_id, six.string_types) and len(o_auth2_client_credential_id.strip()) == 0:
        raise click.UsageError('Parameter --o-auth2-client-credential-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_o_auth2_client_credential(
        o_auth2_client_credential_id=o_auth2_client_credential_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@password_policy_group.command(name=cli_util.override('identity_domains.delete_password_policy.command_name', 'delete'), help=u"""Delete a Password Policy

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deletePasswordPolicy)""")
@cli_util.option('--password-policy-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_password_policy(ctx, from_json, password_policy_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(password_policy_id, six.string_types) and len(password_policy_id.strip()) == 0:
        raise click.UsageError('Parameter --password-policy-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_password_policy(
        password_policy_id=password_policy_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@smtp_credential_group.command(name=cli_util.override('identity_domains.delete_smtp_credential.command_name', 'delete'), help=u"""Delete user's smtp credenials

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteSmtpCredential)""")
@cli_util.option('--smtp-credential-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_smtp_credential(ctx, from_json, smtp_credential_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(smtp_credential_id, six.string_types) and len(smtp_credential_id.strip()) == 0:
        raise click.UsageError('Parameter --smtp-credential-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_smtp_credential(
        smtp_credential_id=smtp_credential_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@user_group.command(name=cli_util.override('identity_domains.delete_user.command_name', 'delete'), help=u"""Delete a User

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteUser)""")
@cli_util.option('--user-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_user(ctx, from_json, user_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(user_id, six.string_types) and len(user_id.strip()) == 0:
        raise click.UsageError('Parameter --user-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_user(
        user_id=user_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@user_db_credential_group.command(name=cli_util.override('identity_domains.delete_user_db_credential.command_name', 'delete'), help=u"""Remove a User's DbCredential

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](deleteUserDbCredential)""")
@cli_util.option('--user-db-credential-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--force-delete', type=click.BOOL, help=u"""To force delete the resource and all its references (if any).""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.confirm_delete_option
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={})
@cli_util.wrap_exceptions
def delete_user_db_credential(ctx, from_json, user_db_credential_id, authorization, resource_type_schema_version, force_delete, if_match):

    if isinstance(user_db_credential_id, six.string_types) and len(user_db_credential_id.strip()) == 0:
        raise click.UsageError('Parameter --user-db-credential-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if force_delete is not None:
        kwargs['force_delete'] = force_delete
    if if_match is not None:
        kwargs['if_match'] = if_match
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.delete_user_db_credential(
        user_db_credential_id=user_db_credential_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@api_key_group.command(name=cli_util.override('identity_domains.get_api_key.command_name', 'get'), help=u"""Get user's api key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getApiKey)""")
@cli_util.option('--api-key-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'ApiKey'})
@cli_util.wrap_exceptions
def get_api_key(ctx, from_json, api_key_id, authorization, resource_type_schema_version, attributes, attribute_sets):

    if isinstance(api_key_id, six.string_types) and len(api_key_id.strip()) == 0:
        raise click.UsageError('Parameter --api-key-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_api_key(
        api_key_id=api_key_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@auth_token_group.command(name=cli_util.override('identity_domains.get_auth_token.command_name', 'get'), help=u"""Get user's auth token

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getAuthToken)""")
@cli_util.option('--auth-token-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'AuthToken'})
@cli_util.wrap_exceptions
def get_auth_token(ctx, from_json, auth_token_id, authorization, resource_type_schema_version, attributes, attribute_sets):

    if isinstance(auth_token_id, six.string_types) and len(auth_token_id.strip()) == 0:
        raise click.UsageError('Parameter --auth-token-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_auth_token(
        auth_token_id=auth_token_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@authentication_factor_setting_group.command(name=cli_util.override('identity_domains.get_authentication_factor_setting.command_name', 'get'), help=u"""Get Authentication Factor Settings

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getAuthenticationFactorSetting)""")
@cli_util.option('--authentication-factor-setting-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'AuthenticationFactorSetting'})
@cli_util.wrap_exceptions
def get_authentication_factor_setting(ctx, from_json, authentication_factor_setting_id, authorization, resource_type_schema_version, attributes, attribute_sets):

    if isinstance(authentication_factor_setting_id, six.string_types) and len(authentication_factor_setting_id.strip()) == 0:
        raise click.UsageError('Parameter --authentication-factor-setting-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_authentication_factor_setting(
        authentication_factor_setting_id=authentication_factor_setting_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@customer_secret_key_group.command(name=cli_util.override('identity_domains.get_customer_secret_key.command_name', 'get'), help=u"""Get user's customer secret key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getCustomerSecretKey)""")
@cli_util.option('--customer-secret-key-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'CustomerSecretKey'})
@cli_util.wrap_exceptions
def get_customer_secret_key(ctx, from_json, customer_secret_key_id, authorization, resource_type_schema_version, attributes, attribute_sets):

    if isinstance(customer_secret_key_id, six.string_types) and len(customer_secret_key_id.strip()) == 0:
        raise click.UsageError('Parameter --customer-secret-key-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_customer_secret_key(
        customer_secret_key_id=customer_secret_key_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@dynamic_resource_group_group.command(name=cli_util.override('identity_domains.get_dynamic_resource_group.command_name', 'get'), help=u"""Get a DynamicResourceGroup

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getDynamicResourceGroup)""")
@cli_util.option('--dynamic-resource-group-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'DynamicResourceGroup'})
@cli_util.wrap_exceptions
def get_dynamic_resource_group(ctx, from_json, dynamic_resource_group_id, authorization, resource_type_schema_version, attributes, attribute_sets):

    if isinstance(dynamic_resource_group_id, six.string_types) and len(dynamic_resource_group_id.strip()) == 0:
        raise click.UsageError('Parameter --dynamic-resource-group-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_dynamic_resource_group(
        dynamic_resource_group_id=dynamic_resource_group_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@group_group.command(name=cli_util.override('identity_domains.get_group.command_name', 'get'), help=u"""Get a Group - The Group search and get operations on users/members will throw an exception if it has more than 10K members, to avoid the exception use the pagination filter to get or search group members

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getGroup)""")
@cli_util.option('--group-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'Group'})
@cli_util.wrap_exceptions
def get_group(ctx, from_json, group_id, authorization, resource_type_schema_version, attributes, attribute_sets):

    if isinstance(group_id, six.string_types) and len(group_id.strip()) == 0:
        raise click.UsageError('Parameter --group-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_group(
        group_id=group_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@identity_provider_group.command(name=cli_util.override('identity_domains.get_identity_provider.command_name', 'get'), help=u"""Get an Identity Provider

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getIdentityProvider)""")
@cli_util.option('--identity-provider-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'IdentityProvider'})
@cli_util.wrap_exceptions
def get_identity_provider(ctx, from_json, identity_provider_id, authorization, resource_type_schema_version, attributes, attribute_sets):

    if isinstance(identity_provider_id, six.string_types) and len(identity_provider_id.strip()) == 0:
        raise click.UsageError('Parameter --identity-provider-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_identity_provider(
        identity_provider_id=identity_provider_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@kmsi_setting_group.command(name=cli_util.override('identity_domains.get_kmsi_setting.command_name', 'get'), help=u"""Get KmsiSettings

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getKmsiSetting)""")
@cli_util.option('--kmsi-setting-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'KmsiSetting'})
@cli_util.wrap_exceptions
def get_kmsi_setting(ctx, from_json, kmsi_setting_id, authorization, resource_type_schema_version, attributes, attribute_sets):

    if isinstance(kmsi_setting_id, six.string_types) and len(kmsi_setting_id.strip()) == 0:
        raise click.UsageError('Parameter --kmsi-setting-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_kmsi_setting(
        kmsi_setting_id=kmsi_setting_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@me_group.command(name=cli_util.override('identity_domains.get_me.command_name', 'get'), help=u"""Get User Info

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getMe)""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'Me'})
@cli_util.wrap_exceptions
def get_me(ctx, from_json, authorization, resource_type_schema_version, attributes, attribute_sets):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_me(
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_api_key_group.command(name=cli_util.override('identity_domains.get_my_api_key.command_name', 'get'), help=u"""Get user's api key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getMyApiKey)""")
@cli_util.option('--my-api-key-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MyApiKey'})
@cli_util.wrap_exceptions
def get_my_api_key(ctx, from_json, my_api_key_id, authorization, resource_type_schema_version):

    if isinstance(my_api_key_id, six.string_types) and len(my_api_key_id.strip()) == 0:
        raise click.UsageError('Parameter --my-api-key-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_my_api_key(
        my_api_key_id=my_api_key_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_auth_token_group.command(name=cli_util.override('identity_domains.get_my_auth_token.command_name', 'get'), help=u"""Get user's auth token

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getMyAuthToken)""")
@cli_util.option('--my-auth-token-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MyAuthToken'})
@cli_util.wrap_exceptions
def get_my_auth_token(ctx, from_json, my_auth_token_id, authorization, resource_type_schema_version):

    if isinstance(my_auth_token_id, six.string_types) and len(my_auth_token_id.strip()) == 0:
        raise click.UsageError('Parameter --my-auth-token-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_my_auth_token(
        my_auth_token_id=my_auth_token_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_customer_secret_key_group.command(name=cli_util.override('identity_domains.get_my_customer_secret_key.command_name', 'get'), help=u"""Get user's customer secret key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getMyCustomerSecretKey)""")
@cli_util.option('--my-customer-secret-key-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MyCustomerSecretKey'})
@cli_util.wrap_exceptions
def get_my_customer_secret_key(ctx, from_json, my_customer_secret_key_id, authorization, resource_type_schema_version):

    if isinstance(my_customer_secret_key_id, six.string_types) and len(my_customer_secret_key_id.strip()) == 0:
        raise click.UsageError('Parameter --my-customer-secret-key-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_my_customer_secret_key(
        my_customer_secret_key_id=my_customer_secret_key_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_device_group.command(name=cli_util.override('identity_domains.get_my_device.command_name', 'get'), help=u"""Get a Device

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getMyDevice)""")
@cli_util.option('--my-device-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MyDevice'})
@cli_util.wrap_exceptions
def get_my_device(ctx, from_json, my_device_id, authorization, resource_type_schema_version, attributes, attribute_sets):

    if isinstance(my_device_id, six.string_types) and len(my_device_id.strip()) == 0:
        raise click.UsageError('Parameter --my-device-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_my_device(
        my_device_id=my_device_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_o_auth2_client_credential_group.command(name=cli_util.override('identity_domains.get_my_o_auth2_client_credential.command_name', 'get'), help=u"""Get user's oauth2 client credential

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getMyOAuth2ClientCredential)""")
@cli_util.option('--my-o-auth2-client-credential-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MyOAuth2ClientCredential'})
@cli_util.wrap_exceptions
def get_my_o_auth2_client_credential(ctx, from_json, my_o_auth2_client_credential_id, authorization, resource_type_schema_version):

    if isinstance(my_o_auth2_client_credential_id, six.string_types) and len(my_o_auth2_client_credential_id.strip()) == 0:
        raise click.UsageError('Parameter --my-o-auth2-client-credential-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_my_o_auth2_client_credential(
        my_o_auth2_client_credential_id=my_o_auth2_client_credential_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_smtp_credential_group.command(name=cli_util.override('identity_domains.get_my_smtp_credential.command_name', 'get'), help=u"""Get user's smtp credentials

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getMySmtpCredential)""")
@cli_util.option('--my-smtp-credential-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MySmtpCredential'})
@cli_util.wrap_exceptions
def get_my_smtp_credential(ctx, from_json, my_smtp_credential_id, authorization, resource_type_schema_version):

    if isinstance(my_smtp_credential_id, six.string_types) and len(my_smtp_credential_id.strip()) == 0:
        raise click.UsageError('Parameter --my-smtp-credential-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_my_smtp_credential(
        my_smtp_credential_id=my_smtp_credential_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_support_account_group.command(name=cli_util.override('identity_domains.get_my_support_account.command_name', 'get'), help=u"""Get a Support Account

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getMySupportAccount)""")
@cli_util.option('--my-support-account-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MySupportAccount'})
@cli_util.wrap_exceptions
def get_my_support_account(ctx, from_json, my_support_account_id, authorization, resource_type_schema_version):

    if isinstance(my_support_account_id, six.string_types) and len(my_support_account_id.strip()) == 0:
        raise click.UsageError('Parameter --my-support-account-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_my_support_account(
        my_support_account_id=my_support_account_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_trusted_user_agent_group.command(name=cli_util.override('identity_domains.get_my_trusted_user_agent.command_name', 'get'), help=u"""Get a Trusted User Agent

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getMyTrustedUserAgent)""")
@cli_util.option('--my-trusted-user-agent-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MyTrustedUserAgent'})
@cli_util.wrap_exceptions
def get_my_trusted_user_agent(ctx, from_json, my_trusted_user_agent_id, authorization, resource_type_schema_version, attributes, attribute_sets):

    if isinstance(my_trusted_user_agent_id, six.string_types) and len(my_trusted_user_agent_id.strip()) == 0:
        raise click.UsageError('Parameter --my-trusted-user-agent-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_my_trusted_user_agent(
        my_trusted_user_agent_id=my_trusted_user_agent_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_user_db_credential_group.command(name=cli_util.override('identity_domains.get_my_user_db_credential.command_name', 'get'), help=u"""Get a User's DbCredentials

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getMyUserDbCredential)""")
@cli_util.option('--my-user-db-credential-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MyUserDbCredential'})
@cli_util.wrap_exceptions
def get_my_user_db_credential(ctx, from_json, my_user_db_credential_id, authorization, resource_type_schema_version):

    if isinstance(my_user_db_credential_id, six.string_types) and len(my_user_db_credential_id.strip()) == 0:
        raise click.UsageError('Parameter --my-user-db-credential-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_my_user_db_credential(
        my_user_db_credential_id=my_user_db_credential_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@o_auth2_client_credential_group.command(name=cli_util.override('identity_domains.get_o_auth2_client_credential.command_name', 'get'), help=u"""Get user's oauth2 client credential

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getOAuth2ClientCredential)""")
@cli_util.option('--o-auth2-client-credential-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'OAuth2ClientCredential'})
@cli_util.wrap_exceptions
def get_o_auth2_client_credential(ctx, from_json, o_auth2_client_credential_id, authorization, resource_type_schema_version, attributes, attribute_sets):

    if isinstance(o_auth2_client_credential_id, six.string_types) and len(o_auth2_client_credential_id.strip()) == 0:
        raise click.UsageError('Parameter --o-auth2-client-credential-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_o_auth2_client_credential(
        o_auth2_client_credential_id=o_auth2_client_credential_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@password_policy_group.command(name=cli_util.override('identity_domains.get_password_policy.command_name', 'get'), help=u"""Get a Password Policy

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getPasswordPolicy)""")
@cli_util.option('--password-policy-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'PasswordPolicy'})
@cli_util.wrap_exceptions
def get_password_policy(ctx, from_json, password_policy_id, authorization, resource_type_schema_version, attributes, attribute_sets):

    if isinstance(password_policy_id, six.string_types) and len(password_policy_id.strip()) == 0:
        raise click.UsageError('Parameter --password-policy-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_password_policy(
        password_policy_id=password_policy_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@smtp_credential_group.command(name=cli_util.override('identity_domains.get_smtp_credential.command_name', 'get'), help=u"""Get user's smtp credentials

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getSmtpCredential)""")
@cli_util.option('--smtp-credential-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'SmtpCredential'})
@cli_util.wrap_exceptions
def get_smtp_credential(ctx, from_json, smtp_credential_id, authorization, resource_type_schema_version, attributes, attribute_sets):

    if isinstance(smtp_credential_id, six.string_types) and len(smtp_credential_id.strip()) == 0:
        raise click.UsageError('Parameter --smtp-credential-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_smtp_credential(
        smtp_credential_id=smtp_credential_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@user_group.command(name=cli_util.override('identity_domains.get_user.command_name', 'get'), help=u"""Get a User

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getUser)""")
@cli_util.option('--user-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'User'})
@cli_util.wrap_exceptions
def get_user(ctx, from_json, user_id, authorization, resource_type_schema_version, attributes, attribute_sets):

    if isinstance(user_id, six.string_types) and len(user_id.strip()) == 0:
        raise click.UsageError('Parameter --user-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_user(
        user_id=user_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@user_db_credential_group.command(name=cli_util.override('identity_domains.get_user_db_credential.command_name', 'get'), help=u"""Get a User's DbCredentials

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](getUserDbCredential)""")
@cli_util.option('--user-db-credential-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'UserDbCredential'})
@cli_util.wrap_exceptions
def get_user_db_credential(ctx, from_json, user_db_credential_id, authorization, resource_type_schema_version, attributes, attribute_sets):

    if isinstance(user_db_credential_id, six.string_types) and len(user_db_credential_id.strip()) == 0:
        raise click.UsageError('Parameter --user-db-credential-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.get_user_db_credential(
        user_db_credential_id=user_db_credential_id,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@api_keys_group.command(name=cli_util.override('identity_domains.list_api_keys.command_name', 'list'), help=u"""Search Api Key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listApiKeys)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'ApiKeys'})
@cli_util.wrap_exceptions
def list_api_keys(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, attributes, attribute_sets, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_api_keys,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_api_keys,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_api_keys(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@auth_tokens_group.command(name=cli_util.override('identity_domains.list_auth_tokens.command_name', 'list'), help=u"""Search AuthTokens

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listAuthTokens)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'AuthTokens'})
@cli_util.wrap_exceptions
def list_auth_tokens(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, attributes, attribute_sets, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_auth_tokens,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_auth_tokens,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_auth_tokens(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@authentication_factor_settings_group.command(name=cli_util.override('identity_domains.list_authentication_factor_settings.command_name', 'list'), help=u"""Search Authentication Factor Settings

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listAuthenticationFactorSettings)""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'AuthenticationFactorSettings'})
@cli_util.wrap_exceptions
def list_authentication_factor_settings(ctx, from_json, all_pages, page_size, attributes, attribute_sets, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_authentication_factor_settings,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_authentication_factor_settings,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_authentication_factor_settings(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@customer_secret_keys_group.command(name=cli_util.override('identity_domains.list_customer_secret_keys.command_name', 'list'), help=u"""Search user's customer secret key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listCustomerSecretKeys)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'CustomerSecretKeys'})
@cli_util.wrap_exceptions
def list_customer_secret_keys(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, attributes, attribute_sets, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_customer_secret_keys,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_customer_secret_keys,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_customer_secret_keys(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@dynamic_resource_groups_group.command(name=cli_util.override('identity_domains.list_dynamic_resource_groups.command_name', 'list'), help=u"""Search DynamicResourceGroups

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listDynamicResourceGroups)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'DynamicResourceGroups'})
@cli_util.wrap_exceptions
def list_dynamic_resource_groups(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, attributes, attribute_sets, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_dynamic_resource_groups,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_dynamic_resource_groups,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_dynamic_resource_groups(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@groups_group.command(name=cli_util.override('identity_domains.list_groups.command_name', 'list'), help=u"""Search Groups.The Group search and get operations on users/members will throw an exception if it has more than 10K members, to avoid the exception use the pagination filter to get or search group members

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listGroups)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'Groups'})
@cli_util.wrap_exceptions
def list_groups(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, attributes, attribute_sets, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_groups,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_groups,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_groups(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@identity_providers_group.command(name=cli_util.override('identity_domains.list_identity_providers.command_name', 'list'), help=u"""Search Identity Providers

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listIdentityProviders)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'IdentityProviders'})
@cli_util.wrap_exceptions
def list_identity_providers(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, attributes, attribute_sets, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_identity_providers,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_identity_providers,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_identity_providers(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@kmsi_settings_group.command(name=cli_util.override('identity_domains.list_kmsi_settings.command_name', 'list'), help=u"""Search KmsiSettings

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listKmsiSettings)""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'KmsiSettings'})
@cli_util.wrap_exceptions
def list_kmsi_settings(ctx, from_json, all_pages, page_size, attributes, attribute_sets, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_kmsi_settings,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_kmsi_settings,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_kmsi_settings(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@my_api_keys_group.command(name=cli_util.override('identity_domains.list_my_api_keys.command_name', 'list'), help=u"""Search Api Key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listMyApiKeys)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MyApiKeys'})
@cli_util.wrap_exceptions
def list_my_api_keys(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_my_api_keys,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_my_api_keys,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_my_api_keys(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@my_auth_tokens_group.command(name=cli_util.override('identity_domains.list_my_auth_tokens.command_name', 'list'), help=u"""Search AuthTokens

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listMyAuthTokens)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MyAuthTokens'})
@cli_util.wrap_exceptions
def list_my_auth_tokens(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_my_auth_tokens,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_my_auth_tokens,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_my_auth_tokens(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@my_customer_secret_keys_group.command(name=cli_util.override('identity_domains.list_my_customer_secret_keys.command_name', 'list'), help=u"""Search user's customer secret key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listMyCustomerSecretKeys)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MyCustomerSecretKeys'})
@cli_util.wrap_exceptions
def list_my_customer_secret_keys(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_my_customer_secret_keys,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_my_customer_secret_keys,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_my_customer_secret_keys(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@my_devices_group.command(name=cli_util.override('identity_domains.list_my_devices.command_name', 'list'), help=u"""Search Devices

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listMyDevices)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MyDevices'})
@cli_util.wrap_exceptions
def list_my_devices(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, attributes, attribute_sets, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_my_devices,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_my_devices,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_my_devices(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@my_groups_group.command(name=cli_util.override('identity_domains.list_my_groups.command_name', 'list'), help=u"""Search My Groups

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listMyGroups)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MyGroups'})
@cli_util.wrap_exceptions
def list_my_groups(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, attributes, attribute_sets, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_my_groups,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_my_groups,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_my_groups(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@my_o_auth2_client_credentials_group.command(name=cli_util.override('identity_domains.list_my_o_auth2_client_credentials.command_name', 'list'), help=u"""Search oauth2 client credentials

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listMyOAuth2ClientCredentials)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MyOAuth2ClientCredentials'})
@cli_util.wrap_exceptions
def list_my_o_auth2_client_credentials(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_my_o_auth2_client_credentials,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_my_o_auth2_client_credentials,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_my_o_auth2_client_credentials(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@my_smtp_credentials_group.command(name=cli_util.override('identity_domains.list_my_smtp_credentials.command_name', 'list'), help=u"""Search smtp credentials

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listMySmtpCredentials)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MySmtpCredentials'})
@cli_util.wrap_exceptions
def list_my_smtp_credentials(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_my_smtp_credentials,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_my_smtp_credentials,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_my_smtp_credentials(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@my_support_accounts_group.command(name=cli_util.override('identity_domains.list_my_support_accounts.command_name', 'list'), help=u"""Search Support Accounts

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listMySupportAccounts)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MySupportAccounts'})
@cli_util.wrap_exceptions
def list_my_support_accounts(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_my_support_accounts,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_my_support_accounts,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_my_support_accounts(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@my_trusted_user_agents_group.command(name=cli_util.override('identity_domains.list_my_trusted_user_agents.command_name', 'list'), help=u"""Search Trusted User Agents

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listMyTrustedUserAgents)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MyTrustedUserAgents'})
@cli_util.wrap_exceptions
def list_my_trusted_user_agents(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, attributes, attribute_sets, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_my_trusted_user_agents,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_my_trusted_user_agents,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_my_trusted_user_agents(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@my_user_db_credentials_group.command(name=cli_util.override('identity_domains.list_my_user_db_credentials.command_name', 'list'), help=u"""Search a User's DBCredentials

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listMyUserDbCredentials)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'MyUserDbCredentials'})
@cli_util.wrap_exceptions
def list_my_user_db_credentials(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_my_user_db_credentials,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_my_user_db_credentials,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_my_user_db_credentials(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@o_auth2_client_credentials_group.command(name=cli_util.override('identity_domains.list_o_auth2_client_credentials.command_name', 'list'), help=u"""Search oauth2 client credentials

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listOAuth2ClientCredentials)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'OAuth2ClientCredentials'})
@cli_util.wrap_exceptions
def list_o_auth2_client_credentials(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, attributes, attribute_sets, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_o_auth2_client_credentials,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_o_auth2_client_credentials,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_o_auth2_client_credentials(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@password_policies_group.command(name=cli_util.override('identity_domains.list_password_policies.command_name', 'list'), help=u"""Search Password Policies

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listPasswordPolicies)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'PasswordPolicies'})
@cli_util.wrap_exceptions
def list_password_policies(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, attributes, attribute_sets, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_password_policies,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_password_policies,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_password_policies(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@smtp_credentials_group.command(name=cli_util.override('identity_domains.list_smtp_credentials.command_name', 'list'), help=u"""Search smtp credentials

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listSmtpCredentials)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'SmtpCredentials'})
@cli_util.wrap_exceptions
def list_smtp_credentials(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, attributes, attribute_sets, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_smtp_credentials,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_smtp_credentials,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_smtp_credentials(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@user_db_credentials_group.command(name=cli_util.override('identity_domains.list_user_db_credentials.command_name', 'list'), help=u"""Search a User's DBCredentials

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listUserDbCredentials)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'UserDbCredentials'})
@cli_util.wrap_exceptions
def list_user_db_credentials(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, attributes, attribute_sets, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_user_db_credentials,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_user_db_credentials,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_user_db_credentials(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@users_group.command(name=cli_util.override('identity_domains.list_users.command_name', 'list'), help=u"""Search Users

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](listUsers)""")
@cli_util.option('--filter', help=u"""OPTIONAL. The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See the Filtering section of the SCIM specification for more information (Section 3.4.2.2). The string should contain at least one condition that each item must match in order to be returned in the search results. Each condition specifies an attribute, an operator, and a value. Conditions within a filter can be connected by logical operators (such as AND and OR). Sets of conditions can be grouped together using parentheses.""")
@cli_util.option('--sort-by', help=u"""OPTIONAL. A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation form. See the Attribute Notation section of the SCIM specification for more information (Section 3.10). Also, see the Sorting section of the SCIM specification for more information (Section 3.4.2.3).""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are 'ascending' and 'descending'. See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""OPTIONAL. An integer that indicates the 1-based index of the first query result. See the Pagination section of the SCIM specification for more information. (Section 3.4.2.4). The number of results pages to return. The first page is 1. Specify 2 to access the second page of results, and so on.""")
@cli_util.option('--count', type=click.INT, help=u"""OPTIONAL. An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. (Section 3.4.2.4).""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@cli_util.option('--all', 'all_pages', is_flag=True, help="""Fetches all pages of results. If you provide this option, then you cannot provide the --limit option.""")
@cli_util.option('--page-size', type=click.INT, help="""When fetching results, the number of results to fetch per call. Only valid when used with --all or --limit, and ignored otherwise.""")
@json_skeleton_utils.get_cli_json_input_option({})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={}, output_type={'module': 'identity_domains', 'class': 'Users'})
@cli_util.wrap_exceptions
def list_users(ctx, from_json, all_pages, page_size, filter, sort_by, sort_order, start_index, count, attributes, attribute_sets, authorization, resource_type_schema_version, page, limit):

    if all_pages and limit:
        raise click.UsageError('If you provide the --all option you cannot provide the --limit option')

    kwargs = {}
    if filter is not None:
        kwargs['filter'] = filter
    if sort_by is not None:
        kwargs['sort_by'] = sort_by
    if sort_order is not None:
        kwargs['sort_order'] = sort_order
    if start_index is not None:
        kwargs['start_index'] = start_index
    if count is not None:
        kwargs['count'] = count
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit
    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    if all_pages:
        if page_size:
            kwargs['limit'] = page_size

        result = cli_util.list_call_get_all_results(
            client.list_users,
            **kwargs
        )
    elif limit is not None:
        result = cli_util.list_call_get_up_to_limit(
            client.list_users,
            limit,
            page_size,
            **kwargs
        )
    else:
        result = client.list_users(
            **kwargs
        )
    cli_util.render_response(result, ctx)


@api_key_group.command(name=cli_util.override('identity_domains.patch_api_key.command_name', 'patch'), help=u"""Update user's api key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](patchApiKey)""")
@cli_util.option('--api-key-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--operations', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The body of an HTTP PATCH request MUST contain the attribute \"Operations\", whose value is an array of one or more patch operations.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}}, output_type={'module': 'identity_domains', 'class': 'ApiKey'})
@cli_util.wrap_exceptions
def patch_api_key(ctx, from_json, api_key_id, schemas, operations, authorization, resource_type_schema_version, attributes, attribute_sets, if_match):

    if isinstance(api_key_id, six.string_types) and len(api_key_id.strip()) == 0:
        raise click.UsageError('Parameter --api-key-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['Operations'] = cli_util.parse_json_parameter("operations", operations)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.patch_api_key(
        api_key_id=api_key_id,
        patch_op=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@auth_token_group.command(name=cli_util.override('identity_domains.patch_auth_token.command_name', 'patch'), help=u"""Update user's AuthToken

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](patchAuthToken)""")
@cli_util.option('--auth-token-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--operations', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The body of an HTTP PATCH request MUST contain the attribute \"Operations\", whose value is an array of one or more patch operations.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}}, output_type={'module': 'identity_domains', 'class': 'AuthToken'})
@cli_util.wrap_exceptions
def patch_auth_token(ctx, from_json, auth_token_id, schemas, operations, authorization, resource_type_schema_version, attributes, attribute_sets, if_match):

    if isinstance(auth_token_id, six.string_types) and len(auth_token_id.strip()) == 0:
        raise click.UsageError('Parameter --auth-token-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['Operations'] = cli_util.parse_json_parameter("operations", operations)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.patch_auth_token(
        auth_token_id=auth_token_id,
        patch_op=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@customer_secret_key_group.command(name=cli_util.override('identity_domains.patch_customer_secret_key.command_name', 'patch'), help=u"""Update user's customer secret key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](patchCustomerSecretKey)""")
@cli_util.option('--customer-secret-key-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--operations', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The body of an HTTP PATCH request MUST contain the attribute \"Operations\", whose value is an array of one or more patch operations.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}}, output_type={'module': 'identity_domains', 'class': 'CustomerSecretKey'})
@cli_util.wrap_exceptions
def patch_customer_secret_key(ctx, from_json, customer_secret_key_id, schemas, operations, authorization, resource_type_schema_version, attributes, attribute_sets, if_match):

    if isinstance(customer_secret_key_id, six.string_types) and len(customer_secret_key_id.strip()) == 0:
        raise click.UsageError('Parameter --customer-secret-key-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['Operations'] = cli_util.parse_json_parameter("operations", operations)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.patch_customer_secret_key(
        customer_secret_key_id=customer_secret_key_id,
        patch_op=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@dynamic_resource_group_group.command(name=cli_util.override('identity_domains.patch_dynamic_resource_group.command_name', 'patch'), help=u"""Update a DynamicResourceGroup

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](patchDynamicResourceGroup)""")
@cli_util.option('--dynamic-resource-group-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--operations', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The body of an HTTP PATCH request MUST contain the attribute \"Operations\", whose value is an array of one or more patch operations.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}}, output_type={'module': 'identity_domains', 'class': 'DynamicResourceGroup'})
@cli_util.wrap_exceptions
def patch_dynamic_resource_group(ctx, from_json, dynamic_resource_group_id, schemas, operations, authorization, resource_type_schema_version, attributes, attribute_sets, if_match):

    if isinstance(dynamic_resource_group_id, six.string_types) and len(dynamic_resource_group_id.strip()) == 0:
        raise click.UsageError('Parameter --dynamic-resource-group-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['Operations'] = cli_util.parse_json_parameter("operations", operations)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.patch_dynamic_resource_group(
        dynamic_resource_group_id=dynamic_resource_group_id,
        patch_op=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@group_group.command(name=cli_util.override('identity_domains.patch_group.command_name', 'patch'), help=u"""Update a Group

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](patchGroup)""")
@cli_util.option('--group-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--operations', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The body of an HTTP PATCH request MUST contain the attribute \"Operations\", whose value is an array of one or more patch operations.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}}, output_type={'module': 'identity_domains', 'class': 'Group'})
@cli_util.wrap_exceptions
def patch_group(ctx, from_json, group_id, schemas, operations, authorization, resource_type_schema_version, attributes, attribute_sets, if_match):

    if isinstance(group_id, six.string_types) and len(group_id.strip()) == 0:
        raise click.UsageError('Parameter --group-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['Operations'] = cli_util.parse_json_parameter("operations", operations)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.patch_group(
        group_id=group_id,
        patch_op=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@identity_provider_group.command(name=cli_util.override('identity_domains.patch_identity_provider.command_name', 'patch'), help=u"""Update an Identity Provider

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](patchIdentityProvider)""")
@cli_util.option('--identity-provider-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--operations', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The body of an HTTP PATCH request MUST contain the attribute \"Operations\", whose value is an array of one or more patch operations.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}}, output_type={'module': 'identity_domains', 'class': 'IdentityProvider'})
@cli_util.wrap_exceptions
def patch_identity_provider(ctx, from_json, identity_provider_id, schemas, operations, authorization, resource_type_schema_version, attributes, attribute_sets, if_match):

    if isinstance(identity_provider_id, six.string_types) and len(identity_provider_id.strip()) == 0:
        raise click.UsageError('Parameter --identity-provider-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['Operations'] = cli_util.parse_json_parameter("operations", operations)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.patch_identity_provider(
        identity_provider_id=identity_provider_id,
        patch_op=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@kmsi_setting_group.command(name=cli_util.override('identity_domains.patch_kmsi_setting.command_name', 'patch'), help=u"""Update a Setting

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](patchKmsiSetting)""")
@cli_util.option('--kmsi-setting-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--operations', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The body of an HTTP PATCH request MUST contain the attribute \"Operations\", whose value is an array of one or more patch operations.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}}, output_type={'module': 'identity_domains', 'class': 'KmsiSetting'})
@cli_util.wrap_exceptions
def patch_kmsi_setting(ctx, from_json, kmsi_setting_id, schemas, operations, authorization, resource_type_schema_version, attributes, attribute_sets, if_match):

    if isinstance(kmsi_setting_id, six.string_types) and len(kmsi_setting_id.strip()) == 0:
        raise click.UsageError('Parameter --kmsi-setting-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['Operations'] = cli_util.parse_json_parameter("operations", operations)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.patch_kmsi_setting(
        kmsi_setting_id=kmsi_setting_id,
        patch_op=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@me_group.command(name=cli_util.override('identity_domains.patch_me.command_name', 'patch'), help=u"""Update User Info

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](patchMe)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--operations', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The body of an HTTP PATCH request MUST contain the attribute \"Operations\", whose value is an array of one or more patch operations.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}}, output_type={'module': 'identity_domains', 'class': 'Me'})
@cli_util.wrap_exceptions
def patch_me(ctx, from_json, schemas, operations, authorization, resource_type_schema_version, attributes, attribute_sets, if_match):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['Operations'] = cli_util.parse_json_parameter("operations", operations)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.patch_me(
        patch_op=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_api_key_group.command(name=cli_util.override('identity_domains.patch_my_api_key.command_name', 'patch'), help=u"""Update user's api key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](patchMyApiKey)""")
@cli_util.option('--my-api-key-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--operations', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The body of an HTTP PATCH request MUST contain the attribute \"Operations\", whose value is an array of one or more patch operations.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}}, output_type={'module': 'identity_domains', 'class': 'MyApiKey'})
@cli_util.wrap_exceptions
def patch_my_api_key(ctx, from_json, my_api_key_id, schemas, operations, authorization, resource_type_schema_version, if_match):

    if isinstance(my_api_key_id, six.string_types) and len(my_api_key_id.strip()) == 0:
        raise click.UsageError('Parameter --my-api-key-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['Operations'] = cli_util.parse_json_parameter("operations", operations)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.patch_my_api_key(
        my_api_key_id=my_api_key_id,
        patch_op=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_auth_token_group.command(name=cli_util.override('identity_domains.patch_my_auth_token.command_name', 'patch'), help=u"""Update user's AuthToken

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](patchMyAuthToken)""")
@cli_util.option('--my-auth-token-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--operations', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The body of an HTTP PATCH request MUST contain the attribute \"Operations\", whose value is an array of one or more patch operations.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}}, output_type={'module': 'identity_domains', 'class': 'MyAuthToken'})
@cli_util.wrap_exceptions
def patch_my_auth_token(ctx, from_json, my_auth_token_id, schemas, operations, authorization, resource_type_schema_version, if_match):

    if isinstance(my_auth_token_id, six.string_types) and len(my_auth_token_id.strip()) == 0:
        raise click.UsageError('Parameter --my-auth-token-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['Operations'] = cli_util.parse_json_parameter("operations", operations)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.patch_my_auth_token(
        my_auth_token_id=my_auth_token_id,
        patch_op=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_customer_secret_key_group.command(name=cli_util.override('identity_domains.patch_my_customer_secret_key.command_name', 'patch'), help=u"""Update user's customer secret key

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](patchMyCustomerSecretKey)""")
@cli_util.option('--my-customer-secret-key-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--operations', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The body of an HTTP PATCH request MUST contain the attribute \"Operations\", whose value is an array of one or more patch operations.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}}, output_type={'module': 'identity_domains', 'class': 'MyCustomerSecretKey'})
@cli_util.wrap_exceptions
def patch_my_customer_secret_key(ctx, from_json, my_customer_secret_key_id, schemas, operations, authorization, resource_type_schema_version, if_match):

    if isinstance(my_customer_secret_key_id, six.string_types) and len(my_customer_secret_key_id.strip()) == 0:
        raise click.UsageError('Parameter --my-customer-secret-key-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['Operations'] = cli_util.parse_json_parameter("operations", operations)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.patch_my_customer_secret_key(
        my_customer_secret_key_id=my_customer_secret_key_id,
        patch_op=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_device_group.command(name=cli_util.override('identity_domains.patch_my_device.command_name', 'patch'), help=u"""Update a Device

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](patchMyDevice)""")
@cli_util.option('--my-device-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--operations', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The body of an HTTP PATCH request MUST contain the attribute \"Operations\", whose value is an array of one or more patch operations.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}}, output_type={'module': 'identity_domains', 'class': 'MyDevice'})
@cli_util.wrap_exceptions
def patch_my_device(ctx, from_json, my_device_id, schemas, operations, authorization, resource_type_schema_version, attributes, attribute_sets, if_match):

    if isinstance(my_device_id, six.string_types) and len(my_device_id.strip()) == 0:
        raise click.UsageError('Parameter --my-device-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['Operations'] = cli_util.parse_json_parameter("operations", operations)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.patch_my_device(
        my_device_id=my_device_id,
        patch_op=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_o_auth2_client_credential_group.command(name=cli_util.override('identity_domains.patch_my_o_auth2_client_credential.command_name', 'patch'), help=u"""Update user's oauth2 client credential

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](patchMyOAuth2ClientCredential)""")
@cli_util.option('--my-o-auth2-client-credential-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--operations', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The body of an HTTP PATCH request MUST contain the attribute \"Operations\", whose value is an array of one or more patch operations.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}}, output_type={'module': 'identity_domains', 'class': 'MyOAuth2ClientCredential'})
@cli_util.wrap_exceptions
def patch_my_o_auth2_client_credential(ctx, from_json, my_o_auth2_client_credential_id, schemas, operations, authorization, resource_type_schema_version, if_match):

    if isinstance(my_o_auth2_client_credential_id, six.string_types) and len(my_o_auth2_client_credential_id.strip()) == 0:
        raise click.UsageError('Parameter --my-o-auth2-client-credential-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['Operations'] = cli_util.parse_json_parameter("operations", operations)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.patch_my_o_auth2_client_credential(
        my_o_auth2_client_credential_id=my_o_auth2_client_credential_id,
        patch_op=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_smtp_credential_group.command(name=cli_util.override('identity_domains.patch_my_smtp_credential.command_name', 'patch'), help=u"""Update user's smtp credentials

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](patchMySmtpCredential)""")
@cli_util.option('--my-smtp-credential-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--operations', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The body of an HTTP PATCH request MUST contain the attribute \"Operations\", whose value is an array of one or more patch operations.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}}, output_type={'module': 'identity_domains', 'class': 'MySmtpCredential'})
@cli_util.wrap_exceptions
def patch_my_smtp_credential(ctx, from_json, my_smtp_credential_id, schemas, operations, authorization, resource_type_schema_version, if_match):

    if isinstance(my_smtp_credential_id, six.string_types) and len(my_smtp_credential_id.strip()) == 0:
        raise click.UsageError('Parameter --my-smtp-credential-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['Operations'] = cli_util.parse_json_parameter("operations", operations)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.patch_my_smtp_credential(
        my_smtp_credential_id=my_smtp_credential_id,
        patch_op=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@o_auth2_client_credential_group.command(name=cli_util.override('identity_domains.patch_o_auth2_client_credential.command_name', 'patch'), help=u"""Update user's oauth2 client credential

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](patchOAuth2ClientCredential)""")
@cli_util.option('--o-auth2-client-credential-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--operations', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The body of an HTTP PATCH request MUST contain the attribute \"Operations\", whose value is an array of one or more patch operations.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}}, output_type={'module': 'identity_domains', 'class': 'OAuth2ClientCredential'})
@cli_util.wrap_exceptions
def patch_o_auth2_client_credential(ctx, from_json, o_auth2_client_credential_id, schemas, operations, authorization, resource_type_schema_version, attributes, attribute_sets, if_match):

    if isinstance(o_auth2_client_credential_id, six.string_types) and len(o_auth2_client_credential_id.strip()) == 0:
        raise click.UsageError('Parameter --o-auth2-client-credential-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['Operations'] = cli_util.parse_json_parameter("operations", operations)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.patch_o_auth2_client_credential(
        o_auth2_client_credential_id=o_auth2_client_credential_id,
        patch_op=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@password_policy_group.command(name=cli_util.override('identity_domains.patch_password_policy.command_name', 'patch'), help=u"""Update a Password Policy

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](patchPasswordPolicy)""")
@cli_util.option('--password-policy-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--operations', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The body of an HTTP PATCH request MUST contain the attribute \"Operations\", whose value is an array of one or more patch operations.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}}, output_type={'module': 'identity_domains', 'class': 'PasswordPolicy'})
@cli_util.wrap_exceptions
def patch_password_policy(ctx, from_json, password_policy_id, schemas, operations, authorization, resource_type_schema_version, attributes, attribute_sets, if_match):

    if isinstance(password_policy_id, six.string_types) and len(password_policy_id.strip()) == 0:
        raise click.UsageError('Parameter --password-policy-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['Operations'] = cli_util.parse_json_parameter("operations", operations)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.patch_password_policy(
        password_policy_id=password_policy_id,
        patch_op=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@smtp_credential_group.command(name=cli_util.override('identity_domains.patch_smtp_credential.command_name', 'patch'), help=u"""Update user's smtp credentials

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](patchSmtpCredential)""")
@cli_util.option('--smtp-credential-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--operations', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The body of an HTTP PATCH request MUST contain the attribute \"Operations\", whose value is an array of one or more patch operations.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}}, output_type={'module': 'identity_domains', 'class': 'SmtpCredential'})
@cli_util.wrap_exceptions
def patch_smtp_credential(ctx, from_json, smtp_credential_id, schemas, operations, authorization, resource_type_schema_version, attributes, attribute_sets, if_match):

    if isinstance(smtp_credential_id, six.string_types) and len(smtp_credential_id.strip()) == 0:
        raise click.UsageError('Parameter --smtp-credential-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['Operations'] = cli_util.parse_json_parameter("operations", operations)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.patch_smtp_credential(
        smtp_credential_id=smtp_credential_id,
        patch_op=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@user_group.command(name=cli_util.override('identity_domains.patch_user.command_name', 'patch'), help=u"""Update a User

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](patchUser)""")
@cli_util.option('--user-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--operations', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The body of an HTTP PATCH request MUST contain the attribute \"Operations\", whose value is an array of one or more patch operations.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'operations': {'module': 'identity_domains', 'class': 'list[Operations]'}}, output_type={'module': 'identity_domains', 'class': 'User'})
@cli_util.wrap_exceptions
def patch_user(ctx, from_json, user_id, schemas, operations, authorization, resource_type_schema_version, attributes, attribute_sets, if_match):

    if isinstance(user_id, six.string_types) and len(user_id.strip()) == 0:
        raise click.UsageError('Parameter --user-id cannot be whitespace or empty string')

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['Operations'] = cli_util.parse_json_parameter("operations", operations)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.patch_user(
        user_id=user_id,
        patch_op=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@authentication_factor_setting_group.command(name=cli_util.override('identity_domains.put_authentication_factor_setting.command_name', 'put'), help=u"""Replace Authentication Factor Settings

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](putAuthenticationFactorSetting)""")
@cli_util.option('--authentication-factor-setting-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--sms-enabled', required=True, type=click.BOOL, help=u"""If true, indicates that the Short Message Service (SMS) channel is enabled for authentication

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: true  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--totp-enabled', required=True, type=click.BOOL, help=u"""If true, indicates that the Mobile App One Time Passcode channel is enabled for authentication

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: true  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--push-enabled', required=True, type=click.BOOL, help=u"""If true, indicates that the Mobile App Push Notification channel is enabled for authentication

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: true  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--bypass-code-enabled', required=True, type=click.BOOL, help=u"""If true, indicates that Bypass Code is enabled for authentication

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: true  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--security-questions-enabled', required=True, type=click.BOOL, help=u"""If true, indicates that Security Questions are enabled for authentication

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: true  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--mfa-enrollment-type', required=True, help=u"""Specifies if Multi-Factor Authentication enrollment is mandatory or optional for a user

**Deprecated Since: 18.1.2**

**SCIM++ Properties:**  - idcsCanonicalValueSourceFilter: attrName eq \"mfaEnrollmentType\" and attrValues.value eq \"$(mfaEnrollmentType)\"  - idcsCanonicalValueSourceResourceType: AllowedValue  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--notification-settings', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--bypass-code-settings', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--client-app-settings', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--endpoint-restrictions', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--compliance-policy', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""Compliance Policy that defines actions to be taken when a condition is violated

**SCIM++ Properties:**  - idcsCompositeKey: [name]  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: complex  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--totp-settings', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--email-enabled', type=click.BOOL, help=u"""If true, indicates that the EMAIL channel is enabled for authentication

**Added In:** 18.1.2

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--phone-call-enabled', type=click.BOOL, help=u"""If true, indicates that the phone (PHONE_CALL) channel is enabled for authentication

**Added In:** 20.1.3

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--fido-authenticator-enabled', type=click.BOOL, help=u"""If true, indicates that the Fido Authenticator channels are enabled for authentication

**Added In:** 2009232244

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--yubico-otp-enabled', type=click.BOOL, help=u"""If true, indicates that the Yubico OTP is enabled for authentication

**Added In:** 2109090424

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--mfa-enabled-category', help=u"""Specifies the category of people for whom Multi-Factor Authentication is enabled. This is a readOnly attribute which reflects the value of mfaEnabledCategory attribute in SsoSettings

**Deprecated Since: 18.1.2**

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--hide-backup-factor-enabled', type=click.BOOL, help=u"""If true, indicates that 'Show backup factor(s)' button will be hidden during authentication

**Added In:** 19.3.3

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--auto-enroll-email-factor-disabled', type=click.BOOL, help=u"""If true, indicates that email will not be enrolled as a MFA factor automatically if it a account recovery factor

**Added In:** 2011192329

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--user-enrollment-disabled-factors', type=custom_types.CliCaseInsensitiveChoice(["EMAIL", "SMS", "TOTP", "PUSH", "OFFLINETOTP", "VOICE", "PHONE_CALL", "THIRDPARTY", "FIDO_AUTHENTICATOR"]), help=u"""Factors for which enrollment should be blocked for End User

**Added In:** 2012271618

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--email-settings', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--third-party-factor', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--identity-store-settings', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionthird-party-authentication-factor-settings', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionfido-authentication-factor-settings', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.option('--force', help="""Perform update without prompting for confirmation.""", is_flag=True)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'email-settings': {'module': 'identity_domains', 'class': 'AuthenticationFactorSettingsEmailSettings'}, 'third-party-factor': {'module': 'identity_domains', 'class': 'AuthenticationFactorSettingsThirdPartyFactor'}, 'notification-settings': {'module': 'identity_domains', 'class': 'AuthenticationFactorSettingsNotificationSettings'}, 'identity-store-settings': {'module': 'identity_domains', 'class': 'AuthenticationFactorSettingsIdentityStoreSettings'}, 'bypass-code-settings': {'module': 'identity_domains', 'class': 'AuthenticationFactorSettingsBypassCodeSettings'}, 'client-app-settings': {'module': 'identity_domains', 'class': 'AuthenticationFactorSettingsClientAppSettings'}, 'endpoint-restrictions': {'module': 'identity_domains', 'class': 'AuthenticationFactorSettingsEndpointRestrictions'}, 'compliance-policy': {'module': 'identity_domains', 'class': 'list[AuthenticationFactorSettingsCompliancePolicy]'}, 'totp-settings': {'module': 'identity_domains', 'class': 'AuthenticationFactorSettingsTotpSettings'}, 'urnietfparamsscimschemasoracleidcsextensionthird-party-authentication-factor-settings': {'module': 'identity_domains', 'class': 'ExtensionThirdPartyAuthenticationFactorSettings'}, 'urnietfparamsscimschemasoracleidcsextensionfido-authentication-factor-settings': {'module': 'identity_domains', 'class': 'ExtensionFidoAuthenticationFactorSettings'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'email-settings': {'module': 'identity_domains', 'class': 'AuthenticationFactorSettingsEmailSettings'}, 'third-party-factor': {'module': 'identity_domains', 'class': 'AuthenticationFactorSettingsThirdPartyFactor'}, 'notification-settings': {'module': 'identity_domains', 'class': 'AuthenticationFactorSettingsNotificationSettings'}, 'identity-store-settings': {'module': 'identity_domains', 'class': 'AuthenticationFactorSettingsIdentityStoreSettings'}, 'bypass-code-settings': {'module': 'identity_domains', 'class': 'AuthenticationFactorSettingsBypassCodeSettings'}, 'client-app-settings': {'module': 'identity_domains', 'class': 'AuthenticationFactorSettingsClientAppSettings'}, 'endpoint-restrictions': {'module': 'identity_domains', 'class': 'AuthenticationFactorSettingsEndpointRestrictions'}, 'compliance-policy': {'module': 'identity_domains', 'class': 'list[AuthenticationFactorSettingsCompliancePolicy]'}, 'totp-settings': {'module': 'identity_domains', 'class': 'AuthenticationFactorSettingsTotpSettings'}, 'urnietfparamsscimschemasoracleidcsextensionthird-party-authentication-factor-settings': {'module': 'identity_domains', 'class': 'ExtensionThirdPartyAuthenticationFactorSettings'}, 'urnietfparamsscimschemasoracleidcsextensionfido-authentication-factor-settings': {'module': 'identity_domains', 'class': 'ExtensionFidoAuthenticationFactorSettings'}}, output_type={'module': 'identity_domains', 'class': 'AuthenticationFactorSetting'})
@cli_util.wrap_exceptions
def put_authentication_factor_setting(ctx, from_json, force, authentication_factor_setting_id, schemas, sms_enabled, totp_enabled, push_enabled, bypass_code_enabled, security_questions_enabled, mfa_enrollment_type, notification_settings, bypass_code_settings, client_app_settings, endpoint_restrictions, compliance_policy, totp_settings, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, email_enabled, phone_call_enabled, fido_authenticator_enabled, yubico_otp_enabled, mfa_enabled_category, hide_backup_factor_enabled, auto_enroll_email_factor_disabled, user_enrollment_disabled_factors, email_settings, third_party_factor, identity_store_settings, urnietfparamsscimschemasoracleidcsextensionthird_party_authentication_factor_settings, urnietfparamsscimschemasoracleidcsextensionfido_authentication_factor_settings, if_match):

    if isinstance(authentication_factor_setting_id, six.string_types) and len(authentication_factor_setting_id.strip()) == 0:
        raise click.UsageError('Parameter --authentication-factor-setting-id cannot be whitespace or empty string')
    if not force:
        if schemas or meta or idcs_created_by or idcs_last_modified_by or idcs_prevented_operations or tags or user_enrollment_disabled_factors or email_settings or third_party_factor or notification_settings or identity_store_settings or bypass_code_settings or client_app_settings or endpoint_restrictions or compliance_policy or totp_settings or urnietfparamsscimschemasoracleidcsextensionthird_party_authentication_factor_settings or urnietfparamsscimschemasoracleidcsextensionfido_authentication_factor_settings:
            if not click.confirm("WARNING: Updates to schemas and meta and idcs-created-by and idcs-last-modified-by and idcs-prevented-operations and tags and user-enrollment-disabled-factors and email-settings and third-party-factor and notification-settings and identity-store-settings and bypass-code-settings and client-app-settings and endpoint-restrictions and compliance-policy and totp-settings and urnietfparamsscimschemasoracleidcsextensionthird-party-authentication-factor-settings and urnietfparamsscimschemasoracleidcsextensionfido-authentication-factor-settings will replace any existing values. Are you sure you want to continue?"):
                ctx.abort()

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['smsEnabled'] = sms_enabled
    _details['totpEnabled'] = totp_enabled
    _details['pushEnabled'] = push_enabled
    _details['bypassCodeEnabled'] = bypass_code_enabled
    _details['securityQuestionsEnabled'] = security_questions_enabled
    _details['mfaEnrollmentType'] = mfa_enrollment_type
    _details['notificationSettings'] = cli_util.parse_json_parameter("notification_settings", notification_settings)
    _details['bypassCodeSettings'] = cli_util.parse_json_parameter("bypass_code_settings", bypass_code_settings)
    _details['clientAppSettings'] = cli_util.parse_json_parameter("client_app_settings", client_app_settings)
    _details['endpointRestrictions'] = cli_util.parse_json_parameter("endpoint_restrictions", endpoint_restrictions)
    _details['compliancePolicy'] = cli_util.parse_json_parameter("compliance_policy", compliance_policy)
    _details['totpSettings'] = cli_util.parse_json_parameter("totp_settings", totp_settings)

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if email_enabled is not None:
        _details['emailEnabled'] = email_enabled

    if phone_call_enabled is not None:
        _details['phoneCallEnabled'] = phone_call_enabled

    if fido_authenticator_enabled is not None:
        _details['fidoAuthenticatorEnabled'] = fido_authenticator_enabled

    if yubico_otp_enabled is not None:
        _details['yubicoOtpEnabled'] = yubico_otp_enabled

    if mfa_enabled_category is not None:
        _details['mfaEnabledCategory'] = mfa_enabled_category

    if hide_backup_factor_enabled is not None:
        _details['hideBackupFactorEnabled'] = hide_backup_factor_enabled

    if auto_enroll_email_factor_disabled is not None:
        _details['autoEnrollEmailFactorDisabled'] = auto_enroll_email_factor_disabled

    if user_enrollment_disabled_factors is not None:
        _details['userEnrollmentDisabledFactors'] = cli_util.parse_json_parameter("user_enrollment_disabled_factors", user_enrollment_disabled_factors)

    if email_settings is not None:
        _details['emailSettings'] = cli_util.parse_json_parameter("email_settings", email_settings)

    if third_party_factor is not None:
        _details['thirdPartyFactor'] = cli_util.parse_json_parameter("third_party_factor", third_party_factor)

    if identity_store_settings is not None:
        _details['identityStoreSettings'] = cli_util.parse_json_parameter("identity_store_settings", identity_store_settings)

    if urnietfparamsscimschemasoracleidcsextensionthird_party_authentication_factor_settings is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:thirdParty:AuthenticationFactorSettings'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionthird_party_authentication_factor_settings", urnietfparamsscimschemasoracleidcsextensionthird_party_authentication_factor_settings)

    if urnietfparamsscimschemasoracleidcsextensionfido_authentication_factor_settings is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:fido:AuthenticationFactorSettings'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionfido_authentication_factor_settings", urnietfparamsscimschemasoracleidcsextensionfido_authentication_factor_settings)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.put_authentication_factor_setting(
        authentication_factor_setting_id=authentication_factor_setting_id,
        authentication_factor_setting=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@dynamic_resource_group_group.command(name=cli_util.override('identity_domains.put_dynamic_resource_group.command_name', 'put'), help=u"""Replace a DynamicResourceGroup

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](putDynamicResourceGroup)""")
@cli_util.option('--dynamic-resource-group-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--matching-rule', required=True, help=u"""Store as a string the matching-rule for this Dynamic Resource Group. This may match any number of Apps in this Domain, as well as matching any number of OCI resources that are not in any Domain but that are in the OCI Compartment that contains this Domain.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: true  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--display-name', required=True, help=u"""User-friendly, mutable identifier

**SCIM++ Properties:**  - idcsCsvAttributeName: Display Name  - idcsCsvAttributeNameMappings: [[columnHeaderName:Name, deprecatedColumnHeaderName:Display Name]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: true  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--description', help=u"""text that explains the purpose of this Dynamic Resource Group

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Description  - idcsCsvAttributeNameMappings: [[columnHeaderName:Description]]  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: always  - type: string  - uniqueness: none""")
@cli_util.option('--grants', type=custom_types.CLI_COMPLEX_TYPE, help=u"""Grants assigned to group

**SCIM++ Properties:**  - idcsAddedSinceVersion: 3  - idcsSearchable: true  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type DynamicResourceGroupGrants.  For documentation on DynamicResourceGroupGrants please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/DynamicResourceGroupGrants.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--dynamic-group-app-roles', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of appRoles that are currently granted to this Dynamic Resource Group.  The Identity service will assert these AppRoles for any resource that satisfies the matching-rule of this DynamicResourceGroup.

**SCIM++ Properties:**  - caseExact: false  - idcsCompositeKey: [value]  - idcsSearchable: true  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type DynamicResourceGroupDynamicGroupAppRoles.  For documentation on DynamicResourceGroupDynamicGroupAppRoles please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/DynamicResourceGroupDynamicGroupAppRoles.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextension-oci-tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.option('--force', help="""Perform update without prompting for confirmation.""", is_flag=True)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'grants': {'module': 'identity_domains', 'class': 'list[DynamicResourceGroupGrants]'}, 'dynamic-group-app-roles': {'module': 'identity_domains', 'class': 'list[DynamicResourceGroupDynamicGroupAppRoles]'}, 'urnietfparamsscimschemasoracleidcsextension-oci-tags': {'module': 'identity_domains', 'class': 'ExtensionOCITags'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'grants': {'module': 'identity_domains', 'class': 'list[DynamicResourceGroupGrants]'}, 'dynamic-group-app-roles': {'module': 'identity_domains', 'class': 'list[DynamicResourceGroupDynamicGroupAppRoles]'}, 'urnietfparamsscimschemasoracleidcsextension-oci-tags': {'module': 'identity_domains', 'class': 'ExtensionOCITags'}}, output_type={'module': 'identity_domains', 'class': 'DynamicResourceGroup'})
@cli_util.wrap_exceptions
def put_dynamic_resource_group(ctx, from_json, force, dynamic_resource_group_id, schemas, matching_rule, display_name, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, description, grants, dynamic_group_app_roles, urnietfparamsscimschemasoracleidcsextension_oci_tags, if_match):

    if isinstance(dynamic_resource_group_id, six.string_types) and len(dynamic_resource_group_id.strip()) == 0:
        raise click.UsageError('Parameter --dynamic-resource-group-id cannot be whitespace or empty string')
    if not force:
        if schemas or meta or idcs_created_by or idcs_last_modified_by or idcs_prevented_operations or tags or grants or dynamic_group_app_roles or urnietfparamsscimschemasoracleidcsextension_oci_tags:
            if not click.confirm("WARNING: Updates to schemas and meta and idcs-created-by and idcs-last-modified-by and idcs-prevented-operations and tags and grants and dynamic-group-app-roles and urnietfparamsscimschemasoracleidcsextension-oci-tags will replace any existing values. Are you sure you want to continue?"):
                ctx.abort()

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['matchingRule'] = matching_rule
    _details['displayName'] = display_name

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if description is not None:
        _details['description'] = description

    if grants is not None:
        _details['grants'] = cli_util.parse_json_parameter("grants", grants)

    if dynamic_group_app_roles is not None:
        _details['dynamicGroupAppRoles'] = cli_util.parse_json_parameter("dynamic_group_app_roles", dynamic_group_app_roles)

    if urnietfparamsscimschemasoracleidcsextension_oci_tags is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:OCITags'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextension_oci_tags", urnietfparamsscimschemasoracleidcsextension_oci_tags)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.put_dynamic_resource_group(
        dynamic_resource_group_id=dynamic_resource_group_id,
        dynamic_resource_group=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@group_group.command(name=cli_util.override('identity_domains.put_group.command_name', 'put'), help=u"""Replace a Group

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](putGroup)""")
@cli_util.option('--group-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--display-name', required=True, help=u"""Group display name

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Display Name  - idcsCsvAttributeNameMappings: [[columnHeaderName:Name, deprecatedColumnHeaderName:Display Name]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: true  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--external-id', help=u"""An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--non-unique-display-name', help=u"""A human readable name for Group as defined by the Service Consumer

**Added In:** 2011192329

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Non-Unique Display Name  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: always  - type: string""")
@cli_util.option('--members', type=custom_types.CLI_COMPLEX_TYPE, help=u"""Group members - when requesting members attribute, a max of 10,000 members will be returned in a single request. It is recommended to use startIndex and count to return members in pages instead of in a single response, eg : #attributes=members[startIndex=1%26count=10]

**SCIM++ Properties:**  - caseExact: false  - idcsCompositeKey: [value]  - idcsCsvAttributeNameMappings: [[columnHeaderName:User Members, mapsTo:members[User].value, multiValueDelimiter:;]]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - idcsPaginateResponse: true  - type: complex  - uniqueness: none

This option is a JSON list with items of type GroupMembers.  For documentation on GroupMembers please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/GroupMembers.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensiongroup-group', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionposix-group', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionrequestable-group', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensiondbcs-group', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensiondynamic-group', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextension-oci-tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.option('--force', help="""Perform update without prompting for confirmation.""", is_flag=True)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'members': {'module': 'identity_domains', 'class': 'list[GroupMembers]'}, 'urnietfparamsscimschemasoracleidcsextensiongroup-group': {'module': 'identity_domains', 'class': 'ExtensionGroupGroup'}, 'urnietfparamsscimschemasoracleidcsextensionposix-group': {'module': 'identity_domains', 'class': 'ExtensionPosixGroup'}, 'urnietfparamsscimschemasoracleidcsextensionrequestable-group': {'module': 'identity_domains', 'class': 'ExtensionRequestableGroup'}, 'urnietfparamsscimschemasoracleidcsextensiondbcs-group': {'module': 'identity_domains', 'class': 'ExtensionDbcsGroup'}, 'urnietfparamsscimschemasoracleidcsextensiondynamic-group': {'module': 'identity_domains', 'class': 'ExtensionDynamicGroup'}, 'urnietfparamsscimschemasoracleidcsextension-oci-tags': {'module': 'identity_domains', 'class': 'ExtensionOCITags'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'members': {'module': 'identity_domains', 'class': 'list[GroupMembers]'}, 'urnietfparamsscimschemasoracleidcsextensiongroup-group': {'module': 'identity_domains', 'class': 'ExtensionGroupGroup'}, 'urnietfparamsscimschemasoracleidcsextensionposix-group': {'module': 'identity_domains', 'class': 'ExtensionPosixGroup'}, 'urnietfparamsscimschemasoracleidcsextensionrequestable-group': {'module': 'identity_domains', 'class': 'ExtensionRequestableGroup'}, 'urnietfparamsscimschemasoracleidcsextensiondbcs-group': {'module': 'identity_domains', 'class': 'ExtensionDbcsGroup'}, 'urnietfparamsscimschemasoracleidcsextensiondynamic-group': {'module': 'identity_domains', 'class': 'ExtensionDynamicGroup'}, 'urnietfparamsscimschemasoracleidcsextension-oci-tags': {'module': 'identity_domains', 'class': 'ExtensionOCITags'}}, output_type={'module': 'identity_domains', 'class': 'Group'})
@cli_util.wrap_exceptions
def put_group(ctx, from_json, force, group_id, schemas, display_name, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, external_id, non_unique_display_name, members, urnietfparamsscimschemasoracleidcsextensiongroup_group, urnietfparamsscimschemasoracleidcsextensionposix_group, urnietfparamsscimschemasoracleidcsextensionrequestable_group, urnietfparamsscimschemasoracleidcsextensiondbcs_group, urnietfparamsscimschemasoracleidcsextensiondynamic_group, urnietfparamsscimschemasoracleidcsextension_oci_tags, if_match):

    if isinstance(group_id, six.string_types) and len(group_id.strip()) == 0:
        raise click.UsageError('Parameter --group-id cannot be whitespace or empty string')
    if not force:
        if schemas or meta or idcs_created_by or idcs_last_modified_by or idcs_prevented_operations or tags or members or urnietfparamsscimschemasoracleidcsextensiongroup_group or urnietfparamsscimschemasoracleidcsextensionposix_group or urnietfparamsscimschemasoracleidcsextensionrequestable_group or urnietfparamsscimschemasoracleidcsextensiondbcs_group or urnietfparamsscimschemasoracleidcsextensiondynamic_group or urnietfparamsscimschemasoracleidcsextension_oci_tags:
            if not click.confirm("WARNING: Updates to schemas and meta and idcs-created-by and idcs-last-modified-by and idcs-prevented-operations and tags and members and urnietfparamsscimschemasoracleidcsextensiongroup-group and urnietfparamsscimschemasoracleidcsextensionposix-group and urnietfparamsscimschemasoracleidcsextensionrequestable-group and urnietfparamsscimschemasoracleidcsextensiondbcs-group and urnietfparamsscimschemasoracleidcsextensiondynamic-group and urnietfparamsscimschemasoracleidcsextension-oci-tags will replace any existing values. Are you sure you want to continue?"):
                ctx.abort()

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['displayName'] = display_name

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if external_id is not None:
        _details['externalId'] = external_id

    if non_unique_display_name is not None:
        _details['nonUniqueDisplayName'] = non_unique_display_name

    if members is not None:
        _details['members'] = cli_util.parse_json_parameter("members", members)

    if urnietfparamsscimschemasoracleidcsextensiongroup_group is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:group:Group'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensiongroup_group", urnietfparamsscimschemasoracleidcsextensiongroup_group)

    if urnietfparamsscimschemasoracleidcsextensionposix_group is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:posix:Group'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionposix_group", urnietfparamsscimschemasoracleidcsextensionposix_group)

    if urnietfparamsscimschemasoracleidcsextensionrequestable_group is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:requestable:Group'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionrequestable_group", urnietfparamsscimschemasoracleidcsextensionrequestable_group)

    if urnietfparamsscimschemasoracleidcsextensiondbcs_group is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:dbcs:Group'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensiondbcs_group", urnietfparamsscimschemasoracleidcsextensiondbcs_group)

    if urnietfparamsscimschemasoracleidcsextensiondynamic_group is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:dynamic:Group'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensiondynamic_group", urnietfparamsscimschemasoracleidcsextensiondynamic_group)

    if urnietfparamsscimschemasoracleidcsextension_oci_tags is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:OCITags'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextension_oci_tags", urnietfparamsscimschemasoracleidcsextension_oci_tags)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.put_group(
        group_id=group_id,
        group=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@identity_provider_group.command(name=cli_util.override('identity_domains.put_identity_provider.command_name', 'put'), help=u"""Replace an Identity Provider

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](putIdentityProvider)""")
@cli_util.option('--identity-provider-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--partner-name', required=True, help=u"""Unique name of the trusted Identity Provider.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: true  - returned: always  - type: string  - uniqueness: server""")
@cli_util.option('--enabled', required=True, type=click.BOOL, help=u"""Set to true to indicate Partner enabled.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: true  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--external-id', help=u"""An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--description', help=u"""Description

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--metadata', help=u"""Metadata

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--partner-provider-id', help=u"""Provider ID

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: server""")
@cli_util.option('--tenant-provider-id', help=u"""The alternate Provider ID to be used as the Oracle Identity Cloud Service providerID (instead of the one in SamlSettings) when interacting with this IdP.

**Added In:** 19.2.1

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--succinct-id', help=u"""Succinct ID

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: server""")
@cli_util.option('--idp-sso-url', help=u"""Identity Provider SSO URL

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--logout-request-url', help=u"""Logout request URL

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--logout-response-url', help=u"""Logout response URL

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--signing-certificate', help=u"""Signing certificate

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--encryption-certificate', help=u"""Encryption certificate

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--name-id-format', help=u"""Default authentication request name ID format.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--include-signing-cert-in-signature', type=click.BOOL, help=u"""Set to true to include the signing certificate in the signature.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--authn-request-binding', type=custom_types.CliCaseInsensitiveChoice(["Redirect", "Post"]), help=u"""HTTP binding to use for authentication requests.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--logout-binding', type=custom_types.CliCaseInsensitiveChoice(["Redirect", "Post"]), help=u"""HTTP binding to use for logout.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--logout-enabled', type=click.BOOL, help=u"""Set to true to enable logout.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--signature-hash-algorithm', type=custom_types.CliCaseInsensitiveChoice(["SHA-1", "SHA-256"]), help=u"""Signature hash algorithm.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--icon-url', help=u"""Identity Provider Icon URL.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--shown-on-login-page', type=click.BOOL, help=u"""Set to true to indicate whether to show IdP in login page or not.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--jit-user-prov-enabled', type=click.BOOL, help=u"""Set to true to indicate JIT User Provisioning is enabled

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--jit-user-prov-group-assertion-attribute-enabled', type=click.BOOL, help=u"""Set to true to indicate JIT User Provisioning Groups should be assigned based on assertion attribute

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--jit-user-prov-group-static-list-enabled', type=click.BOOL, help=u"""Set to true to indicate JIT User Provisioning Groups should be assigned from a static list

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--jit-user-prov-create-user-enabled', type=click.BOOL, help=u"""Set to true to indicate JIT User Creation is enabled

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--jit-user-prov-attribute-update-enabled', type=click.BOOL, help=u"""Set to true to indicate JIT User Creation is enabled

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--jit-user-prov-group-assignment-method', type=custom_types.CliCaseInsensitiveChoice(["Overwrite", "Merge"]), help=u"""The default value is 'Overwrite', which tells Just-In-Time user-provisioning to replace any current group-assignments for a User with those assigned by assertions and/or those assigned statically. Specify 'Merge' if you want Just-In-Time user-provisioning to combine its group-assignments with those the user already has.

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--jit-user-prov-group-mapping-mode', type=custom_types.CliCaseInsensitiveChoice(["implicit", "explicit"]), help=u"""Property to indicate the mode of group mapping

**Added In:** 2205120021

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--jit-user-prov-group-mappings', type=custom_types.CLI_COMPLEX_TYPE, help=u"""The list of mappings between the Identity Domain Group and the IDP group.

**Added In:** 2205120021

**SCIM++ Properties:**  - idcsCompositeKey: [idpGroup]  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type IdentityProviderJitUserProvGroupMappings.  For documentation on IdentityProviderJitUserProvGroupMappings please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/IdentityProviderJitUserProvGroupMappings.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--jit-user-prov-group-saml-attribute-name', help=u"""Name of the assertion attribute containing the users groups

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--service-instance-identifier', help=u"""The serviceInstanceIdentifier of the App that hosts this IdP. This value will match the opcServiceInstanceGUID of any service-instance that the IdP represents.

**Added In:** 18.2.6

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: never  - type: string  - uniqueness: server""")
@cli_util.option('--user-mapping-method', type=custom_types.CliCaseInsensitiveChoice(["NameIDToUserAttribute", "AssertionAttributeToUserAttribute", "CorrelationPolicyRule"]), help=u"""User mapping method.

**Deprecated Since: 20.1.3**

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none  - idcsValuePersistedInOtherAttribute: true""")
@cli_util.option('--user-mapping-store-attribute', help=u"""This property specifies the userstore attribute value that must match the incoming assertion attribute value or the incoming nameid attribute value in order to identify the user during SSO.<br>You can construct the userMappingStoreAttribute value by specifying attributes from the Oracle Identity Cloud Service Core Users schema. For examples of how to construct the userMappingStoreAttribute value, see the <b>Example of a Request Body</b> section of the Examples tab for the <a href='./op-admin-v1-identityproviders-post.html'>POST</a> and <a href='./op-admin-v1-identityproviders-id-put.html'>PUT</a> methods of the /IdentityProviders endpoint.

**Deprecated Since: 20.1.3**

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none  - idcsValuePersistedInOtherAttribute: true""")
@cli_util.option('--assertion-attribute', help=u"""Assertion attribute name.

**Deprecated Since: 20.1.3**

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none  - idcsValuePersistedInOtherAttribute: true""")
@cli_util.option('--type', type=custom_types.CliCaseInsensitiveChoice(["SAML", "SOCIAL", "IWA", "X509", "LOCAL"]), help=u"""Identity Provider Type

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: always  - type: string  - uniqueness: none""")
@cli_util.option('--require-force-authn', type=click.BOOL, help=u"""This SP requires requests SAML IdP to enforce re-authentication.

**Added In:** 2102181953

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--requires-encrypted-assertion', type=click.BOOL, help=u"""SAML SP must accept encrypted assertion only.

**Added In:** 2102181953

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--saml-ho-k-required', type=click.BOOL, help=u"""SAML SP HoK Enabled.

**Added In:** 2102181953

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--requested-authentication-context', type=custom_types.CLI_COMPLEX_TYPE, help=u"""SAML SP authentication type.

**Added In:** 2102181953

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--jit-user-prov-ignore-error-on-absent-groups', type=click.BOOL, help=u"""Set to true to indicate ignoring absence of group while provisioning

**Added In:** 2111112015

**SCIM++ Properties:**  - caseExact: false  - idcsAddedSinceVersion: 30  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--jit-user-prov-attributes', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--jit-user-prov-assigned-groups', type=custom_types.CLI_COMPLEX_TYPE, help=u"""Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.

**Added In:** 20.1.3

**SCIM++ Properties:**  - idcsCompositeKey: [value]  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type IdentityProviderJitUserProvAssignedGroups.  For documentation on IdentityProviderJitUserProvAssignedGroups please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/IdentityProviderJitUserProvAssignedGroups.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--correlation-policy', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionsocial-identity-provider', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionx509-identity-provider', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.option('--force', help="""Perform update without prompting for confirmation.""", is_flag=True)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'jit-user-prov-group-mappings': {'module': 'identity_domains', 'class': 'list[IdentityProviderJitUserProvGroupMappings]'}, 'requested-authentication-context': {'module': 'identity_domains', 'class': 'list[string]'}, 'jit-user-prov-attributes': {'module': 'identity_domains', 'class': 'IdentityProviderJitUserProvAttributes'}, 'jit-user-prov-assigned-groups': {'module': 'identity_domains', 'class': 'list[IdentityProviderJitUserProvAssignedGroups]'}, 'correlation-policy': {'module': 'identity_domains', 'class': 'IdentityProviderCorrelationPolicy'}, 'urnietfparamsscimschemasoracleidcsextensionsocial-identity-provider': {'module': 'identity_domains', 'class': 'ExtensionSocialIdentityProvider'}, 'urnietfparamsscimschemasoracleidcsextensionx509-identity-provider': {'module': 'identity_domains', 'class': 'ExtensionX509IdentityProvider'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'jit-user-prov-group-mappings': {'module': 'identity_domains', 'class': 'list[IdentityProviderJitUserProvGroupMappings]'}, 'requested-authentication-context': {'module': 'identity_domains', 'class': 'list[string]'}, 'jit-user-prov-attributes': {'module': 'identity_domains', 'class': 'IdentityProviderJitUserProvAttributes'}, 'jit-user-prov-assigned-groups': {'module': 'identity_domains', 'class': 'list[IdentityProviderJitUserProvAssignedGroups]'}, 'correlation-policy': {'module': 'identity_domains', 'class': 'IdentityProviderCorrelationPolicy'}, 'urnietfparamsscimschemasoracleidcsextensionsocial-identity-provider': {'module': 'identity_domains', 'class': 'ExtensionSocialIdentityProvider'}, 'urnietfparamsscimschemasoracleidcsextensionx509-identity-provider': {'module': 'identity_domains', 'class': 'ExtensionX509IdentityProvider'}}, output_type={'module': 'identity_domains', 'class': 'IdentityProvider'})
@cli_util.wrap_exceptions
def put_identity_provider(ctx, from_json, force, identity_provider_id, schemas, partner_name, enabled, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, external_id, description, metadata, partner_provider_id, tenant_provider_id, succinct_id, idp_sso_url, logout_request_url, logout_response_url, signing_certificate, encryption_certificate, name_id_format, include_signing_cert_in_signature, authn_request_binding, logout_binding, logout_enabled, signature_hash_algorithm, icon_url, shown_on_login_page, jit_user_prov_enabled, jit_user_prov_group_assertion_attribute_enabled, jit_user_prov_group_static_list_enabled, jit_user_prov_create_user_enabled, jit_user_prov_attribute_update_enabled, jit_user_prov_group_assignment_method, jit_user_prov_group_mapping_mode, jit_user_prov_group_mappings, jit_user_prov_group_saml_attribute_name, service_instance_identifier, user_mapping_method, user_mapping_store_attribute, assertion_attribute, type, require_force_authn, requires_encrypted_assertion, saml_ho_k_required, requested_authentication_context, jit_user_prov_ignore_error_on_absent_groups, jit_user_prov_attributes, jit_user_prov_assigned_groups, correlation_policy, urnietfparamsscimschemasoracleidcsextensionsocial_identity_provider, urnietfparamsscimschemasoracleidcsextensionx509_identity_provider, if_match):

    if isinstance(identity_provider_id, six.string_types) and len(identity_provider_id.strip()) == 0:
        raise click.UsageError('Parameter --identity-provider-id cannot be whitespace or empty string')
    if not force:
        if schemas or meta or idcs_created_by or idcs_last_modified_by or idcs_prevented_operations or tags or jit_user_prov_group_mappings or requested_authentication_context or jit_user_prov_attributes or jit_user_prov_assigned_groups or correlation_policy or urnietfparamsscimschemasoracleidcsextensionsocial_identity_provider or urnietfparamsscimschemasoracleidcsextensionx509_identity_provider:
            if not click.confirm("WARNING: Updates to schemas and meta and idcs-created-by and idcs-last-modified-by and idcs-prevented-operations and tags and jit-user-prov-group-mappings and requested-authentication-context and jit-user-prov-attributes and jit-user-prov-assigned-groups and correlation-policy and urnietfparamsscimschemasoracleidcsextensionsocial-identity-provider and urnietfparamsscimschemasoracleidcsextensionx509-identity-provider will replace any existing values. Are you sure you want to continue?"):
                ctx.abort()

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['partnerName'] = partner_name
    _details['enabled'] = enabled

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if external_id is not None:
        _details['externalId'] = external_id

    if description is not None:
        _details['description'] = description

    if metadata is not None:
        _details['metadata'] = metadata

    if partner_provider_id is not None:
        _details['partnerProviderId'] = partner_provider_id

    if tenant_provider_id is not None:
        _details['tenantProviderId'] = tenant_provider_id

    if succinct_id is not None:
        _details['succinctId'] = succinct_id

    if idp_sso_url is not None:
        _details['idpSsoUrl'] = idp_sso_url

    if logout_request_url is not None:
        _details['logoutRequestUrl'] = logout_request_url

    if logout_response_url is not None:
        _details['logoutResponseUrl'] = logout_response_url

    if signing_certificate is not None:
        _details['signingCertificate'] = signing_certificate

    if encryption_certificate is not None:
        _details['encryptionCertificate'] = encryption_certificate

    if name_id_format is not None:
        _details['nameIdFormat'] = name_id_format

    if include_signing_cert_in_signature is not None:
        _details['includeSigningCertInSignature'] = include_signing_cert_in_signature

    if authn_request_binding is not None:
        _details['authnRequestBinding'] = authn_request_binding

    if logout_binding is not None:
        _details['logoutBinding'] = logout_binding

    if logout_enabled is not None:
        _details['logoutEnabled'] = logout_enabled

    if signature_hash_algorithm is not None:
        _details['signatureHashAlgorithm'] = signature_hash_algorithm

    if icon_url is not None:
        _details['iconUrl'] = icon_url

    if shown_on_login_page is not None:
        _details['shownOnLoginPage'] = shown_on_login_page

    if jit_user_prov_enabled is not None:
        _details['jitUserProvEnabled'] = jit_user_prov_enabled

    if jit_user_prov_group_assertion_attribute_enabled is not None:
        _details['jitUserProvGroupAssertionAttributeEnabled'] = jit_user_prov_group_assertion_attribute_enabled

    if jit_user_prov_group_static_list_enabled is not None:
        _details['jitUserProvGroupStaticListEnabled'] = jit_user_prov_group_static_list_enabled

    if jit_user_prov_create_user_enabled is not None:
        _details['jitUserProvCreateUserEnabled'] = jit_user_prov_create_user_enabled

    if jit_user_prov_attribute_update_enabled is not None:
        _details['jitUserProvAttributeUpdateEnabled'] = jit_user_prov_attribute_update_enabled

    if jit_user_prov_group_assignment_method is not None:
        _details['jitUserProvGroupAssignmentMethod'] = jit_user_prov_group_assignment_method

    if jit_user_prov_group_mapping_mode is not None:
        _details['jitUserProvGroupMappingMode'] = jit_user_prov_group_mapping_mode

    if jit_user_prov_group_mappings is not None:
        _details['jitUserProvGroupMappings'] = cli_util.parse_json_parameter("jit_user_prov_group_mappings", jit_user_prov_group_mappings)

    if jit_user_prov_group_saml_attribute_name is not None:
        _details['jitUserProvGroupSAMLAttributeName'] = jit_user_prov_group_saml_attribute_name

    if service_instance_identifier is not None:
        _details['serviceInstanceIdentifier'] = service_instance_identifier

    if user_mapping_method is not None:
        _details['userMappingMethod'] = user_mapping_method

    if user_mapping_store_attribute is not None:
        _details['userMappingStoreAttribute'] = user_mapping_store_attribute

    if assertion_attribute is not None:
        _details['assertionAttribute'] = assertion_attribute

    if type is not None:
        _details['type'] = type

    if require_force_authn is not None:
        _details['requireForceAuthn'] = require_force_authn

    if requires_encrypted_assertion is not None:
        _details['requiresEncryptedAssertion'] = requires_encrypted_assertion

    if saml_ho_k_required is not None:
        _details['samlHoKRequired'] = saml_ho_k_required

    if requested_authentication_context is not None:
        _details['requestedAuthenticationContext'] = cli_util.parse_json_parameter("requested_authentication_context", requested_authentication_context)

    if jit_user_prov_ignore_error_on_absent_groups is not None:
        _details['jitUserProvIgnoreErrorOnAbsentGroups'] = jit_user_prov_ignore_error_on_absent_groups

    if jit_user_prov_attributes is not None:
        _details['jitUserProvAttributes'] = cli_util.parse_json_parameter("jit_user_prov_attributes", jit_user_prov_attributes)

    if jit_user_prov_assigned_groups is not None:
        _details['jitUserProvAssignedGroups'] = cli_util.parse_json_parameter("jit_user_prov_assigned_groups", jit_user_prov_assigned_groups)

    if correlation_policy is not None:
        _details['correlationPolicy'] = cli_util.parse_json_parameter("correlation_policy", correlation_policy)

    if urnietfparamsscimschemasoracleidcsextensionsocial_identity_provider is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:social:IdentityProvider'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionsocial_identity_provider", urnietfparamsscimschemasoracleidcsextensionsocial_identity_provider)

    if urnietfparamsscimschemasoracleidcsextensionx509_identity_provider is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:x509:IdentityProvider'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionx509_identity_provider", urnietfparamsscimschemasoracleidcsextensionx509_identity_provider)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.put_identity_provider(
        identity_provider_id=identity_provider_id,
        identity_provider=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@kmsi_setting_group.command(name=cli_util.override('identity_domains.put_kmsi_setting.command_name', 'put'), help=u"""Replace KmsiSettings

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](putKmsiSetting)""")
@cli_util.option('--kmsi-setting-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--external-id', help=u"""An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--token-validity-in-days', type=click.INT, help=u"""Identifier represents validity duration in days.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - idcsMaxValue: 1100  - idcsMinValue: 1  - uniqueness: none""")
@cli_util.option('--last-used-validity-in-days', type=click.INT, help=u"""Identifier represents duration in days within which kmsi token must be used.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - idcsMaxValue: 365  - idcsMinValue: 1  - uniqueness: none""")
@cli_util.option('--max-allowed-sessions', type=click.INT, help=u"""Identifier represents maximum KMSI sessions allowed in the system.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - idcsMaxValue: 10  - idcsMinValue: 1  - uniqueness: none""")
@cli_util.option('--kmsi-feature-enabled', type=click.BOOL, help=u"""Identifier represents KMSI feature is enabled or not.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--kmsi-prompt-enabled', type=click.BOOL, help=u"""Identifier represents KMSI to be prompted to user or not.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--tou-prompt-disabled', type=click.BOOL, help=u"""Identifier represents whether user is prompted for ToU or not.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--last-enabled-on', help=u"""Timestamp of when the KmsiSettings was enabled last time.

**Added In:** 2203071610

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: dateTime  - uniqueness: none""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.option('--force', help="""Perform update without prompting for confirmation.""", is_flag=True)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}}, output_type={'module': 'identity_domains', 'class': 'KmsiSetting'})
@cli_util.wrap_exceptions
def put_kmsi_setting(ctx, from_json, force, kmsi_setting_id, schemas, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, external_id, token_validity_in_days, last_used_validity_in_days, max_allowed_sessions, kmsi_feature_enabled, kmsi_prompt_enabled, tou_prompt_disabled, last_enabled_on, if_match):

    if isinstance(kmsi_setting_id, six.string_types) and len(kmsi_setting_id.strip()) == 0:
        raise click.UsageError('Parameter --kmsi-setting-id cannot be whitespace or empty string')
    if not force:
        if schemas or meta or idcs_created_by or idcs_last_modified_by or idcs_prevented_operations or tags:
            if not click.confirm("WARNING: Updates to schemas and meta and idcs-created-by and idcs-last-modified-by and idcs-prevented-operations and tags will replace any existing values. Are you sure you want to continue?"):
                ctx.abort()

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if external_id is not None:
        _details['externalId'] = external_id

    if token_validity_in_days is not None:
        _details['tokenValidityInDays'] = token_validity_in_days

    if last_used_validity_in_days is not None:
        _details['lastUsedValidityInDays'] = last_used_validity_in_days

    if max_allowed_sessions is not None:
        _details['maxAllowedSessions'] = max_allowed_sessions

    if kmsi_feature_enabled is not None:
        _details['kmsiFeatureEnabled'] = kmsi_feature_enabled

    if kmsi_prompt_enabled is not None:
        _details['kmsiPromptEnabled'] = kmsi_prompt_enabled

    if tou_prompt_disabled is not None:
        _details['touPromptDisabled'] = tou_prompt_disabled

    if last_enabled_on is not None:
        _details['lastEnabledOn'] = last_enabled_on

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.put_kmsi_setting(
        kmsi_setting_id=kmsi_setting_id,
        kmsi_setting=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@me_group.command(name=cli_util.override('identity_domains.put_me.command_name', 'put'), help=u"""Replace User Info

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](putMe)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--user-name', required=True, help=u"""User name

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: User ID  - idcsCsvAttributeNameMappings: [[columnHeaderName:User Name, deprecatedColumnHeaderName:User ID]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: true  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--name', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--external-id', help=u"""An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeNameMappings: [[columnHeaderName:External Id]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--description', help=u"""Description of the user

**Added In:** 2012271618

**SCIM++ Properties:**  - caseExact: false  - idcsPii: true  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--display-name', help=u"""Display name

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Display Name  - idcsCsvAttributeNameMappings: [[columnHeaderName:Display Name]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--nick-name', help=u"""Nick name

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Nick Name  - idcsCsvAttributeNameMappings: [[columnHeaderName:Nick Name]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--profile-url', help=u"""A fully-qualified URL to a page representing the User's online profile

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Profile URL  - idcsCsvAttributeNameMappings: [[columnHeaderName:Profile Url]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: reference  - uniqueness: none""")
@cli_util.option('--title', help=u"""Title

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Title  - idcsCsvAttributeNameMappings: [[columnHeaderName:Title]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--user-type', type=custom_types.CliCaseInsensitiveChoice(["Contractor", "Employee", "Intern", "Temp", "External", "Service", "Generic"]), help=u"""Used to identify the organization-to-user relationship

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: User Type  - idcsCsvAttributeNameMappings: [[columnHeaderName:User Type]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--locale', help=u"""Used to indicate the User's default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Locale  - idcsCsvAttributeNameMappings: [[columnHeaderName:Locale]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--preferred-language', help=u"""User's preferred written or spoken language used for localized user interfaces

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Preferred Language  - idcsCsvAttributeNameMappings: [[columnHeaderName:Preferred Language]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--timezone', help=u"""User's timezone

**SCIM++ Properties:**  - caseExact: false  - idcsCanonicalValueSourceFilter: attrName eq \"timezones\" and attrValues.value eq \"$(timezone)\"  - idcsCanonicalValueSourceResourceType: AllowedValue  - idcsCsvAttributeName: TimeZone  - idcsCsvAttributeNameMappings: [[columnHeaderName:Time Zone, deprecatedColumnHeaderName:TimeZone]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--active', type=click.BOOL, help=u"""User status

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Active  - idcsCsvAttributeNameMappings: [[columnHeaderName:Active]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--password', help=u"""Password attribute. Max length for password is controlled via Password Policy.

**SCIM++ Properties:**  - idcsCsvAttributeName: Password  - idcsCsvAttributeNameMappings: [[columnHeaderName:Password]]  - idcsPii: true  - idcsSearchable: false  - idcsSensitive: hash  - multiValued: false  - mutability: writeOnly  - required: false  - returned: never  - type: string  - uniqueness: none""")
@cli_util.option('--emails', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A complex attribute representing emails

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - idcsCsvAttributeNameMappings: [[columnHeaderName:Work Email, mapsTo:emails[work].value], [columnHeaderName:Home Email, mapsTo:emails[home].value], [columnHeaderName:Primary Email Type, mapsTo:emails[$(type)].primary], [columnHeaderName:Other Email, mapsTo:emails[other].value], [columnHeaderName:Recovery Email, mapsTo:emails[recovery].value], [columnHeaderName:Work Email Verified, mapsTo:emails[work].verified], [columnHeaderName:Home Email Verified, mapsTo:emails[home].verified], [columnHeaderName:Other Email Verified, mapsTo:emails[other].verified], [columnHeaderName:Recovery Email Verified, mapsTo:emails[recovery].verified]]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type MeEmails.  For documentation on MeEmails please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MeEmails.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--phone-numbers', type=custom_types.CLI_COMPLEX_TYPE, help=u"""Phone numbers

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - idcsCsvAttributeNameMappings: [[columnHeaderName:Work Phone, mapsTo:phoneNumbers[work].value], [columnHeaderName:Mobile No, mapsTo:phoneNumbers[mobile].value], [columnHeaderName:Home Phone, mapsTo:phoneNumbers[home].value], [columnHeaderName:Fax, mapsTo:phoneNumbers[fax].value], [columnHeaderName:Pager, mapsTo:phoneNumbers[pager].value], [columnHeaderName:Other Phone, mapsTo:phoneNumbers[other].value], [columnHeaderName:Recovery Phone, mapsTo:phoneNumbers[recovery].value], [columnHeaderName:Primary Phone Type, mapsTo:phoneNumbers[$(type)].primary]]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type MePhoneNumbers.  For documentation on MePhoneNumbers please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MePhoneNumbers.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--ims', type=custom_types.CLI_COMPLEX_TYPE, help=u"""User's instant messaging addresses

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type MeIms.  For documentation on MeIms please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MeIms.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--photos', type=custom_types.CLI_COMPLEX_TYPE, help=u"""URLs of photos for the User

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type MePhotos.  For documentation on MePhotos please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MePhotos.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--addresses', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.

**SCIM++ Properties:**  - idcsCompositeKey: [type]  - idcsCsvAttributeNameMappings: [[columnHeaderName:Work Address Street, deprecatedColumnHeaderName:Work Street Address, mapsTo:addresses[work].streetAddress], [columnHeaderName:Work Address Locality, deprecatedColumnHeaderName:Work City, mapsTo:addresses[work].locality], [columnHeaderName:Work Address Region, deprecatedColumnHeaderName:Work State, mapsTo:addresses[work].region], [columnHeaderName:Work Address Postal Code, deprecatedColumnHeaderName:Work Postal Code, mapsTo:addresses[work].postalCode], [columnHeaderName:Work Address Country, deprecatedColumnHeaderName:Work Country, mapsTo:addresses[work].country], [columnHeaderName:Work Address Formatted, mapsTo:addresses[work].formatted], [columnHeaderName:Home Address Formatted, mapsTo:addresses[home].formatted], [columnHeaderName:Other Address Formatted, mapsTo:addresses[other].formatted], [columnHeaderName:Home Address Street, mapsTo:addresses[home].streetAddress], [columnHeaderName:Other Address Street, mapsTo:addresses[other].streetAddress], [columnHeaderName:Home Address Locality, mapsTo:addresses[home].locality], [columnHeaderName:Other Address Locality, mapsTo:addresses[other].locality], [columnHeaderName:Home Address Region, mapsTo:addresses[home].region], [columnHeaderName:Other Address Region, mapsTo:addresses[other].region], [columnHeaderName:Home Address Country, mapsTo:addresses[home].country], [columnHeaderName:Other Address Country, mapsTo:addresses[other].country], [columnHeaderName:Home Address Postal Code, mapsTo:addresses[home].postalCode], [columnHeaderName:Other Address Postal Code, mapsTo:addresses[other].postalCode], [columnHeaderName:Primary Address Type, mapsTo:addresses[$(type)].primary]]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type Addresses.  For documentation on addresses please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Addresses.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--groups', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of groups that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated

**SCIM++ Properties:**  - idcsCompositeKey: [value]  - idcsSearchable: true  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type MeGroups.  For documentation on MeGroups please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MeGroups.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--entitlements', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of entitlements for the User that represent a thing the User has.

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type MeEntitlements.  For documentation on MeEntitlements please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MeEntitlements.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--roles', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of roles for the User that collectively represent who the User is; e.g., 'Student', 'Faculty'.

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type MeRoles.  For documentation on MeRoles please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MeRoles.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--x509-certificates', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of certificates issued to the User.

**SCIM++ Properties:**  - idcsCompositeKey: [value]  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type MeX509Certificates.  For documentation on MeX509Certificates please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/MeX509Certificates.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasextensionenterprise2-0-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionuser-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionpassword-state-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionuser-state-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionme-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionposix-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionmfa-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionsecurity-questions-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionself-registration-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionterms-of-use-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextension-oci-tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionuser-credentials-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensioncapabilities-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensiondb-credentials-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.option('--force', help="""Perform update without prompting for confirmation.""", is_flag=True)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'name': {'module': 'identity_domains', 'class': 'MeName'}, 'emails': {'module': 'identity_domains', 'class': 'list[MeEmails]'}, 'phone-numbers': {'module': 'identity_domains', 'class': 'list[MePhoneNumbers]'}, 'ims': {'module': 'identity_domains', 'class': 'list[MeIms]'}, 'photos': {'module': 'identity_domains', 'class': 'list[MePhotos]'}, 'addresses': {'module': 'identity_domains', 'class': 'list[Addresses]'}, 'groups': {'module': 'identity_domains', 'class': 'list[MeGroups]'}, 'entitlements': {'module': 'identity_domains', 'class': 'list[MeEntitlements]'}, 'roles': {'module': 'identity_domains', 'class': 'list[MeRoles]'}, 'x509-certificates': {'module': 'identity_domains', 'class': 'list[MeX509Certificates]'}, 'urnietfparamsscimschemasextensionenterprise2-0-user': {'module': 'identity_domains', 'class': 'ExtensionEnterprise20User'}, 'urnietfparamsscimschemasoracleidcsextensionuser-user': {'module': 'identity_domains', 'class': 'ExtensionUserUser'}, 'urnietfparamsscimschemasoracleidcsextensionpassword-state-user': {'module': 'identity_domains', 'class': 'ExtensionPasswordStateUser'}, 'urnietfparamsscimschemasoracleidcsextensionuser-state-user': {'module': 'identity_domains', 'class': 'ExtensionUserStateUser'}, 'urnietfparamsscimschemasoracleidcsextensionme-user': {'module': 'identity_domains', 'class': 'ExtensionMeUser'}, 'urnietfparamsscimschemasoracleidcsextensionposix-user': {'module': 'identity_domains', 'class': 'ExtensionPosixUser'}, 'urnietfparamsscimschemasoracleidcsextensionmfa-user': {'module': 'identity_domains', 'class': 'ExtensionMfaUser'}, 'urnietfparamsscimschemasoracleidcsextensionsecurity-questions-user': {'module': 'identity_domains', 'class': 'ExtensionSecurityQuestionsUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-registration-user': {'module': 'identity_domains', 'class': 'ExtensionSelfRegistrationUser'}, 'urnietfparamsscimschemasoracleidcsextensionterms-of-use-user': {'module': 'identity_domains', 'class': 'ExtensionTermsOfUseUser'}, 'urnietfparamsscimschemasoracleidcsextension-oci-tags': {'module': 'identity_domains', 'class': 'ExtensionOCITags'}, 'urnietfparamsscimschemasoracleidcsextensionuser-credentials-user': {'module': 'identity_domains', 'class': 'ExtensionUserCredentialsUser'}, 'urnietfparamsscimschemasoracleidcsextensioncapabilities-user': {'module': 'identity_domains', 'class': 'ExtensionCapabilitiesUser'}, 'urnietfparamsscimschemasoracleidcsextensiondb-credentials-user': {'module': 'identity_domains', 'class': 'ExtensionDbCredentialsUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'name': {'module': 'identity_domains', 'class': 'MeName'}, 'emails': {'module': 'identity_domains', 'class': 'list[MeEmails]'}, 'phone-numbers': {'module': 'identity_domains', 'class': 'list[MePhoneNumbers]'}, 'ims': {'module': 'identity_domains', 'class': 'list[MeIms]'}, 'photos': {'module': 'identity_domains', 'class': 'list[MePhotos]'}, 'addresses': {'module': 'identity_domains', 'class': 'list[Addresses]'}, 'groups': {'module': 'identity_domains', 'class': 'list[MeGroups]'}, 'entitlements': {'module': 'identity_domains', 'class': 'list[MeEntitlements]'}, 'roles': {'module': 'identity_domains', 'class': 'list[MeRoles]'}, 'x509-certificates': {'module': 'identity_domains', 'class': 'list[MeX509Certificates]'}, 'urnietfparamsscimschemasextensionenterprise2-0-user': {'module': 'identity_domains', 'class': 'ExtensionEnterprise20User'}, 'urnietfparamsscimschemasoracleidcsextensionuser-user': {'module': 'identity_domains', 'class': 'ExtensionUserUser'}, 'urnietfparamsscimschemasoracleidcsextensionpassword-state-user': {'module': 'identity_domains', 'class': 'ExtensionPasswordStateUser'}, 'urnietfparamsscimschemasoracleidcsextensionuser-state-user': {'module': 'identity_domains', 'class': 'ExtensionUserStateUser'}, 'urnietfparamsscimschemasoracleidcsextensionme-user': {'module': 'identity_domains', 'class': 'ExtensionMeUser'}, 'urnietfparamsscimschemasoracleidcsextensionposix-user': {'module': 'identity_domains', 'class': 'ExtensionPosixUser'}, 'urnietfparamsscimschemasoracleidcsextensionmfa-user': {'module': 'identity_domains', 'class': 'ExtensionMfaUser'}, 'urnietfparamsscimschemasoracleidcsextensionsecurity-questions-user': {'module': 'identity_domains', 'class': 'ExtensionSecurityQuestionsUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-registration-user': {'module': 'identity_domains', 'class': 'ExtensionSelfRegistrationUser'}, 'urnietfparamsscimschemasoracleidcsextensionterms-of-use-user': {'module': 'identity_domains', 'class': 'ExtensionTermsOfUseUser'}, 'urnietfparamsscimschemasoracleidcsextension-oci-tags': {'module': 'identity_domains', 'class': 'ExtensionOCITags'}, 'urnietfparamsscimschemasoracleidcsextensionuser-credentials-user': {'module': 'identity_domains', 'class': 'ExtensionUserCredentialsUser'}, 'urnietfparamsscimschemasoracleidcsextensioncapabilities-user': {'module': 'identity_domains', 'class': 'ExtensionCapabilitiesUser'}, 'urnietfparamsscimschemasoracleidcsextensiondb-credentials-user': {'module': 'identity_domains', 'class': 'ExtensionDbCredentialsUser'}}, output_type={'module': 'identity_domains', 'class': 'Me'})
@cli_util.wrap_exceptions
def put_me(ctx, from_json, force, schemas, user_name, name, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, external_id, description, display_name, nick_name, profile_url, title, user_type, locale, preferred_language, timezone, active, password, emails, phone_numbers, ims, photos, addresses, groups, entitlements, roles, x509_certificates, urnietfparamsscimschemasextensionenterprise2_0_user, urnietfparamsscimschemasoracleidcsextensionuser_user, urnietfparamsscimschemasoracleidcsextensionpassword_state_user, urnietfparamsscimschemasoracleidcsextensionuser_state_user, urnietfparamsscimschemasoracleidcsextensionme_user, urnietfparamsscimschemasoracleidcsextensionposix_user, urnietfparamsscimschemasoracleidcsextensionmfa_user, urnietfparamsscimschemasoracleidcsextensionsecurity_questions_user, urnietfparamsscimschemasoracleidcsextensionself_registration_user, urnietfparamsscimschemasoracleidcsextensionterms_of_use_user, urnietfparamsscimschemasoracleidcsextension_oci_tags, urnietfparamsscimschemasoracleidcsextensionuser_credentials_user, urnietfparamsscimschemasoracleidcsextensioncapabilities_user, urnietfparamsscimschemasoracleidcsextensiondb_credentials_user, if_match):
    if not force:
        if schemas or meta or idcs_created_by or idcs_last_modified_by or idcs_prevented_operations or tags or name or emails or phone_numbers or ims or photos or addresses or groups or entitlements or roles or x509_certificates or urnietfparamsscimschemasextensionenterprise2_0_user or urnietfparamsscimschemasoracleidcsextensionuser_user or urnietfparamsscimschemasoracleidcsextensionpassword_state_user or urnietfparamsscimschemasoracleidcsextensionuser_state_user or urnietfparamsscimschemasoracleidcsextensionme_user or urnietfparamsscimschemasoracleidcsextensionposix_user or urnietfparamsscimschemasoracleidcsextensionmfa_user or urnietfparamsscimschemasoracleidcsextensionsecurity_questions_user or urnietfparamsscimschemasoracleidcsextensionself_registration_user or urnietfparamsscimschemasoracleidcsextensionterms_of_use_user or urnietfparamsscimschemasoracleidcsextension_oci_tags or urnietfparamsscimschemasoracleidcsextensionuser_credentials_user or urnietfparamsscimschemasoracleidcsextensioncapabilities_user or urnietfparamsscimschemasoracleidcsextensiondb_credentials_user:
            if not click.confirm("WARNING: Updates to schemas and meta and idcs-created-by and idcs-last-modified-by and idcs-prevented-operations and tags and name and emails and phone-numbers and ims and photos and addresses and groups and entitlements and roles and x509-certificates and urnietfparamsscimschemasextensionenterprise2-0-user and urnietfparamsscimschemasoracleidcsextensionuser-user and urnietfparamsscimschemasoracleidcsextensionpassword-state-user and urnietfparamsscimschemasoracleidcsextensionuser-state-user and urnietfparamsscimschemasoracleidcsextensionme-user and urnietfparamsscimschemasoracleidcsextensionposix-user and urnietfparamsscimschemasoracleidcsextensionmfa-user and urnietfparamsscimschemasoracleidcsextensionsecurity-questions-user and urnietfparamsscimschemasoracleidcsextensionself-registration-user and urnietfparamsscimschemasoracleidcsextensionterms-of-use-user and urnietfparamsscimschemasoracleidcsextension-oci-tags and urnietfparamsscimschemasoracleidcsextensionuser-credentials-user and urnietfparamsscimschemasoracleidcsextensioncapabilities-user and urnietfparamsscimschemasoracleidcsextensiondb-credentials-user will replace any existing values. Are you sure you want to continue?"):
                ctx.abort()

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['userName'] = user_name
    _details['name'] = cli_util.parse_json_parameter("name", name)

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if external_id is not None:
        _details['externalId'] = external_id

    if description is not None:
        _details['description'] = description

    if display_name is not None:
        _details['displayName'] = display_name

    if nick_name is not None:
        _details['nickName'] = nick_name

    if profile_url is not None:
        _details['profileUrl'] = profile_url

    if title is not None:
        _details['title'] = title

    if user_type is not None:
        _details['userType'] = user_type

    if locale is not None:
        _details['locale'] = locale

    if preferred_language is not None:
        _details['preferredLanguage'] = preferred_language

    if timezone is not None:
        _details['timezone'] = timezone

    if active is not None:
        _details['active'] = active

    if password is not None:
        _details['password'] = password

    if emails is not None:
        _details['emails'] = cli_util.parse_json_parameter("emails", emails)

    if phone_numbers is not None:
        _details['phoneNumbers'] = cli_util.parse_json_parameter("phone_numbers", phone_numbers)

    if ims is not None:
        _details['ims'] = cli_util.parse_json_parameter("ims", ims)

    if photos is not None:
        _details['photos'] = cli_util.parse_json_parameter("photos", photos)

    if addresses is not None:
        _details['addresses'] = cli_util.parse_json_parameter("addresses", addresses)

    if groups is not None:
        _details['groups'] = cli_util.parse_json_parameter("groups", groups)

    if entitlements is not None:
        _details['entitlements'] = cli_util.parse_json_parameter("entitlements", entitlements)

    if roles is not None:
        _details['roles'] = cli_util.parse_json_parameter("roles", roles)

    if x509_certificates is not None:
        _details['x509Certificates'] = cli_util.parse_json_parameter("x509_certificates", x509_certificates)

    if urnietfparamsscimschemasextensionenterprise2_0_user is not None:
        _details['urn:ietf:params:scim:schemas:extension:enterprise:2.0:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasextensionenterprise2_0_user", urnietfparamsscimschemasextensionenterprise2_0_user)

    if urnietfparamsscimschemasoracleidcsextensionuser_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:user:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionuser_user", urnietfparamsscimschemasoracleidcsextensionuser_user)

    if urnietfparamsscimschemasoracleidcsextensionpassword_state_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:passwordState:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionpassword_state_user", urnietfparamsscimschemasoracleidcsextensionpassword_state_user)

    if urnietfparamsscimschemasoracleidcsextensionuser_state_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:userState:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionuser_state_user", urnietfparamsscimschemasoracleidcsextensionuser_state_user)

    if urnietfparamsscimschemasoracleidcsextensionme_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:me:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionme_user", urnietfparamsscimschemasoracleidcsextensionme_user)

    if urnietfparamsscimschemasoracleidcsextensionposix_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:posix:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionposix_user", urnietfparamsscimschemasoracleidcsextensionposix_user)

    if urnietfparamsscimschemasoracleidcsextensionmfa_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:mfa:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionmfa_user", urnietfparamsscimschemasoracleidcsextensionmfa_user)

    if urnietfparamsscimschemasoracleidcsextensionsecurity_questions_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:securityQuestions:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionsecurity_questions_user", urnietfparamsscimschemasoracleidcsextensionsecurity_questions_user)

    if urnietfparamsscimschemasoracleidcsextensionself_registration_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:selfRegistration:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionself_registration_user", urnietfparamsscimschemasoracleidcsextensionself_registration_user)

    if urnietfparamsscimschemasoracleidcsextensionterms_of_use_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:termsOfUse:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionterms_of_use_user", urnietfparamsscimschemasoracleidcsextensionterms_of_use_user)

    if urnietfparamsscimschemasoracleidcsextension_oci_tags is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:OCITags'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextension_oci_tags", urnietfparamsscimschemasoracleidcsextension_oci_tags)

    if urnietfparamsscimschemasoracleidcsextensionuser_credentials_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:userCredentials:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionuser_credentials_user", urnietfparamsscimschemasoracleidcsextensionuser_credentials_user)

    if urnietfparamsscimschemasoracleidcsextensioncapabilities_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:capabilities:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensioncapabilities_user", urnietfparamsscimschemasoracleidcsextensioncapabilities_user)

    if urnietfparamsscimschemasoracleidcsextensiondb_credentials_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:dbCredentials:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensiondb_credentials_user", urnietfparamsscimschemasoracleidcsextensiondb_credentials_user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.put_me(
        me=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@me_password_changer_group.command(name=cli_util.override('identity_domains.put_me_password_changer.command_name', 'put'), help=u"""Self-Service Password Update

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](putMePasswordChanger)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--password', required=True, help=u"""Password attribute. Max length for password is controlled via Password Policy.

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: true  - mutability: writeOnly  - returned: never  - uniqueness: none  - caseExact: false  - idcsSensitive: hash  - idcsSearchable: false""")
@cli_util.option('--old-password', required=True, help=u"""Old password attribute

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: true  - mutability: writeOnly  - returned: never  - uniqueness: none  - caseExact: false  - idcsSensitive: none  - idcsSearchable: false""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--external-id', help=u"""An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - caseExact: false  - mutability: readWrite  - returned: default  - uniqueness: none""")
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.option('--force', help="""Perform update without prompting for confirmation.""", is_flag=True)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}}, output_type={'module': 'identity_domains', 'class': 'MePasswordChanger'})
@cli_util.wrap_exceptions
def put_me_password_changer(ctx, from_json, force, schemas, password, old_password, authorization, resource_type_schema_version, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, external_id, if_match):
    if not force:
        if schemas or meta or idcs_created_by or idcs_last_modified_by or idcs_prevented_operations or tags:
            if not click.confirm("WARNING: Updates to schemas and meta and idcs-created-by and idcs-last-modified-by and idcs-prevented-operations and tags will replace any existing values. Are you sure you want to continue?"):
                ctx.abort()

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['password'] = password
    _details['oldPassword'] = old_password

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if external_id is not None:
        _details['externalId'] = external_id

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.put_me_password_changer(
        me_password_changer=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@password_policy_group.command(name=cli_util.override('identity_domains.put_password_policy.command_name', 'put'), help=u"""Replace a Password Policy

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](putPasswordPolicy)""")
@cli_util.option('--password-policy-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--name', required=True, help=u"""A String that is the name of the policy to display to the user. This is the only mandatory attribute for a password policy.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: true  - returned: always  - type: string  - uniqueness: server""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--external-id', help=u"""An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--description', help=u"""A String that describes the password policy

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--max-length', type=click.INT, help=u"""The maximum password length (in characters). A value of 0 or no value indicates no maximum length restriction.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--min-length', type=click.INT, help=u"""The minimum password length (in characters). A value of 0 or no value indicates no minimum length restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--min-alphas', type=click.INT, help=u"""The minimum number of alphabetic characters in a password.  A value of 0 or no value indicates no minimum alphas restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--min-numerals', type=click.INT, help=u"""The minimum number of numeric characters in a password.  A value of 0 or no value indicates no minimum numeric character restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--min-alpha-numerals', type=click.INT, help=u"""The minimum number of a combination of alphabetic and numeric characters in a password.  A value of 0 or no value indicates no minimum alphanumeric character restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--min-special-chars', type=click.INT, help=u"""The minimum number of special characters in a password. A value of 0 or no value indicates no minimum special characters restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--max-special-chars', type=click.INT, help=u"""The maximum number of special characters in a password.  A value of 0 or no value indicates no maximum special characters restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--min-lower-case', type=click.INT, help=u"""The minimum number of lowercase alphabetic characters in a password.  A value of 0 or no value indicates no minimum lowercase restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--min-upper-case', type=click.INT, help=u"""The minimum number of uppercase alphabetic characters in a password. A value of 0 or no value indicates no minimum uppercase restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--min-unique-chars', type=click.INT, help=u"""The minimum number of unique characters in a password.  A value of 0 or no value indicates no minimum unique characters restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--max-repeated-chars', type=click.INT, help=u"""The maximum number of repeated characters allowed in a password.  A value of 0 or no value indicates no such restriction.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--starts-with-alphabet', type=click.BOOL, help=u"""Indicates that the password must begin with an alphabetic character

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--first-name-disallowed', type=click.BOOL, help=u"""Indicates a sequence of characters that match the user's first name of given name cannot be the password. Password validation against policy will be ignored if length of first name is less than or equal to 3 characters.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--last-name-disallowed', type=click.BOOL, help=u"""Indicates a sequence of characters that match the user's last name of given name cannot be the password. Password validation against policy will be ignored if length of last name is less than or equal to 3 characters.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--user-name-disallowed', type=click.BOOL, help=u"""Indicates a sequence of characters that match the username cannot be the password. Password validation against policy will be ignored if length of user name is less than or equal to 3 characters.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--min-password-age', type=click.INT, help=u"""Minimum time after which the user can resubmit the reset password request

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--password-expires-after', type=click.INT, help=u"""The number of days after which the password expires automatically

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--password-expire-warning', type=click.INT, help=u"""An integer indicating the number of days before which the user should be warned about password expiry.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--required-chars', help=u"""A String value whose contents indicate a set of characters that must appear, in any sequence, in a password value

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--disallowed-chars', help=u"""A String value whose contents indicate a set of characters that cannot appear, in any sequence, in a password value

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--allowed-chars', help=u"""A String value whose contents indicate a set of characters that can appear, in any sequence, in a password value

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--disallowed-substrings', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A String value whose contents indicate a set of substrings that cannot appear, in any sequence, in a password value

**SCIM++ Properties:**  - caseExact: false  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--dictionary-word-disallowed', type=click.BOOL, help=u"""Indicates whether the password can match a dictionary word

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--dictionary-location', help=u"""A Reference value that contains the URI of a dictionary of words not allowed to appear within a password value

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--dictionary-delimiter', help=u"""A delimiter used to separate characters in the dictionary file

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--max-incorrect-attempts', type=click.INT, help=u"""An integer that represents the maximum number of failed logins before an account is locked

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--lockout-duration', type=click.INT, help=u"""The time period in minutes to lock out a user account when the threshold of invalid login attempts is reached. The available range is from 5 through 1440 minutes (24 hours).

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--num-passwords-in-history', type=click.INT, help=u"""The number of passwords that will be kept in history that may not be used as a password

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - uniqueness: none""")
@cli_util.option('--password-strength', type=custom_types.CliCaseInsensitiveChoice(["Simple", "Standard", "Custom"]), help=u"""Indicates whether the password policy is configured as Simple, Standard, or Custom.

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--force-password-reset', type=click.BOOL, help=u"""Indicates whether all of the users should be forced to reset their password on the next login (to comply with new password policy changes)

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: writeOnly  - required: false  - returned: never  - type: boolean  - uniqueness: none""")
@cli_util.option('--groups', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of groups that the password policy belongs to.

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: false  - idcsCompositeKey: [value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type PasswordPolicyGroups.  For documentation on PasswordPolicyGroups please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/PasswordPolicyGroups.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--priority', type=click.INT, help=u"""Password policy priority

**Added In:** 20.1.3

**SCIM++ Properties:**  - caseExact: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: integer  - idcsMinValue: 1  - uniqueness: server""")
@cli_util.option('--configured-password-policy-rules', type=custom_types.CLI_COMPLEX_TYPE, help=u"""List of password policy rules that have values set. This map of stringKey:stringValue pairs can be used to aid users while setting/resetting password

**SCIM++ Properties:**  - caseExact: false  - idcsCompositeKey: [key]  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type PasswordPolicyConfiguredPasswordPolicyRules.  For documentation on PasswordPolicyConfiguredPasswordPolicyRules please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/PasswordPolicyConfiguredPasswordPolicyRules.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.option('--force', help="""Perform update without prompting for confirmation.""", is_flag=True)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'disallowed-substrings': {'module': 'identity_domains', 'class': 'list[string]'}, 'groups': {'module': 'identity_domains', 'class': 'list[PasswordPolicyGroups]'}, 'configured-password-policy-rules': {'module': 'identity_domains', 'class': 'list[PasswordPolicyConfiguredPasswordPolicyRules]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'disallowed-substrings': {'module': 'identity_domains', 'class': 'list[string]'}, 'groups': {'module': 'identity_domains', 'class': 'list[PasswordPolicyGroups]'}, 'configured-password-policy-rules': {'module': 'identity_domains', 'class': 'list[PasswordPolicyConfiguredPasswordPolicyRules]'}}, output_type={'module': 'identity_domains', 'class': 'PasswordPolicy'})
@cli_util.wrap_exceptions
def put_password_policy(ctx, from_json, force, password_policy_id, schemas, name, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, external_id, description, max_length, min_length, min_alphas, min_numerals, min_alpha_numerals, min_special_chars, max_special_chars, min_lower_case, min_upper_case, min_unique_chars, max_repeated_chars, starts_with_alphabet, first_name_disallowed, last_name_disallowed, user_name_disallowed, min_password_age, password_expires_after, password_expire_warning, required_chars, disallowed_chars, allowed_chars, disallowed_substrings, dictionary_word_disallowed, dictionary_location, dictionary_delimiter, max_incorrect_attempts, lockout_duration, num_passwords_in_history, password_strength, force_password_reset, groups, priority, configured_password_policy_rules, if_match):

    if isinstance(password_policy_id, six.string_types) and len(password_policy_id.strip()) == 0:
        raise click.UsageError('Parameter --password-policy-id cannot be whitespace or empty string')
    if not force:
        if schemas or meta or idcs_created_by or idcs_last_modified_by or idcs_prevented_operations or tags or disallowed_substrings or groups or configured_password_policy_rules:
            if not click.confirm("WARNING: Updates to schemas and meta and idcs-created-by and idcs-last-modified-by and idcs-prevented-operations and tags and disallowed-substrings and groups and configured-password-policy-rules will replace any existing values. Are you sure you want to continue?"):
                ctx.abort()

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['name'] = name

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if external_id is not None:
        _details['externalId'] = external_id

    if description is not None:
        _details['description'] = description

    if max_length is not None:
        _details['maxLength'] = max_length

    if min_length is not None:
        _details['minLength'] = min_length

    if min_alphas is not None:
        _details['minAlphas'] = min_alphas

    if min_numerals is not None:
        _details['minNumerals'] = min_numerals

    if min_alpha_numerals is not None:
        _details['minAlphaNumerals'] = min_alpha_numerals

    if min_special_chars is not None:
        _details['minSpecialChars'] = min_special_chars

    if max_special_chars is not None:
        _details['maxSpecialChars'] = max_special_chars

    if min_lower_case is not None:
        _details['minLowerCase'] = min_lower_case

    if min_upper_case is not None:
        _details['minUpperCase'] = min_upper_case

    if min_unique_chars is not None:
        _details['minUniqueChars'] = min_unique_chars

    if max_repeated_chars is not None:
        _details['maxRepeatedChars'] = max_repeated_chars

    if starts_with_alphabet is not None:
        _details['startsWithAlphabet'] = starts_with_alphabet

    if first_name_disallowed is not None:
        _details['firstNameDisallowed'] = first_name_disallowed

    if last_name_disallowed is not None:
        _details['lastNameDisallowed'] = last_name_disallowed

    if user_name_disallowed is not None:
        _details['userNameDisallowed'] = user_name_disallowed

    if min_password_age is not None:
        _details['minPasswordAge'] = min_password_age

    if password_expires_after is not None:
        _details['passwordExpiresAfter'] = password_expires_after

    if password_expire_warning is not None:
        _details['passwordExpireWarning'] = password_expire_warning

    if required_chars is not None:
        _details['requiredChars'] = required_chars

    if disallowed_chars is not None:
        _details['disallowedChars'] = disallowed_chars

    if allowed_chars is not None:
        _details['allowedChars'] = allowed_chars

    if disallowed_substrings is not None:
        _details['disallowedSubstrings'] = cli_util.parse_json_parameter("disallowed_substrings", disallowed_substrings)

    if dictionary_word_disallowed is not None:
        _details['dictionaryWordDisallowed'] = dictionary_word_disallowed

    if dictionary_location is not None:
        _details['dictionaryLocation'] = dictionary_location

    if dictionary_delimiter is not None:
        _details['dictionaryDelimiter'] = dictionary_delimiter

    if max_incorrect_attempts is not None:
        _details['maxIncorrectAttempts'] = max_incorrect_attempts

    if lockout_duration is not None:
        _details['lockoutDuration'] = lockout_duration

    if num_passwords_in_history is not None:
        _details['numPasswordsInHistory'] = num_passwords_in_history

    if password_strength is not None:
        _details['passwordStrength'] = password_strength

    if force_password_reset is not None:
        _details['forcePasswordReset'] = force_password_reset

    if groups is not None:
        _details['groups'] = cli_util.parse_json_parameter("groups", groups)

    if priority is not None:
        _details['priority'] = priority

    if configured_password_policy_rules is not None:
        _details['configuredPasswordPolicyRules'] = cli_util.parse_json_parameter("configured_password_policy_rules", configured_password_policy_rules)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.put_password_policy(
        password_policy_id=password_policy_id,
        password_policy=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@user_group.command(name=cli_util.override('identity_domains.put_user.command_name', 'put'), help=u"""Replace a User

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](putUser)""")
@cli_util.option('--user-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--user-name', required=True, help=u"""User name

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: User ID  - idcsCsvAttributeNameMappings: [[columnHeaderName:User Name, deprecatedColumnHeaderName:User ID]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: true  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--name', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--external-id', help=u"""An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeNameMappings: [[columnHeaderName:External Id]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--description', help=u"""Description of the user

**Added In:** 2012271618

**SCIM++ Properties:**  - caseExact: false  - idcsPii: true  - idcsSearchable: false  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--display-name', help=u"""Display name

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Display Name  - idcsCsvAttributeNameMappings: [[columnHeaderName:Display Name]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--nick-name', help=u"""Nick name

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Nick Name  - idcsCsvAttributeNameMappings: [[columnHeaderName:Nick Name]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--profile-url', help=u"""A fully-qualified URL to a page representing the User's online profile

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Profile URL  - idcsCsvAttributeNameMappings: [[columnHeaderName:Profile Url]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: reference  - uniqueness: none""")
@cli_util.option('--title', help=u"""Title

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Title  - idcsCsvAttributeNameMappings: [[columnHeaderName:Title]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--user-type', type=custom_types.CliCaseInsensitiveChoice(["Contractor", "Employee", "Intern", "Temp", "External", "Service", "Generic"]), help=u"""Used to identify the organization-to-user relationship

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: User Type  - idcsCsvAttributeNameMappings: [[columnHeaderName:User Type]]  - idcsPii: true  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--locale', help=u"""Used to indicate the User's default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Locale  - idcsCsvAttributeNameMappings: [[columnHeaderName:Locale]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--preferred-language', help=u"""User's preferred written or spoken language used for localized user interfaces

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Preferred Language  - idcsCsvAttributeNameMappings: [[columnHeaderName:Preferred Language]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--timezone', help=u"""User's timezone

**SCIM++ Properties:**  - caseExact: false  - idcsCanonicalValueSourceFilter: attrName eq \"timezones\" and attrValues.value eq \"$(timezone)\"  - idcsCanonicalValueSourceResourceType: AllowedValue  - idcsCsvAttributeName: TimeZone  - idcsCsvAttributeNameMappings: [[columnHeaderName:Time Zone, deprecatedColumnHeaderName:TimeZone]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--active', type=click.BOOL, help=u"""User status

**SCIM++ Properties:**  - caseExact: false  - idcsCsvAttributeName: Active  - idcsCsvAttributeNameMappings: [[columnHeaderName:Active]]  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--password', help=u"""Password attribute. Max length for password is controlled via Password Policy.

**SCIM++ Properties:**  - idcsCsvAttributeName: Password  - idcsCsvAttributeNameMappings: [[columnHeaderName:Password]]  - idcsPii: true  - idcsSearchable: false  - idcsSensitive: hash  - multiValued: false  - mutability: writeOnly  - required: false  - returned: never  - type: string  - uniqueness: none""")
@cli_util.option('--emails', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A complex attribute representing emails

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - idcsCsvAttributeNameMappings: [[columnHeaderName:Work Email, mapsTo:emails[work].value], [columnHeaderName:Home Email, mapsTo:emails[home].value], [columnHeaderName:Primary Email Type, mapsTo:emails[$(type)].primary], [columnHeaderName:Other Email, mapsTo:emails[other].value], [columnHeaderName:Recovery Email, mapsTo:emails[recovery].value], [columnHeaderName:Work Email Verified, mapsTo:emails[work].verified], [columnHeaderName:Home Email Verified, mapsTo:emails[home].verified], [columnHeaderName:Other Email Verified, mapsTo:emails[other].verified], [columnHeaderName:Recovery Email Verified, mapsTo:emails[recovery].verified]]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type UserEmails.  For documentation on UserEmails please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserEmails.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--phone-numbers', type=custom_types.CLI_COMPLEX_TYPE, help=u"""Phone numbers

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - idcsCsvAttributeNameMappings: [[columnHeaderName:Work Phone, mapsTo:phoneNumbers[work].value], [columnHeaderName:Mobile No, mapsTo:phoneNumbers[mobile].value], [columnHeaderName:Home Phone, mapsTo:phoneNumbers[home].value], [columnHeaderName:Fax, mapsTo:phoneNumbers[fax].value], [columnHeaderName:Pager, mapsTo:phoneNumbers[pager].value], [columnHeaderName:Other Phone, mapsTo:phoneNumbers[other].value], [columnHeaderName:Recovery Phone, mapsTo:phoneNumbers[recovery].value], [columnHeaderName:Primary Phone Type, mapsTo:phoneNumbers[$(type)].primary]]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type UserPhoneNumbers.  For documentation on UserPhoneNumbers please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserPhoneNumbers.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--ims', type=custom_types.CLI_COMPLEX_TYPE, help=u"""User's instant messaging addresses

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type UserIms.  For documentation on UserIms please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserIms.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--photos', type=custom_types.CLI_COMPLEX_TYPE, help=u"""URLs of photos for the User

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type UserPhotos.  For documentation on UserPhotos please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserPhotos.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--addresses', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.

**SCIM++ Properties:**  - idcsCompositeKey: [type]  - idcsCsvAttributeNameMappings: [[columnHeaderName:Work Address Street, deprecatedColumnHeaderName:Work Street Address, mapsTo:addresses[work].streetAddress], [columnHeaderName:Work Address Locality, deprecatedColumnHeaderName:Work City, mapsTo:addresses[work].locality], [columnHeaderName:Work Address Region, deprecatedColumnHeaderName:Work State, mapsTo:addresses[work].region], [columnHeaderName:Work Address Postal Code, deprecatedColumnHeaderName:Work Postal Code, mapsTo:addresses[work].postalCode], [columnHeaderName:Work Address Country, deprecatedColumnHeaderName:Work Country, mapsTo:addresses[work].country], [columnHeaderName:Work Address Formatted, mapsTo:addresses[work].formatted], [columnHeaderName:Home Address Formatted, mapsTo:addresses[home].formatted], [columnHeaderName:Other Address Formatted, mapsTo:addresses[other].formatted], [columnHeaderName:Home Address Street, mapsTo:addresses[home].streetAddress], [columnHeaderName:Other Address Street, mapsTo:addresses[other].streetAddress], [columnHeaderName:Home Address Locality, mapsTo:addresses[home].locality], [columnHeaderName:Other Address Locality, mapsTo:addresses[other].locality], [columnHeaderName:Home Address Region, mapsTo:addresses[home].region], [columnHeaderName:Other Address Region, mapsTo:addresses[other].region], [columnHeaderName:Home Address Country, mapsTo:addresses[home].country], [columnHeaderName:Other Address Country, mapsTo:addresses[other].country], [columnHeaderName:Home Address Postal Code, mapsTo:addresses[home].postalCode], [columnHeaderName:Other Address Postal Code, mapsTo:addresses[other].postalCode], [columnHeaderName:Primary Address Type, mapsTo:addresses[$(type)].primary]]  - idcsPii: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type Addresses.  For documentation on addresses please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Addresses.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--groups', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of groups that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated

**SCIM++ Properties:**  - idcsCompositeKey: [value]  - idcsSearchable: true  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type UserGroups.  For documentation on UserGroups please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserGroups.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--entitlements', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of entitlements for the User that represent a thing the User has.

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type UserEntitlements.  For documentation on UserEntitlements please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserEntitlements.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--roles', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of roles for the User that collectively represent who the User is; e.g., 'Student', 'Faculty'.

**SCIM++ Properties:**  - idcsCompositeKey: [value, type]  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type UserRoles.  For documentation on UserRoles please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserRoles.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--x509-certificates', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of certificates issued to the User.

**SCIM++ Properties:**  - idcsCompositeKey: [value]  - multiValued: true  - mutability: readWrite  - required: false  - returned: default  - type: complex  - uniqueness: none

This option is a JSON list with items of type UserX509Certificates.  For documentation on UserX509Certificates please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/UserX509Certificates.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasextensionenterprise2-0-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionuser-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionpassword-state-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionuser-state-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionposix-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionkerberos-user-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionmfa-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionadaptive-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionsff-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionsecurity-questions-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionself-registration-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionsocial-account-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensiondb-user-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionterms-of-use-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionpasswordless-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextension-oci-tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionuser-credentials-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensioncapabilities-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensiondb-credentials-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionself-change-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.option('--force', help="""Perform update without prompting for confirmation.""", is_flag=True)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'name': {'module': 'identity_domains', 'class': 'UserName'}, 'emails': {'module': 'identity_domains', 'class': 'list[UserEmails]'}, 'phone-numbers': {'module': 'identity_domains', 'class': 'list[UserPhoneNumbers]'}, 'ims': {'module': 'identity_domains', 'class': 'list[UserIms]'}, 'photos': {'module': 'identity_domains', 'class': 'list[UserPhotos]'}, 'addresses': {'module': 'identity_domains', 'class': 'list[Addresses]'}, 'groups': {'module': 'identity_domains', 'class': 'list[UserGroups]'}, 'entitlements': {'module': 'identity_domains', 'class': 'list[UserEntitlements]'}, 'roles': {'module': 'identity_domains', 'class': 'list[UserRoles]'}, 'x509-certificates': {'module': 'identity_domains', 'class': 'list[UserX509Certificates]'}, 'urnietfparamsscimschemasextensionenterprise2-0-user': {'module': 'identity_domains', 'class': 'ExtensionEnterprise20User'}, 'urnietfparamsscimschemasoracleidcsextensionuser-user': {'module': 'identity_domains', 'class': 'ExtensionUserUser'}, 'urnietfparamsscimschemasoracleidcsextensionpassword-state-user': {'module': 'identity_domains', 'class': 'ExtensionPasswordStateUser'}, 'urnietfparamsscimschemasoracleidcsextensionuser-state-user': {'module': 'identity_domains', 'class': 'ExtensionUserStateUser'}, 'urnietfparamsscimschemasoracleidcsextensionposix-user': {'module': 'identity_domains', 'class': 'ExtensionPosixUser'}, 'urnietfparamsscimschemasoracleidcsextensionkerberos-user-user': {'module': 'identity_domains', 'class': 'ExtensionKerberosUserUser'}, 'urnietfparamsscimschemasoracleidcsextensionmfa-user': {'module': 'identity_domains', 'class': 'ExtensionMfaUser'}, 'urnietfparamsscimschemasoracleidcsextensionadaptive-user': {'module': 'identity_domains', 'class': 'ExtensionAdaptiveUser'}, 'urnietfparamsscimschemasoracleidcsextensionsff-user': {'module': 'identity_domains', 'class': 'ExtensionSffUser'}, 'urnietfparamsscimschemasoracleidcsextensionsecurity-questions-user': {'module': 'identity_domains', 'class': 'ExtensionSecurityQuestionsUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-registration-user': {'module': 'identity_domains', 'class': 'ExtensionSelfRegistrationUser'}, 'urnietfparamsscimschemasoracleidcsextensionsocial-account-user': {'module': 'identity_domains', 'class': 'ExtensionSocialAccountUser'}, 'urnietfparamsscimschemasoracleidcsextensiondb-user-user': {'module': 'identity_domains', 'class': 'ExtensionDbUserUser'}, 'urnietfparamsscimschemasoracleidcsextensionterms-of-use-user': {'module': 'identity_domains', 'class': 'ExtensionTermsOfUseUser'}, 'urnietfparamsscimschemasoracleidcsextensionpasswordless-user': {'module': 'identity_domains', 'class': 'ExtensionPasswordlessUser'}, 'urnietfparamsscimschemasoracleidcsextension-oci-tags': {'module': 'identity_domains', 'class': 'ExtensionOCITags'}, 'urnietfparamsscimschemasoracleidcsextensionuser-credentials-user': {'module': 'identity_domains', 'class': 'ExtensionUserCredentialsUser'}, 'urnietfparamsscimschemasoracleidcsextensioncapabilities-user': {'module': 'identity_domains', 'class': 'ExtensionCapabilitiesUser'}, 'urnietfparamsscimschemasoracleidcsextensiondb-credentials-user': {'module': 'identity_domains', 'class': 'ExtensionDbCredentialsUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'name': {'module': 'identity_domains', 'class': 'UserName'}, 'emails': {'module': 'identity_domains', 'class': 'list[UserEmails]'}, 'phone-numbers': {'module': 'identity_domains', 'class': 'list[UserPhoneNumbers]'}, 'ims': {'module': 'identity_domains', 'class': 'list[UserIms]'}, 'photos': {'module': 'identity_domains', 'class': 'list[UserPhotos]'}, 'addresses': {'module': 'identity_domains', 'class': 'list[Addresses]'}, 'groups': {'module': 'identity_domains', 'class': 'list[UserGroups]'}, 'entitlements': {'module': 'identity_domains', 'class': 'list[UserEntitlements]'}, 'roles': {'module': 'identity_domains', 'class': 'list[UserRoles]'}, 'x509-certificates': {'module': 'identity_domains', 'class': 'list[UserX509Certificates]'}, 'urnietfparamsscimschemasextensionenterprise2-0-user': {'module': 'identity_domains', 'class': 'ExtensionEnterprise20User'}, 'urnietfparamsscimschemasoracleidcsextensionuser-user': {'module': 'identity_domains', 'class': 'ExtensionUserUser'}, 'urnietfparamsscimschemasoracleidcsextensionpassword-state-user': {'module': 'identity_domains', 'class': 'ExtensionPasswordStateUser'}, 'urnietfparamsscimschemasoracleidcsextensionuser-state-user': {'module': 'identity_domains', 'class': 'ExtensionUserStateUser'}, 'urnietfparamsscimschemasoracleidcsextensionposix-user': {'module': 'identity_domains', 'class': 'ExtensionPosixUser'}, 'urnietfparamsscimschemasoracleidcsextensionkerberos-user-user': {'module': 'identity_domains', 'class': 'ExtensionKerberosUserUser'}, 'urnietfparamsscimschemasoracleidcsextensionmfa-user': {'module': 'identity_domains', 'class': 'ExtensionMfaUser'}, 'urnietfparamsscimschemasoracleidcsextensionadaptive-user': {'module': 'identity_domains', 'class': 'ExtensionAdaptiveUser'}, 'urnietfparamsscimschemasoracleidcsextensionsff-user': {'module': 'identity_domains', 'class': 'ExtensionSffUser'}, 'urnietfparamsscimschemasoracleidcsextensionsecurity-questions-user': {'module': 'identity_domains', 'class': 'ExtensionSecurityQuestionsUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-registration-user': {'module': 'identity_domains', 'class': 'ExtensionSelfRegistrationUser'}, 'urnietfparamsscimschemasoracleidcsextensionsocial-account-user': {'module': 'identity_domains', 'class': 'ExtensionSocialAccountUser'}, 'urnietfparamsscimschemasoracleidcsextensiondb-user-user': {'module': 'identity_domains', 'class': 'ExtensionDbUserUser'}, 'urnietfparamsscimschemasoracleidcsextensionterms-of-use-user': {'module': 'identity_domains', 'class': 'ExtensionTermsOfUseUser'}, 'urnietfparamsscimschemasoracleidcsextensionpasswordless-user': {'module': 'identity_domains', 'class': 'ExtensionPasswordlessUser'}, 'urnietfparamsscimschemasoracleidcsextension-oci-tags': {'module': 'identity_domains', 'class': 'ExtensionOCITags'}, 'urnietfparamsscimschemasoracleidcsextensionuser-credentials-user': {'module': 'identity_domains', 'class': 'ExtensionUserCredentialsUser'}, 'urnietfparamsscimschemasoracleidcsextensioncapabilities-user': {'module': 'identity_domains', 'class': 'ExtensionCapabilitiesUser'}, 'urnietfparamsscimschemasoracleidcsextensiondb-credentials-user': {'module': 'identity_domains', 'class': 'ExtensionDbCredentialsUser'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}}, output_type={'module': 'identity_domains', 'class': 'User'})
@cli_util.wrap_exceptions
def put_user(ctx, from_json, force, user_id, schemas, user_name, name, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, external_id, description, display_name, nick_name, profile_url, title, user_type, locale, preferred_language, timezone, active, password, emails, phone_numbers, ims, photos, addresses, groups, entitlements, roles, x509_certificates, urnietfparamsscimschemasextensionenterprise2_0_user, urnietfparamsscimschemasoracleidcsextensionuser_user, urnietfparamsscimschemasoracleidcsextensionpassword_state_user, urnietfparamsscimschemasoracleidcsextensionuser_state_user, urnietfparamsscimschemasoracleidcsextensionposix_user, urnietfparamsscimschemasoracleidcsextensionkerberos_user_user, urnietfparamsscimschemasoracleidcsextensionmfa_user, urnietfparamsscimschemasoracleidcsextensionadaptive_user, urnietfparamsscimschemasoracleidcsextensionsff_user, urnietfparamsscimschemasoracleidcsextensionsecurity_questions_user, urnietfparamsscimschemasoracleidcsextensionself_registration_user, urnietfparamsscimschemasoracleidcsextensionsocial_account_user, urnietfparamsscimschemasoracleidcsextensiondb_user_user, urnietfparamsscimschemasoracleidcsextensionterms_of_use_user, urnietfparamsscimschemasoracleidcsextensionpasswordless_user, urnietfparamsscimschemasoracleidcsextension_oci_tags, urnietfparamsscimschemasoracleidcsextensionuser_credentials_user, urnietfparamsscimschemasoracleidcsextensioncapabilities_user, urnietfparamsscimschemasoracleidcsextensiondb_credentials_user, urnietfparamsscimschemasoracleidcsextensionself_change_user, if_match):

    if isinstance(user_id, six.string_types) and len(user_id.strip()) == 0:
        raise click.UsageError('Parameter --user-id cannot be whitespace or empty string')
    if not force:
        if schemas or meta or idcs_created_by or idcs_last_modified_by or idcs_prevented_operations or tags or name or emails or phone_numbers or ims or photos or addresses or groups or entitlements or roles or x509_certificates or urnietfparamsscimschemasextensionenterprise2_0_user or urnietfparamsscimschemasoracleidcsextensionuser_user or urnietfparamsscimschemasoracleidcsextensionpassword_state_user or urnietfparamsscimschemasoracleidcsextensionuser_state_user or urnietfparamsscimschemasoracleidcsextensionposix_user or urnietfparamsscimschemasoracleidcsextensionkerberos_user_user or urnietfparamsscimschemasoracleidcsextensionmfa_user or urnietfparamsscimschemasoracleidcsextensionadaptive_user or urnietfparamsscimschemasoracleidcsextensionsff_user or urnietfparamsscimschemasoracleidcsextensionsecurity_questions_user or urnietfparamsscimschemasoracleidcsextensionself_registration_user or urnietfparamsscimschemasoracleidcsextensionsocial_account_user or urnietfparamsscimschemasoracleidcsextensiondb_user_user or urnietfparamsscimschemasoracleidcsextensionterms_of_use_user or urnietfparamsscimschemasoracleidcsextensionpasswordless_user or urnietfparamsscimschemasoracleidcsextension_oci_tags or urnietfparamsscimschemasoracleidcsextensionuser_credentials_user or urnietfparamsscimschemasoracleidcsextensioncapabilities_user or urnietfparamsscimschemasoracleidcsextensiondb_credentials_user or urnietfparamsscimschemasoracleidcsextensionself_change_user:
            if not click.confirm("WARNING: Updates to schemas and meta and idcs-created-by and idcs-last-modified-by and idcs-prevented-operations and tags and name and emails and phone-numbers and ims and photos and addresses and groups and entitlements and roles and x509-certificates and urnietfparamsscimschemasextensionenterprise2-0-user and urnietfparamsscimschemasoracleidcsextensionuser-user and urnietfparamsscimschemasoracleidcsextensionpassword-state-user and urnietfparamsscimschemasoracleidcsextensionuser-state-user and urnietfparamsscimschemasoracleidcsextensionposix-user and urnietfparamsscimschemasoracleidcsextensionkerberos-user-user and urnietfparamsscimschemasoracleidcsextensionmfa-user and urnietfparamsscimschemasoracleidcsextensionadaptive-user and urnietfparamsscimschemasoracleidcsextensionsff-user and urnietfparamsscimschemasoracleidcsextensionsecurity-questions-user and urnietfparamsscimschemasoracleidcsextensionself-registration-user and urnietfparamsscimschemasoracleidcsextensionsocial-account-user and urnietfparamsscimschemasoracleidcsextensiondb-user-user and urnietfparamsscimschemasoracleidcsextensionterms-of-use-user and urnietfparamsscimschemasoracleidcsextensionpasswordless-user and urnietfparamsscimschemasoracleidcsextension-oci-tags and urnietfparamsscimschemasoracleidcsextensionuser-credentials-user and urnietfparamsscimschemasoracleidcsextensioncapabilities-user and urnietfparamsscimschemasoracleidcsextensiondb-credentials-user and urnietfparamsscimschemasoracleidcsextensionself-change-user will replace any existing values. Are you sure you want to continue?"):
                ctx.abort()

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['userName'] = user_name
    _details['name'] = cli_util.parse_json_parameter("name", name)

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if external_id is not None:
        _details['externalId'] = external_id

    if description is not None:
        _details['description'] = description

    if display_name is not None:
        _details['displayName'] = display_name

    if nick_name is not None:
        _details['nickName'] = nick_name

    if profile_url is not None:
        _details['profileUrl'] = profile_url

    if title is not None:
        _details['title'] = title

    if user_type is not None:
        _details['userType'] = user_type

    if locale is not None:
        _details['locale'] = locale

    if preferred_language is not None:
        _details['preferredLanguage'] = preferred_language

    if timezone is not None:
        _details['timezone'] = timezone

    if active is not None:
        _details['active'] = active

    if password is not None:
        _details['password'] = password

    if emails is not None:
        _details['emails'] = cli_util.parse_json_parameter("emails", emails)

    if phone_numbers is not None:
        _details['phoneNumbers'] = cli_util.parse_json_parameter("phone_numbers", phone_numbers)

    if ims is not None:
        _details['ims'] = cli_util.parse_json_parameter("ims", ims)

    if photos is not None:
        _details['photos'] = cli_util.parse_json_parameter("photos", photos)

    if addresses is not None:
        _details['addresses'] = cli_util.parse_json_parameter("addresses", addresses)

    if groups is not None:
        _details['groups'] = cli_util.parse_json_parameter("groups", groups)

    if entitlements is not None:
        _details['entitlements'] = cli_util.parse_json_parameter("entitlements", entitlements)

    if roles is not None:
        _details['roles'] = cli_util.parse_json_parameter("roles", roles)

    if x509_certificates is not None:
        _details['x509Certificates'] = cli_util.parse_json_parameter("x509_certificates", x509_certificates)

    if urnietfparamsscimschemasextensionenterprise2_0_user is not None:
        _details['urn:ietf:params:scim:schemas:extension:enterprise:2.0:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasextensionenterprise2_0_user", urnietfparamsscimschemasextensionenterprise2_0_user)

    if urnietfparamsscimschemasoracleidcsextensionuser_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:user:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionuser_user", urnietfparamsscimschemasoracleidcsextensionuser_user)

    if urnietfparamsscimschemasoracleidcsextensionpassword_state_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:passwordState:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionpassword_state_user", urnietfparamsscimschemasoracleidcsextensionpassword_state_user)

    if urnietfparamsscimschemasoracleidcsextensionuser_state_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:userState:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionuser_state_user", urnietfparamsscimschemasoracleidcsextensionuser_state_user)

    if urnietfparamsscimschemasoracleidcsextensionposix_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:posix:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionposix_user", urnietfparamsscimschemasoracleidcsextensionposix_user)

    if urnietfparamsscimschemasoracleidcsextensionkerberos_user_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:kerberosUser:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionkerberos_user_user", urnietfparamsscimschemasoracleidcsextensionkerberos_user_user)

    if urnietfparamsscimschemasoracleidcsextensionmfa_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:mfa:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionmfa_user", urnietfparamsscimschemasoracleidcsextensionmfa_user)

    if urnietfparamsscimschemasoracleidcsextensionadaptive_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:adaptive:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionadaptive_user", urnietfparamsscimschemasoracleidcsextensionadaptive_user)

    if urnietfparamsscimschemasoracleidcsextensionsff_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:sff:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionsff_user", urnietfparamsscimschemasoracleidcsextensionsff_user)

    if urnietfparamsscimschemasoracleidcsextensionsecurity_questions_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:securityQuestions:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionsecurity_questions_user", urnietfparamsscimschemasoracleidcsextensionsecurity_questions_user)

    if urnietfparamsscimschemasoracleidcsextensionself_registration_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:selfRegistration:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionself_registration_user", urnietfparamsscimschemasoracleidcsextensionself_registration_user)

    if urnietfparamsscimschemasoracleidcsextensionsocial_account_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:socialAccount:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionsocial_account_user", urnietfparamsscimschemasoracleidcsextensionsocial_account_user)

    if urnietfparamsscimschemasoracleidcsextensiondb_user_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:dbUser:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensiondb_user_user", urnietfparamsscimschemasoracleidcsextensiondb_user_user)

    if urnietfparamsscimschemasoracleidcsextensionterms_of_use_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:termsOfUse:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionterms_of_use_user", urnietfparamsscimschemasoracleidcsextensionterms_of_use_user)

    if urnietfparamsscimschemasoracleidcsextensionpasswordless_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:passwordless:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionpasswordless_user", urnietfparamsscimschemasoracleidcsextensionpasswordless_user)

    if urnietfparamsscimschemasoracleidcsextension_oci_tags is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:OCITags'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextension_oci_tags", urnietfparamsscimschemasoracleidcsextension_oci_tags)

    if urnietfparamsscimschemasoracleidcsextensionuser_credentials_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:userCredentials:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionuser_credentials_user", urnietfparamsscimschemasoracleidcsextensionuser_credentials_user)

    if urnietfparamsscimschemasoracleidcsextensioncapabilities_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:capabilities:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensioncapabilities_user", urnietfparamsscimschemasoracleidcsextensioncapabilities_user)

    if urnietfparamsscimschemasoracleidcsextensiondb_credentials_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:dbCredentials:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensiondb_credentials_user", urnietfparamsscimschemasoracleidcsextensiondb_credentials_user)

    if urnietfparamsscimschemasoracleidcsextensionself_change_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:selfChange:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionself_change_user", urnietfparamsscimschemasoracleidcsextensionself_change_user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.put_user(
        user_id=user_id,
        user=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@user_capabilities_changer_group.command(name=cli_util.override('identity_domains.put_user_capabilities_changer.command_name', 'put'), help=u"""Change user capabilities

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](putUserCapabilitiesChanger)""")
@cli_util.option('--user-capabilities-changer-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--can-use-api-keys', type=click.BOOL, help=u"""Indicates weather a user can use api keys

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--can-use-auth-tokens', type=click.BOOL, help=u"""Indicates weather a user can use auth tokens

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--can-use-console-password', type=click.BOOL, help=u"""Indicates weather a user can use console password

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--can-use-customer-secret-keys', type=click.BOOL, help=u"""Indicates weather a user can use customer secret keys

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--can-use-o-auth2-client-credentials', type=click.BOOL, help=u"""Indicates weather a user can use oauth2 client credentials

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--can-use-smtp-credentials', type=click.BOOL, help=u"""Indicates weather a user can use smtp credentials

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--can-use-db-credentials', type=click.BOOL, help=u"""Indicates weather a user can use db credentials

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionself-change-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.option('--force', help="""Perform update without prompting for confirmation.""", is_flag=True)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}}, output_type={'module': 'identity_domains', 'class': 'UserCapabilitiesChanger'})
@cli_util.wrap_exceptions
def put_user_capabilities_changer(ctx, from_json, force, user_capabilities_changer_id, schemas, authorization, resource_type_schema_version, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, can_use_api_keys, can_use_auth_tokens, can_use_console_password, can_use_customer_secret_keys, can_use_o_auth2_client_credentials, can_use_smtp_credentials, can_use_db_credentials, urnietfparamsscimschemasoracleidcsextensionself_change_user, if_match):

    if isinstance(user_capabilities_changer_id, six.string_types) and len(user_capabilities_changer_id.strip()) == 0:
        raise click.UsageError('Parameter --user-capabilities-changer-id cannot be whitespace or empty string')
    if not force:
        if schemas or meta or idcs_created_by or idcs_last_modified_by or idcs_prevented_operations or tags or urnietfparamsscimschemasoracleidcsextensionself_change_user:
            if not click.confirm("WARNING: Updates to schemas and meta and idcs-created-by and idcs-last-modified-by and idcs-prevented-operations and tags and urnietfparamsscimschemasoracleidcsextensionself-change-user will replace any existing values. Are you sure you want to continue?"):
                ctx.abort()

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if can_use_api_keys is not None:
        _details['canUseApiKeys'] = can_use_api_keys

    if can_use_auth_tokens is not None:
        _details['canUseAuthTokens'] = can_use_auth_tokens

    if can_use_console_password is not None:
        _details['canUseConsolePassword'] = can_use_console_password

    if can_use_customer_secret_keys is not None:
        _details['canUseCustomerSecretKeys'] = can_use_customer_secret_keys

    if can_use_o_auth2_client_credentials is not None:
        _details['canUseOAuth2ClientCredentials'] = can_use_o_auth2_client_credentials

    if can_use_smtp_credentials is not None:
        _details['canUseSmtpCredentials'] = can_use_smtp_credentials

    if can_use_db_credentials is not None:
        _details['canUseDbCredentials'] = can_use_db_credentials

    if urnietfparamsscimschemasoracleidcsextensionself_change_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:selfChange:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionself_change_user", urnietfparamsscimschemasoracleidcsextensionself_change_user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.put_user_capabilities_changer(
        user_capabilities_changer_id=user_capabilities_changer_id,
        user_capabilities_changer=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@user_password_changer_group.command(name=cli_util.override('identity_domains.put_user_password_changer.command_name', 'put'), help=u"""Change a User Password (Known Value)

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](putUserPasswordChanger)""")
@cli_util.option('--user-password-changer-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--password', required=True, help=u"""Password attribute. Max length for password is controlled via Password Policy.

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: true  - mutability: writeOnly  - returned: never  - uniqueness: none  - idcsSensitive: none""")
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--external-id', help=u"""An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: readWrite  - returned: default  - uniqueness: none""")
@cli_util.option('--bypass-notification', type=click.BOOL, help=u"""A Boolean value indicating whether or not to send email notification after password is changed.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: immutable  - required: false  - returned: never  - type: boolean  - uniqueness: none""")
@cli_util.option('--notification-email-template-id', help=u"""Specifies the EmailTemplate to be used when sending notification to the user this request is for. If specified, it overrides the default EmailTemplate for this event.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: writeOnly  - required: false  - returned: never  - type: string  - uniqueness: none""")
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionself-change-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.option('--force', help="""Perform update without prompting for confirmation.""", is_flag=True)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}}, output_type={'module': 'identity_domains', 'class': 'UserPasswordChanger'})
@cli_util.wrap_exceptions
def put_user_password_changer(ctx, from_json, force, user_password_changer_id, schemas, password, authorization, resource_type_schema_version, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, external_id, bypass_notification, notification_email_template_id, urnietfparamsscimschemasoracleidcsextensionself_change_user, if_match):

    if isinstance(user_password_changer_id, six.string_types) and len(user_password_changer_id.strip()) == 0:
        raise click.UsageError('Parameter --user-password-changer-id cannot be whitespace or empty string')
    if not force:
        if schemas or meta or idcs_created_by or idcs_last_modified_by or idcs_prevented_operations or tags or urnietfparamsscimschemasoracleidcsextensionself_change_user:
            if not click.confirm("WARNING: Updates to schemas and meta and idcs-created-by and idcs-last-modified-by and idcs-prevented-operations and tags and urnietfparamsscimschemasoracleidcsextensionself-change-user will replace any existing values. Are you sure you want to continue?"):
                ctx.abort()

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)
    _details['password'] = password

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if external_id is not None:
        _details['externalId'] = external_id

    if bypass_notification is not None:
        _details['bypassNotification'] = bypass_notification

    if notification_email_template_id is not None:
        _details['notificationEmailTemplateId'] = notification_email_template_id

    if urnietfparamsscimschemasoracleidcsextensionself_change_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:selfChange:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionself_change_user", urnietfparamsscimschemasoracleidcsextensionself_change_user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.put_user_password_changer(
        user_password_changer_id=user_password_changer_id,
        user_password_changer=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@user_password_resetter_group.command(name=cli_util.override('identity_domains.put_user_password_resetter.command_name', 'put'), help=u"""Reset a User Password (Random Value)

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](putUserPasswordResetter)""")
@cli_util.option('--user-password-resetter-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--external-id', help=u"""An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.

**SCIM++ Properties:**  - type: string  - multiValued: false  - required: false  - mutability: readWrite  - returned: default  - uniqueness: none""")
@cli_util.option('--bypass-notification', type=click.BOOL, help=u"""A Boolean value indicating whether or not to send email notification after resetting the password of the OCI IAM user.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: immutable  - required: false  - returned: never  - type: boolean  - uniqueness: none""")
@cli_util.option('--user-flow-controlled-by-external-client', type=click.BOOL, help=u"""A Boolean value indicating whether to bypass notification and return user token to be used by an external client to control the user flow.

**SCIM++ Properties:**  - type: boolean  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: immutable  - required: false  - returned: never  - uniqueness: none""")
@cli_util.option('--user-token', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--notification-email-template-id', help=u"""Specifies the EmailTemplate to be used when sending notification to the user this request is for. If specified, it overrides the default EmailTemplate for this event.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: writeOnly  - required: false  - returned: never  - type: string  - uniqueness: none""")
@cli_util.option('--one-time-password', help=u"""One time password will be returned when user does not have primary email address

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionself-change-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.option('--force', help="""Perform update without prompting for confirmation.""", is_flag=True)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user-token': {'module': 'identity_domains', 'class': 'UserPasswordResetterUserToken'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'user-token': {'module': 'identity_domains', 'class': 'UserPasswordResetterUserToken'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}}, output_type={'module': 'identity_domains', 'class': 'UserPasswordResetter'})
@cli_util.wrap_exceptions
def put_user_password_resetter(ctx, from_json, force, user_password_resetter_id, schemas, authorization, resource_type_schema_version, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, external_id, bypass_notification, user_flow_controlled_by_external_client, user_token, notification_email_template_id, one_time_password, urnietfparamsscimschemasoracleidcsextensionself_change_user, if_match):

    if isinstance(user_password_resetter_id, six.string_types) and len(user_password_resetter_id.strip()) == 0:
        raise click.UsageError('Parameter --user-password-resetter-id cannot be whitespace or empty string')
    if not force:
        if schemas or meta or idcs_created_by or idcs_last_modified_by or idcs_prevented_operations or tags or user_token or urnietfparamsscimschemasoracleidcsextensionself_change_user:
            if not click.confirm("WARNING: Updates to schemas and meta and idcs-created-by and idcs-last-modified-by and idcs-prevented-operations and tags and user-token and urnietfparamsscimschemasoracleidcsextensionself-change-user will replace any existing values. Are you sure you want to continue?"):
                ctx.abort()

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if external_id is not None:
        _details['externalId'] = external_id

    if bypass_notification is not None:
        _details['bypassNotification'] = bypass_notification

    if user_flow_controlled_by_external_client is not None:
        _details['userFlowControlledByExternalClient'] = user_flow_controlled_by_external_client

    if user_token is not None:
        _details['userToken'] = cli_util.parse_json_parameter("user_token", user_token)

    if notification_email_template_id is not None:
        _details['notificationEmailTemplateId'] = notification_email_template_id

    if one_time_password is not None:
        _details['oneTimePassword'] = one_time_password

    if urnietfparamsscimschemasoracleidcsextensionself_change_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:selfChange:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionself_change_user", urnietfparamsscimschemasoracleidcsextensionself_change_user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.put_user_password_resetter(
        user_password_resetter_id=user_password_resetter_id,
        user_password_resetter=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@user_status_changer_group.command(name=cli_util.override('identity_domains.put_user_status_changer.command_name', 'put'), help=u"""Change User Status

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](putUserStatusChanger)""")
@cli_util.option('--user-status-changer-id', required=True, help=u"""ID of the resource""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: true  - mutability: readWrite  - required: true  - returned: default  - type: string  - uniqueness: none""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', help=u"""A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.""")
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), multiple=True, help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.""")
@cli_util.option('--id', help=u"""Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: always  - type: string  - uniqueness: global""")
@cli_util.option('--ocid', help=u"""Unique OCI identifier for the SCIM Resource.

**SCIM++ Properties:**  - caseExact: true  - idcsSearchable: true  - multiValued: false  - mutability: immutable  - required: false  - returned: default  - type: string  - uniqueness: global""")
@cli_util.option('--meta', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-created-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-last-modified-by', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--idcs-prevented-operations', type=custom_types.CliCaseInsensitiveChoice(["replace", "update", "delete"]), help=u"""Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.

**SCIM++ Properties:**  - idcsSearchable: false  - multiValued: true  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--tags', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A list of tags on this resource.

**SCIM++ Properties:**  - idcsCompositeKey: [key, value]  - idcsSearchable: true  - multiValued: true  - mutability: readWrite  - required: false  - returned: request  - type: complex  - uniqueness: none

This option is a JSON list with items of type Tags.  For documentation on tags please see our API reference: https://docs.cloud.oracle.com/api/#/en/identitydomains/v1/datatypes/Tags.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--delete-in-progress', type=click.BOOL, help=u"""A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--idcs-last-upgraded-in-release', help=u"""The release number when the resource was upgraded.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: request  - type: string  - uniqueness: none""")
@cli_util.option('--domain-ocid', help=u"""OCI Domain Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--compartment-ocid', help=u"""OCI Compartment Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--tenancy-ocid', help=u"""OCI Tenant Id (ocid) in which the resource lives.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: false  - multiValued: false  - mutability: readOnly  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--external-id', help=u"""An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: string  - uniqueness: none""")
@cli_util.option('--active', type=click.BOOL, help=u"""User status

**SCIM++ Properties:**  - caseExact: false  - idcsSearchable: true  - multiValued: false  - mutability: readWrite  - required: false  - returned: default  - type: boolean  - uniqueness: none""")
@cli_util.option('--urnietfparamsscimschemasoracleidcsextensionself-change-user', type=custom_types.CLI_COMPLEX_TYPE, help=u"""""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--if-match', help=u"""Used to make the request conditional on an ETag""")
@cli_util.option('--force', help="""Perform update without prompting for confirmation.""", is_flag=True)
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'meta': {'module': 'identity_domains', 'class': 'Meta'}, 'idcs-created-by': {'module': 'identity_domains', 'class': 'IdcsCreatedBy'}, 'idcs-last-modified-by': {'module': 'identity_domains', 'class': 'IdcsLastModifiedBy'}, 'tags': {'module': 'identity_domains', 'class': 'list[Tags]'}, 'urnietfparamsscimschemasoracleidcsextensionself-change-user': {'module': 'identity_domains', 'class': 'ExtensionSelfChangeUser'}}, output_type={'module': 'identity_domains', 'class': 'UserStatusChanger'})
@cli_util.wrap_exceptions
def put_user_status_changer(ctx, from_json, force, user_status_changer_id, schemas, authorization, resource_type_schema_version, attributes, attribute_sets, id, ocid, meta, idcs_created_by, idcs_last_modified_by, idcs_prevented_operations, tags, delete_in_progress, idcs_last_upgraded_in_release, domain_ocid, compartment_ocid, tenancy_ocid, external_id, active, urnietfparamsscimschemasoracleidcsextensionself_change_user, if_match):

    if isinstance(user_status_changer_id, six.string_types) and len(user_status_changer_id.strip()) == 0:
        raise click.UsageError('Parameter --user-status-changer-id cannot be whitespace or empty string')
    if not force:
        if schemas or meta or idcs_created_by or idcs_last_modified_by or idcs_prevented_operations or tags or urnietfparamsscimschemasoracleidcsextensionself_change_user:
            if not click.confirm("WARNING: Updates to schemas and meta and idcs-created-by and idcs-last-modified-by and idcs-prevented-operations and tags and urnietfparamsscimschemasoracleidcsextensionself-change-user will replace any existing values. Are you sure you want to continue?"):
                ctx.abort()

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if attributes is not None:
        kwargs['attributes'] = attributes
    if attribute_sets is not None and len(attribute_sets) > 0:
        kwargs['attribute_sets'] = attribute_sets
    if if_match is not None:
        kwargs['if_match'] = if_match

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if id is not None:
        _details['id'] = id

    if ocid is not None:
        _details['ocid'] = ocid

    if meta is not None:
        _details['meta'] = cli_util.parse_json_parameter("meta", meta)

    if idcs_created_by is not None:
        _details['idcsCreatedBy'] = cli_util.parse_json_parameter("idcs_created_by", idcs_created_by)

    if idcs_last_modified_by is not None:
        _details['idcsLastModifiedBy'] = cli_util.parse_json_parameter("idcs_last_modified_by", idcs_last_modified_by)

    if idcs_prevented_operations is not None:
        _details['idcsPreventedOperations'] = cli_util.parse_json_parameter("idcs_prevented_operations", idcs_prevented_operations)

    if tags is not None:
        _details['tags'] = cli_util.parse_json_parameter("tags", tags)

    if delete_in_progress is not None:
        _details['deleteInProgress'] = delete_in_progress

    if idcs_last_upgraded_in_release is not None:
        _details['idcsLastUpgradedInRelease'] = idcs_last_upgraded_in_release

    if domain_ocid is not None:
        _details['domainOcid'] = domain_ocid

    if compartment_ocid is not None:
        _details['compartmentOcid'] = compartment_ocid

    if tenancy_ocid is not None:
        _details['tenancyOcid'] = tenancy_ocid

    if external_id is not None:
        _details['externalId'] = external_id

    if active is not None:
        _details['active'] = active

    if urnietfparamsscimschemasoracleidcsextensionself_change_user is not None:
        _details['urn:ietf:params:scim:schemas:oracle:idcs:extension:selfChange:User'] = cli_util.parse_json_parameter("urnietfparamsscimschemasoracleidcsextensionself_change_user", urnietfparamsscimschemasoracleidcsextensionself_change_user)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.put_user_status_changer(
        user_status_changer_id=user_status_changer_id,
        user_status_changer=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@api_keys_group.command(name=cli_util.override('identity_domains.search_api_keys.command_name', 'search'), help=u"""Search ApiKeys Using POST

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](searchApiKeys)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. Query requests MUST be identified using the following URI: \"urn:ietf:params:scim:api:messages:2.0:SearchRequest\" REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A multi-valued list of strings indicating the names of resource attributes to return in the response overriding the set of attributes that would be returned by default. Attribute names MUST be in standard attribute notation ([Section 3.10]) form. See ([additional retrieval query parameters]). OPTIONAL.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If \"attributes\" query parameter is also available, union of the two is fetched. Valid values : all, always, never, request, default. Values are case-insensitive. OPTIONAL.""")
@cli_util.option('--filter', help=u"""The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See [Section 3.4.2.2]. OPTIONAL.""")
@cli_util.option('--sort-by', help=u"""A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation ([Section 3.10]) form. See [Sorting section]. OPTIONAL.""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are \"ascending\" and \"descending\". See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""An integer that indicates the 1-based index of the first query result. See [Pagination Section]. OPTIONAL.""")
@cli_util.option('--count', type=click.INT, help=u"""An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. ([Section 3.4.2.4]). OPTIONAL.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}}, output_type={'module': 'identity_domains', 'class': 'ApiKeys'})
@cli_util.wrap_exceptions
def search_api_keys(ctx, from_json, schemas, authorization, resource_type_schema_version, attributes, attribute_sets, filter, sort_by, sort_order, start_index, count, page, limit):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if attributes is not None:
        _details['attributes'] = cli_util.parse_json_parameter("attributes", attributes)

    if attribute_sets is not None:
        _details['attributeSets'] = cli_util.parse_json_parameter("attribute_sets", attribute_sets)

    if filter is not None:
        _details['filter'] = filter

    if sort_by is not None:
        _details['sortBy'] = sort_by

    if sort_order is not None:
        _details['sortOrder'] = sort_order

    if start_index is not None:
        _details['startIndex'] = start_index

    if count is not None:
        _details['count'] = count

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.search_api_keys(
        api_key_search_request=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@auth_tokens_group.command(name=cli_util.override('identity_domains.search_auth_tokens.command_name', 'search'), help=u"""Search AuthTokens Using POST

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](searchAuthTokens)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. Query requests MUST be identified using the following URI: \"urn:ietf:params:scim:api:messages:2.0:SearchRequest\" REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A multi-valued list of strings indicating the names of resource attributes to return in the response overriding the set of attributes that would be returned by default. Attribute names MUST be in standard attribute notation ([Section 3.10]) form. See ([additional retrieval query parameters]). OPTIONAL.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If \"attributes\" query parameter is also available, union of the two is fetched. Valid values : all, always, never, request, default. Values are case-insensitive. OPTIONAL.""")
@cli_util.option('--filter', help=u"""The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See [Section 3.4.2.2]. OPTIONAL.""")
@cli_util.option('--sort-by', help=u"""A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation ([Section 3.10]) form. See [Sorting section]. OPTIONAL.""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are \"ascending\" and \"descending\". See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""An integer that indicates the 1-based index of the first query result. See [Pagination Section]. OPTIONAL.""")
@cli_util.option('--count', type=click.INT, help=u"""An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. ([Section 3.4.2.4]). OPTIONAL.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}}, output_type={'module': 'identity_domains', 'class': 'AuthTokens'})
@cli_util.wrap_exceptions
def search_auth_tokens(ctx, from_json, schemas, authorization, resource_type_schema_version, attributes, attribute_sets, filter, sort_by, sort_order, start_index, count, page, limit):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if attributes is not None:
        _details['attributes'] = cli_util.parse_json_parameter("attributes", attributes)

    if attribute_sets is not None:
        _details['attributeSets'] = cli_util.parse_json_parameter("attribute_sets", attribute_sets)

    if filter is not None:
        _details['filter'] = filter

    if sort_by is not None:
        _details['sortBy'] = sort_by

    if sort_order is not None:
        _details['sortOrder'] = sort_order

    if start_index is not None:
        _details['startIndex'] = start_index

    if count is not None:
        _details['count'] = count

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.search_auth_tokens(
        auth_token_search_request=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@authentication_factor_settings_group.command(name=cli_util.override('identity_domains.search_authentication_factor_settings.command_name', 'search'), help=u"""Search Authentication Factor Settings Using POST

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](searchAuthenticationFactorSettings)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. Query requests MUST be identified using the following URI: \"urn:ietf:params:scim:api:messages:2.0:SearchRequest\" REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A multi-valued list of strings indicating the names of resource attributes to return in the response overriding the set of attributes that would be returned by default. Attribute names MUST be in standard attribute notation ([Section 3.10]) form. See ([additional retrieval query parameters]). OPTIONAL.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If \"attributes\" query parameter is also available, union of the two is fetched. Valid values : all, always, never, request, default. Values are case-insensitive. OPTIONAL.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}}, output_type={'module': 'identity_domains', 'class': 'AuthenticationFactorSettings'})
@cli_util.wrap_exceptions
def search_authentication_factor_settings(ctx, from_json, schemas, authorization, resource_type_schema_version, attributes, attribute_sets, page, limit):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if attributes is not None:
        _details['attributes'] = cli_util.parse_json_parameter("attributes", attributes)

    if attribute_sets is not None:
        _details['attributeSets'] = cli_util.parse_json_parameter("attribute_sets", attribute_sets)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.search_authentication_factor_settings(
        authentication_factor_settings_search_request=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@customer_secret_keys_group.command(name=cli_util.override('identity_domains.search_customer_secret_keys.command_name', 'search'), help=u"""Search CustomerSecretKeys Using POST

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](searchCustomerSecretKeys)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. Query requests MUST be identified using the following URI: \"urn:ietf:params:scim:api:messages:2.0:SearchRequest\" REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A multi-valued list of strings indicating the names of resource attributes to return in the response overriding the set of attributes that would be returned by default. Attribute names MUST be in standard attribute notation ([Section 3.10]) form. See ([additional retrieval query parameters]). OPTIONAL.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If \"attributes\" query parameter is also available, union of the two is fetched. Valid values : all, always, never, request, default. Values are case-insensitive. OPTIONAL.""")
@cli_util.option('--filter', help=u"""The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See [Section 3.4.2.2]. OPTIONAL.""")
@cli_util.option('--sort-by', help=u"""A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation ([Section 3.10]) form. See [Sorting section]. OPTIONAL.""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are \"ascending\" and \"descending\". See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""An integer that indicates the 1-based index of the first query result. See [Pagination Section]. OPTIONAL.""")
@cli_util.option('--count', type=click.INT, help=u"""An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. ([Section 3.4.2.4]). OPTIONAL.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}}, output_type={'module': 'identity_domains', 'class': 'CustomerSecretKeys'})
@cli_util.wrap_exceptions
def search_customer_secret_keys(ctx, from_json, schemas, authorization, resource_type_schema_version, attributes, attribute_sets, filter, sort_by, sort_order, start_index, count, page, limit):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if attributes is not None:
        _details['attributes'] = cli_util.parse_json_parameter("attributes", attributes)

    if attribute_sets is not None:
        _details['attributeSets'] = cli_util.parse_json_parameter("attribute_sets", attribute_sets)

    if filter is not None:
        _details['filter'] = filter

    if sort_by is not None:
        _details['sortBy'] = sort_by

    if sort_order is not None:
        _details['sortOrder'] = sort_order

    if start_index is not None:
        _details['startIndex'] = start_index

    if count is not None:
        _details['count'] = count

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.search_customer_secret_keys(
        customer_secret_key_search_request=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@dynamic_resource_groups_group.command(name=cli_util.override('identity_domains.search_dynamic_resource_groups.command_name', 'search'), help=u"""Search DynamicResourceGroups Using POST

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](searchDynamicResourceGroups)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. Query requests MUST be identified using the following URI: \"urn:ietf:params:scim:api:messages:2.0:SearchRequest\" REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A multi-valued list of strings indicating the names of resource attributes to return in the response overriding the set of attributes that would be returned by default. Attribute names MUST be in standard attribute notation ([Section 3.10]) form. See ([additional retrieval query parameters]). OPTIONAL.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If \"attributes\" query parameter is also available, union of the two is fetched. Valid values : all, always, never, request, default. Values are case-insensitive. OPTIONAL.""")
@cli_util.option('--filter', help=u"""The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See [Section 3.4.2.2]. OPTIONAL.""")
@cli_util.option('--sort-by', help=u"""A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation ([Section 3.10]) form. See [Sorting section]. OPTIONAL.""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are \"ascending\" and \"descending\". See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""An integer that indicates the 1-based index of the first query result. See [Pagination Section]. OPTIONAL.""")
@cli_util.option('--count', type=click.INT, help=u"""An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. ([Section 3.4.2.4]). OPTIONAL.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}}, output_type={'module': 'identity_domains', 'class': 'DynamicResourceGroups'})
@cli_util.wrap_exceptions
def search_dynamic_resource_groups(ctx, from_json, schemas, authorization, resource_type_schema_version, attributes, attribute_sets, filter, sort_by, sort_order, start_index, count, page, limit):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if attributes is not None:
        _details['attributes'] = cli_util.parse_json_parameter("attributes", attributes)

    if attribute_sets is not None:
        _details['attributeSets'] = cli_util.parse_json_parameter("attribute_sets", attribute_sets)

    if filter is not None:
        _details['filter'] = filter

    if sort_by is not None:
        _details['sortBy'] = sort_by

    if sort_order is not None:
        _details['sortOrder'] = sort_order

    if start_index is not None:
        _details['startIndex'] = start_index

    if count is not None:
        _details['count'] = count

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.search_dynamic_resource_groups(
        dynamic_resource_group_search_request=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@groups_group.command(name=cli_util.override('identity_domains.search_groups.command_name', 'search'), help=u"""Search Groups Using POST

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](searchGroups)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. Query requests MUST be identified using the following URI: \"urn:ietf:params:scim:api:messages:2.0:SearchRequest\" REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A multi-valued list of strings indicating the names of resource attributes to return in the response overriding the set of attributes that would be returned by default. Attribute names MUST be in standard attribute notation ([Section 3.10]) form. See ([additional retrieval query parameters]). OPTIONAL.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If \"attributes\" query parameter is also available, union of the two is fetched. Valid values : all, always, never, request, default. Values are case-insensitive. OPTIONAL.""")
@cli_util.option('--filter', help=u"""The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See [Section 3.4.2.2]. OPTIONAL.""")
@cli_util.option('--sort-by', help=u"""A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation ([Section 3.10]) form. See [Sorting section]. OPTIONAL.""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are \"ascending\" and \"descending\". See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""An integer that indicates the 1-based index of the first query result. See [Pagination Section]. OPTIONAL.""")
@cli_util.option('--count', type=click.INT, help=u"""An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. ([Section 3.4.2.4]). OPTIONAL.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}}, output_type={'module': 'identity_domains', 'class': 'Groups'})
@cli_util.wrap_exceptions
def search_groups(ctx, from_json, schemas, authorization, resource_type_schema_version, attributes, attribute_sets, filter, sort_by, sort_order, start_index, count, page, limit):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if attributes is not None:
        _details['attributes'] = cli_util.parse_json_parameter("attributes", attributes)

    if attribute_sets is not None:
        _details['attributeSets'] = cli_util.parse_json_parameter("attribute_sets", attribute_sets)

    if filter is not None:
        _details['filter'] = filter

    if sort_by is not None:
        _details['sortBy'] = sort_by

    if sort_order is not None:
        _details['sortOrder'] = sort_order

    if start_index is not None:
        _details['startIndex'] = start_index

    if count is not None:
        _details['count'] = count

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.search_groups(
        group_search_request=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@identity_providers_group.command(name=cli_util.override('identity_domains.search_identity_providers.command_name', 'search'), help=u"""Search Identity Providers Using POST

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](searchIdentityProviders)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. Query requests MUST be identified using the following URI: \"urn:ietf:params:scim:api:messages:2.0:SearchRequest\" REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A multi-valued list of strings indicating the names of resource attributes to return in the response overriding the set of attributes that would be returned by default. Attribute names MUST be in standard attribute notation ([Section 3.10]) form. See ([additional retrieval query parameters]). OPTIONAL.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If \"attributes\" query parameter is also available, union of the two is fetched. Valid values : all, always, never, request, default. Values are case-insensitive. OPTIONAL.""")
@cli_util.option('--filter', help=u"""The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See [Section 3.4.2.2]. OPTIONAL.""")
@cli_util.option('--sort-by', help=u"""A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation ([Section 3.10]) form. See [Sorting section]. OPTIONAL.""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are \"ascending\" and \"descending\". See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""An integer that indicates the 1-based index of the first query result. See [Pagination Section]. OPTIONAL.""")
@cli_util.option('--count', type=click.INT, help=u"""An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. ([Section 3.4.2.4]). OPTIONAL.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}}, output_type={'module': 'identity_domains', 'class': 'IdentityProviders'})
@cli_util.wrap_exceptions
def search_identity_providers(ctx, from_json, schemas, authorization, resource_type_schema_version, attributes, attribute_sets, filter, sort_by, sort_order, start_index, count, page, limit):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if attributes is not None:
        _details['attributes'] = cli_util.parse_json_parameter("attributes", attributes)

    if attribute_sets is not None:
        _details['attributeSets'] = cli_util.parse_json_parameter("attribute_sets", attribute_sets)

    if filter is not None:
        _details['filter'] = filter

    if sort_by is not None:
        _details['sortBy'] = sort_by

    if sort_order is not None:
        _details['sortOrder'] = sort_order

    if start_index is not None:
        _details['startIndex'] = start_index

    if count is not None:
        _details['count'] = count

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.search_identity_providers(
        identity_provider_search_request=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@kmsi_settings_group.command(name=cli_util.override('identity_domains.search_kmsi_settings.command_name', 'search'), help=u"""Search KmsiSettings Using POST

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](searchKmsiSettings)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. Query requests MUST be identified using the following URI: \"urn:ietf:params:scim:api:messages:2.0:SearchRequest\" REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A multi-valued list of strings indicating the names of resource attributes to return in the response overriding the set of attributes that would be returned by default. Attribute names MUST be in standard attribute notation ([Section 3.10]) form. See ([additional retrieval query parameters]). OPTIONAL.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If \"attributes\" query parameter is also available, union of the two is fetched. Valid values : all, always, never, request, default. Values are case-insensitive. OPTIONAL.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}}, output_type={'module': 'identity_domains', 'class': 'KmsiSettings'})
@cli_util.wrap_exceptions
def search_kmsi_settings(ctx, from_json, schemas, authorization, resource_type_schema_version, attributes, attribute_sets, page, limit):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if attributes is not None:
        _details['attributes'] = cli_util.parse_json_parameter("attributes", attributes)

    if attribute_sets is not None:
        _details['attributeSets'] = cli_util.parse_json_parameter("attribute_sets", attribute_sets)

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.search_kmsi_settings(
        kmsi_settings_search_request=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@my_groups_group.command(name=cli_util.override('identity_domains.search_my_groups.command_name', 'search'), help=u"""Search My Groups Using POST

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](searchMyGroups)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. Query requests MUST be identified using the following URI: \"urn:ietf:params:scim:api:messages:2.0:SearchRequest\" REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A multi-valued list of strings indicating the names of resource attributes to return in the response overriding the set of attributes that would be returned by default. Attribute names MUST be in standard attribute notation ([Section 3.10]) form. See ([additional retrieval query parameters]). OPTIONAL.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If \"attributes\" query parameter is also available, union of the two is fetched. Valid values : all, always, never, request, default. Values are case-insensitive. OPTIONAL.""")
@cli_util.option('--filter', help=u"""The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See [Section 3.4.2.2]. OPTIONAL.""")
@cli_util.option('--sort-by', help=u"""A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation ([Section 3.10]) form. See [Sorting section]. OPTIONAL.""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are \"ascending\" and \"descending\". See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""An integer that indicates the 1-based index of the first query result. See [Pagination Section]. OPTIONAL.""")
@cli_util.option('--count', type=click.INT, help=u"""An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. ([Section 3.4.2.4]). OPTIONAL.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}}, output_type={'module': 'identity_domains', 'class': 'MyGroups'})
@cli_util.wrap_exceptions
def search_my_groups(ctx, from_json, schemas, authorization, resource_type_schema_version, attributes, attribute_sets, filter, sort_by, sort_order, start_index, count, page, limit):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if attributes is not None:
        _details['attributes'] = cli_util.parse_json_parameter("attributes", attributes)

    if attribute_sets is not None:
        _details['attributeSets'] = cli_util.parse_json_parameter("attribute_sets", attribute_sets)

    if filter is not None:
        _details['filter'] = filter

    if sort_by is not None:
        _details['sortBy'] = sort_by

    if sort_order is not None:
        _details['sortOrder'] = sort_order

    if start_index is not None:
        _details['startIndex'] = start_index

    if count is not None:
        _details['count'] = count

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.search_my_groups(
        my_group_search_request=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@o_auth2_client_credentials_group.command(name=cli_util.override('identity_domains.search_o_auth2_client_credentials.command_name', 'search'), help=u"""Search Oauth2Clients Using POST

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](searchOAuth2ClientCredentials)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. Query requests MUST be identified using the following URI: \"urn:ietf:params:scim:api:messages:2.0:SearchRequest\" REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A multi-valued list of strings indicating the names of resource attributes to return in the response overriding the set of attributes that would be returned by default. Attribute names MUST be in standard attribute notation ([Section 3.10]) form. See ([additional retrieval query parameters]). OPTIONAL.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If \"attributes\" query parameter is also available, union of the two is fetched. Valid values : all, always, never, request, default. Values are case-insensitive. OPTIONAL.""")
@cli_util.option('--filter', help=u"""The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See [Section 3.4.2.2]. OPTIONAL.""")
@cli_util.option('--sort-by', help=u"""A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation ([Section 3.10]) form. See [Sorting section]. OPTIONAL.""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are \"ascending\" and \"descending\". See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""An integer that indicates the 1-based index of the first query result. See [Pagination Section]. OPTIONAL.""")
@cli_util.option('--count', type=click.INT, help=u"""An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. ([Section 3.4.2.4]). OPTIONAL.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}}, output_type={'module': 'identity_domains', 'class': 'OAuth2ClientCredentials'})
@cli_util.wrap_exceptions
def search_o_auth2_client_credentials(ctx, from_json, schemas, authorization, resource_type_schema_version, attributes, attribute_sets, filter, sort_by, sort_order, start_index, count, page, limit):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if attributes is not None:
        _details['attributes'] = cli_util.parse_json_parameter("attributes", attributes)

    if attribute_sets is not None:
        _details['attributeSets'] = cli_util.parse_json_parameter("attribute_sets", attribute_sets)

    if filter is not None:
        _details['filter'] = filter

    if sort_by is not None:
        _details['sortBy'] = sort_by

    if sort_order is not None:
        _details['sortOrder'] = sort_order

    if start_index is not None:
        _details['startIndex'] = start_index

    if count is not None:
        _details['count'] = count

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.search_o_auth2_client_credentials(
        o_auth2_client_credential_search_request=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@password_policies_group.command(name=cli_util.override('identity_domains.search_password_policies.command_name', 'search'), help=u"""Search Password Policies Using POST

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](searchPasswordPolicies)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. Query requests MUST be identified using the following URI: \"urn:ietf:params:scim:api:messages:2.0:SearchRequest\" REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A multi-valued list of strings indicating the names of resource attributes to return in the response overriding the set of attributes that would be returned by default. Attribute names MUST be in standard attribute notation ([Section 3.10]) form. See ([additional retrieval query parameters]). OPTIONAL.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If \"attributes\" query parameter is also available, union of the two is fetched. Valid values : all, always, never, request, default. Values are case-insensitive. OPTIONAL.""")
@cli_util.option('--filter', help=u"""The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See [Section 3.4.2.2]. OPTIONAL.""")
@cli_util.option('--sort-by', help=u"""A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation ([Section 3.10]) form. See [Sorting section]. OPTIONAL.""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are \"ascending\" and \"descending\". See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""An integer that indicates the 1-based index of the first query result. See [Pagination Section]. OPTIONAL.""")
@cli_util.option('--count', type=click.INT, help=u"""An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. ([Section 3.4.2.4]). OPTIONAL.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}}, output_type={'module': 'identity_domains', 'class': 'PasswordPolicies'})
@cli_util.wrap_exceptions
def search_password_policies(ctx, from_json, schemas, authorization, resource_type_schema_version, attributes, attribute_sets, filter, sort_by, sort_order, start_index, count, page, limit):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if attributes is not None:
        _details['attributes'] = cli_util.parse_json_parameter("attributes", attributes)

    if attribute_sets is not None:
        _details['attributeSets'] = cli_util.parse_json_parameter("attribute_sets", attribute_sets)

    if filter is not None:
        _details['filter'] = filter

    if sort_by is not None:
        _details['sortBy'] = sort_by

    if sort_order is not None:
        _details['sortOrder'] = sort_order

    if start_index is not None:
        _details['startIndex'] = start_index

    if count is not None:
        _details['count'] = count

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.search_password_policies(
        password_policy_search_request=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@smtp_credentials_group.command(name=cli_util.override('identity_domains.search_smtp_credentials.command_name', 'search'), help=u"""Search smtp credentials Using POST

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](searchSmtpCredentials)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. Query requests MUST be identified using the following URI: \"urn:ietf:params:scim:api:messages:2.0:SearchRequest\" REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A multi-valued list of strings indicating the names of resource attributes to return in the response overriding the set of attributes that would be returned by default. Attribute names MUST be in standard attribute notation ([Section 3.10]) form. See ([additional retrieval query parameters]). OPTIONAL.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If \"attributes\" query parameter is also available, union of the two is fetched. Valid values : all, always, never, request, default. Values are case-insensitive. OPTIONAL.""")
@cli_util.option('--filter', help=u"""The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See [Section 3.4.2.2]. OPTIONAL.""")
@cli_util.option('--sort-by', help=u"""A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation ([Section 3.10]) form. See [Sorting section]. OPTIONAL.""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are \"ascending\" and \"descending\". See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""An integer that indicates the 1-based index of the first query result. See [Pagination Section]. OPTIONAL.""")
@cli_util.option('--count', type=click.INT, help=u"""An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. ([Section 3.4.2.4]). OPTIONAL.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}}, output_type={'module': 'identity_domains', 'class': 'SmtpCredentials'})
@cli_util.wrap_exceptions
def search_smtp_credentials(ctx, from_json, schemas, authorization, resource_type_schema_version, attributes, attribute_sets, filter, sort_by, sort_order, start_index, count, page, limit):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if attributes is not None:
        _details['attributes'] = cli_util.parse_json_parameter("attributes", attributes)

    if attribute_sets is not None:
        _details['attributeSets'] = cli_util.parse_json_parameter("attribute_sets", attribute_sets)

    if filter is not None:
        _details['filter'] = filter

    if sort_by is not None:
        _details['sortBy'] = sort_by

    if sort_order is not None:
        _details['sortOrder'] = sort_order

    if start_index is not None:
        _details['startIndex'] = start_index

    if count is not None:
        _details['count'] = count

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.search_smtp_credentials(
        smtp_credential_search_request=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@user_db_credentials_group.command(name=cli_util.override('identity_domains.search_user_db_credentials.command_name', 'search'), help=u"""Search a User's DBCredentials using POST

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](searchUserDbCredentials)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. Query requests MUST be identified using the following URI: \"urn:ietf:params:scim:api:messages:2.0:SearchRequest\" REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A multi-valued list of strings indicating the names of resource attributes to return in the response overriding the set of attributes that would be returned by default. Attribute names MUST be in standard attribute notation ([Section 3.10]) form. See ([additional retrieval query parameters]). OPTIONAL.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If \"attributes\" query parameter is also available, union of the two is fetched. Valid values : all, always, never, request, default. Values are case-insensitive. OPTIONAL.""")
@cli_util.option('--filter', help=u"""The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See [Section 3.4.2.2]. OPTIONAL.""")
@cli_util.option('--sort-by', help=u"""A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation ([Section 3.10]) form. See [Sorting section]. OPTIONAL.""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are \"ascending\" and \"descending\". See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""An integer that indicates the 1-based index of the first query result. See [Pagination Section]. OPTIONAL.""")
@cli_util.option('--count', type=click.INT, help=u"""An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. ([Section 3.4.2.4]). OPTIONAL.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}}, output_type={'module': 'identity_domains', 'class': 'UserDbCredentials'})
@cli_util.wrap_exceptions
def search_user_db_credentials(ctx, from_json, schemas, authorization, resource_type_schema_version, attributes, attribute_sets, filter, sort_by, sort_order, start_index, count, page, limit):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if attributes is not None:
        _details['attributes'] = cli_util.parse_json_parameter("attributes", attributes)

    if attribute_sets is not None:
        _details['attributeSets'] = cli_util.parse_json_parameter("attribute_sets", attribute_sets)

    if filter is not None:
        _details['filter'] = filter

    if sort_by is not None:
        _details['sortBy'] = sort_by

    if sort_order is not None:
        _details['sortOrder'] = sort_order

    if start_index is not None:
        _details['startIndex'] = start_index

    if count is not None:
        _details['count'] = count

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.search_user_db_credentials(
        user_db_credentials_search_request=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)


@users_group.command(name=cli_util.override('identity_domains.search_users.command_name', 'search'), help=u"""Search Users Using POST

The top level --endpoint parameter must be supplied for this operation. \n[Command Reference](searchUsers)""")
@cli_util.option('--schemas', required=True, type=custom_types.CLI_COMPLEX_TYPE, help=u"""The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. Query requests MUST be identified using the following URI: \"urn:ietf:params:scim:api:messages:2.0:SearchRequest\" REQUIRED.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--authorization', help=u"""The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.""")
@cli_util.option('--resource-type-schema-version', help=u"""An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.""")
@cli_util.option('--attributes', type=custom_types.CLI_COMPLEX_TYPE, help=u"""A multi-valued list of strings indicating the names of resource attributes to return in the response overriding the set of attributes that would be returned by default. Attribute names MUST be in standard attribute notation ([Section 3.10]) form. See ([additional retrieval query parameters]). OPTIONAL.""" + custom_types.cli_complex_type.COMPLEX_TYPE_HELP)
@cli_util.option('--attribute-sets', type=custom_types.CliCaseInsensitiveChoice(["all", "always", "never", "request", "default"]), help=u"""A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If \"attributes\" query parameter is also available, union of the two is fetched. Valid values : all, always, never, request, default. Values are case-insensitive. OPTIONAL.""")
@cli_util.option('--filter', help=u"""The filter string that is used to request a subset of resources. The filter string MUST be a valid filter expression. See [Section 3.4.2.2]. OPTIONAL.""")
@cli_util.option('--sort-by', help=u"""A string that indicates the attribute whose value SHALL be used to order the returned responses. The sortBy attribute MUST be in standard attribute notation ([Section 3.10]) form. See [Sorting section]. OPTIONAL.""")
@cli_util.option('--sort-order', type=custom_types.CliCaseInsensitiveChoice(["ASCENDING", "DESCENDING"]), help=u"""A string that indicates the order in which the sortBy parameter is applied. Allowed values are \"ascending\" and \"descending\". See ([Sorting Section]). OPTIONAL.""")
@cli_util.option('--start-index', type=click.INT, help=u"""An integer that indicates the 1-based index of the first query result. See [Pagination Section]. OPTIONAL.""")
@cli_util.option('--count', type=click.INT, help=u"""An integer that indicates the desired maximum number of query results per page. 1000 is the largest value that you can use. See the Pagination section of the System for Cross-Domain Identity Management Protocol specification for more information. ([Section 3.4.2.4]). OPTIONAL.""")
@cli_util.option('--page', help=u"""The value of the `opc-next-page` response header from the previous 'List' call.""")
@cli_util.option('--limit', type=click.INT, help=u"""The maximum number of items to return in a paginated 'List' call.""")
@json_skeleton_utils.get_cli_json_input_option({'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}})
@cli_util.help_option
@click.pass_context
@json_skeleton_utils.json_skeleton_generation_handler(input_params_to_complex_types={'schemas': {'module': 'identity_domains', 'class': 'list[string]'}, 'attributes': {'module': 'identity_domains', 'class': 'list[string]'}}, output_type={'module': 'identity_domains', 'class': 'Users'})
@cli_util.wrap_exceptions
def search_users(ctx, from_json, schemas, authorization, resource_type_schema_version, attributes, attribute_sets, filter, sort_by, sort_order, start_index, count, page, limit):

    kwargs = {}
    if authorization is not None:
        kwargs['authorization'] = authorization
    if resource_type_schema_version is not None:
        kwargs['resource_type_schema_version'] = resource_type_schema_version
    if page is not None:
        kwargs['page'] = page
    if limit is not None:
        kwargs['limit'] = limit

    _details = {}
    _details['schemas'] = cli_util.parse_json_parameter("schemas", schemas)

    if attributes is not None:
        _details['attributes'] = cli_util.parse_json_parameter("attributes", attributes)

    if attribute_sets is not None:
        _details['attributeSets'] = cli_util.parse_json_parameter("attribute_sets", attribute_sets)

    if filter is not None:
        _details['filter'] = filter

    if sort_by is not None:
        _details['sortBy'] = sort_by

    if sort_order is not None:
        _details['sortOrder'] = sort_order

    if start_index is not None:
        _details['startIndex'] = start_index

    if count is not None:
        _details['count'] = count

    client = cli_util.build_client('identity_domains', 'identity_domains', ctx)
    result = client.search_users(
        user_search_request=_details,
        **kwargs
    )
    cli_util.render_response(result, ctx)
