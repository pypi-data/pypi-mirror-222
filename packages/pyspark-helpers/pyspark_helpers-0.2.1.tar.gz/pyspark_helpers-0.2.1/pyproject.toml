[tool.poetry]
name = "pyspark-helpers"
version = "0.2.1"
description = "A collection of tools to help when developing PySpark applications"
authors = ["Jens Peder Meldgaard <jenspederm@gmail.com>"]
readme = "README.md"
packages = [{ include = "pyspark_helpers" }]

[tool.poetry.scripts]
psh-schema-from-json = "pyspark_helpers.schema:main"

[tool.poetry.dependencies]
python = "^3.8"
pyspark = "^3.3.2"
delta-spark = "^2.2.0"
black = "^23.7.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.1"
tox = "^4.4.6"
mypy = "^1.0.1"
commitizen = "^2.42.0"
pre-commit = "^3.1.0"
isort = "^5.12.0"

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.isort]
profile = "black"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.2.1"
version_files = ["pyproject.toml:version"]
use_shortcuts = true

[tool.black]
line-length = 88 # Specify the line length
target-version = ['py37'] # Specify your Python version
include = "pyspark_helpers" # Include the files that should be formatted
exclude = '''  # Specify the files/dirs that should be ignored by the black formatter
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | __pycache__
)/
'''

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
