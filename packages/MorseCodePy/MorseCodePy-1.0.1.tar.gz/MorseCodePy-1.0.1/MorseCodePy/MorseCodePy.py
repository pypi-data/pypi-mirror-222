codes: dict = {  # Dictionary of characters and their translations into Morse code
    # English
    'a': '01', 'b': '1000', 'c': '1010', 'd': '100', 'e': '0', 'f': '0010', 'g': '110', 'h': '0000',
    'i': '00', 'j': '0111', 'k': '101', 'l': '0100', 'm': '11', 'n': '10', 'o': '111', 'p': '0110',
    'q': '1101', 'r': '010', 's': '000', 't': '1', 'u': '001', 'v': '0001', 'w': '011', 'x': '1001',
    'y': '1011', 'z': '1100',
    # Russian
    'а': '01', 'б': '1000', 'в': '011', 'г': '110', 'д': '100', 'е': '0', 'ё': '0', 'ж': '0001',
    'з': '1100', 'и': '00', 'й': '0111', 'к': '101', 'л': '0001', 'м': '11', 'н': '10', 'о': '111',
    'п': '0110', 'р': '010', 'с': '000', 'т': '1', 'у': '001', 'ф': '0010', 'х': '0000', 'ц': '1010',
    'ч': '1110', 'ш': '1111', 'щ': '1101', 'ъ': '11011', 'ы': '1011', 'ь': '1001', 'э': '00100',
    'ю': '0011', 'я': '0101',
    # Numbers
    '0': '11111', '1': '01111', '2': '00111', '3': '00011', '4': '00001', '5': '00000', '6': '10000',
    '7': '11000', '8': '11100', '9': '11110',
    # Other
    ' ': '/', '\n': '\n', '.': '010101', ',': '110011', '!': '101011', '?': '001100', '@': '011010',
    '/': '10010', '\\': '10010', '&': '01000', ';': '101010', ':': '111000', '\'': '011110',
    '\"': '010010', '$': '0001001', '+': '01010', '-': '100001', '=': '10001', '_': '001101',
    # Other letters
    'ґ': '110', 'і': '00', 'є': '00100', 'ї': '01110', 'à': '01101', 'ç': '10100', 'è': '01001', 'é': '00100',
    'â': '01101', 'ê': '10010', 'ë': '00100', 'ï': '10011', 'ü': '0011', 'á': '01101', 'ó': '1110',
    'ñ': '11011'
}

def encode(string: str, dit: chr = '·', dash: chr = '-') -> str:
    """
    This function translates your string into Morse code.
    You can customize dits and dashes
    """

    t_string = str()  # New string that will hold translated text
    for char in string:
        try:
            t_string += codes[char.lower()].replace('0', dit).replace('1', dash) + ' '
        except:
            t_string += '* '  # If character isn't is dictionary "codes", it will return...

    return t_string.strip()

print(encode("Bye!", dit='0', dash='1'))