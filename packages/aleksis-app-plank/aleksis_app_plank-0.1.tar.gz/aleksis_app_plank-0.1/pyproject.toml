[tool.poetry]
name = "AlekSIS-App-Plank"
version = "0.1"
packages = [
    { include = "aleksis" }
]
readme = "README.rst"
include = [
    { path = "aleksis/**/*.mo", format = ["sdist", "wheel"] },
    { path = "*.rst", format = "sdist" },
    { path = "docs/*", format = "sdist" },
    { path = "docs/**/*", format = "sdist" },
    { path = "conftest.py", format = "sdist" },
    { path = "tox.ini", format = "sdist" }
]

description = "AlekSIS (School Information System) — App Plank"
authors = [
    "Jonathan Weth <dev@jonathanweth.de>",
    "Julian Leucker <leuckeju@katharineum.de>"
]
maintainers = ["Jonathan Weth <dev@jonathanweth.de>", "Dominik George <dominik.george@teckids.org>"]
license = "EUPL-1.2-or-later"
repository = "https://edugit.org/AlekSIS/onboarding/AlekSIS-App-Plank"
homepage = "https://aleksis.org"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[[tool.poetry.source]]
name = "gitlab"
url = "https://edugit.org/api/v4/projects/461/packages/pypi/simple"
priority = "supplemental"
[tool.poetry.dependencies]
python = "^3.9"
aleksis-core = "^3.0"

[tool.poetry.plugins."aleksis.app"]
chronos = "aleksis.apps.plank.apps:PlankConfig"


[tool.poetry.group.dev.dependencies]
django-stubs = "^4.2"

safety = "^2.3.5"

flake8 = "^6.0.0"
flake8-django = "^1.0.0"
flake8-fixme = "^1.1.1"
flake8-mypy = "^17.8.0"
flake8-bandit = "^4.1.1"
flake8-builtins = "^2.0.0"
flake8-docstrings = "^1.5.0"
flake8-rst-docstrings = "^0.3.0"

black = ">=21.0"
flake8-black = "^0.3.0"

isort = "^5.0.0"
flake8-isort = "^6.0.0"

curlylint = "^0.13.0"

[tool.poetry.group.test.dependencies]
pytest = "^7.2"
pytest-django = "^4.1"
pytest-django-testing-postgresql = "^0.2"
pytest-cov = "^4.0.0"
pytest-sugar = "^0.9.2"
selenium = "<4.10.0"
freezegun = "^1.1.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^7.0"
sphinxcontrib-django = "^2.3.0"
sphinxcontrib-svg2pdfconverter = "^1.1.1"
sphinx-autodoc-typehints = "^1.7"
sphinx_material = "^0.0.35"

[tool.black]
line-length = 100
exclude = "/migrations/"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
