{"ast":null,"code":"var _jsxFileName = \"/home/imperativa/streamlit-pills/streamlit_calendar/frontend/src/Calendar.tsx\";\nimport React from \"react\";\nimport { StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass Calendar extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.render = () => {\n      // Arguments that are passed to the plugin in Python are accessible\n      // via `this.props.args`. Here, we access the \"name\" arg.\n      const events = this.props.args[\"events\"];\n\n      // Streamlit sends us a theme object via props that we can use to ensure\n      // that our component has visuals that match the active theme in a\n      // streamlit app.\n      const {\n        theme\n      } = this.props;\n      const style = {};\n\n      // Show a button and some text.\n      // When the button is clicked, we'll increment our \"numClicks\" state\n      // variable, and send its new value back to Streamlit, where it'll\n      // be available to the Python program.\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"hallo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }, this);\n    };\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default _c = withStreamlitConnection(Calendar);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","StreamlitComponentBase","withStreamlitConnection","jsxDEV","_jsxDEV","Calendar","constructor","args","render","events","props","theme","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/imperativa/streamlit-pills/streamlit_calendar/frontend/src/Calendar.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\"\nimport {\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\n\ninterface State {\n  numClicks: number\n  isFocused: boolean\n}\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass Calendar extends StreamlitComponentBase<State> {\n  public render = (): ReactNode => {\n    // Arguments that are passed to the plugin in Python are accessible\n    // via `this.props.args`. Here, we access the \"name\" arg.\n    const events = this.props.args[\"events\"]\n\n    // Streamlit sends us a theme object via props that we can use to ensure\n    // that our component has visuals that match the active theme in a\n    // streamlit app.\n    const { theme } = this.props\n    const style: React.CSSProperties = {}\n\n    // Show a button and some text.\n    // When the button is clicked, we'll increment our \"numClicks\" state\n    // variable, and send its new value back to Streamlit, where it'll\n    // be available to the Python program.\n    return <h1>hallo</h1>\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(Calendar)\n"],"mappings":";AAAA,OAAOA,KAAK,MAAqB,OAAO;AACxC,SACEC,sBAAsB,EACtBC,uBAAuB,QAClB,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOhC;AACA;AACA;AACA;AACA,MAAMC,QAAQ,SAASJ,sBAAsB,CAAQ;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC5CC,MAAM,GAAG,MAAiB;MAC/B;MACA;MACA,MAAMC,MAAM,GAAG,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC,QAAQ,CAAC;;MAExC;MACA;MACA;MACA,MAAM;QAAEI;MAAM,CAAC,GAAG,IAAI,CAACD,KAAK;MAC5B,MAAME,KAA0B,GAAG,CAAC,CAAC;;MAErC;MACA;MACA;MACA;MACA,oBAAOR,OAAA;QAAAS,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IACvB,CAAC;EAAA;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAAC,EAAA,GAAehB,uBAAuB,CAACG,QAAQ,CAAC;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}