{"ast":null,"code":"var _jsxFileName = \"/home/imperativa/streamlit-pills/streamlit_calendar/frontend/src/Calendar.tsx\";\nimport adaptivePlugin from \"@fullcalendar/adaptive\"; // premium\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport listPlugin from \"@fullcalendar/list\";\nimport multiMonthPlugin from \"@fullcalendar/multimonth\";\nimport resourceDayGridPlugin from \"@fullcalendar/resource-daygrid\"; // premium\nimport resourceTimeGridPlugin from \"@fullcalendar/resource-timegrid\"; // premium\nimport resourceTimelinePlugin from \"@fullcalendar/resource-timeline\"; // premium\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport timelinePlugin from \"@fullcalendar/timeline\"; // premium\n\nimport FullCalendar from \"@fullcalendar/react\";\nimport { StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass Calendar extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.render = () => {\n      // Arguments that are passed to the plugin in Python are accessible\n      // via `this.props.args`. Here, we access the \"name\" arg.\n      const events = this.props.args[\"events\"];\n      const options = this.props.args[\"options\"];\n      console.log({\n        ...options\n      });\n\n      // Show a button and some text.\n      // When the button is clicked, we'll increment our \"numClicks\" state\n      // variable, and send its new value back to Streamlit, where it'll\n      // be available to the Python program.\n      return /*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [dayGridPlugin, timeGridPlugin, listPlugin, multiMonthPlugin, timelinePlugin, adaptivePlugin, resourceDayGridPlugin, resourceTimeGridPlugin, resourceTimelinePlugin],\n        events: events,\n        ...options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this);\n    };\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default _c = withStreamlitConnection(Calendar);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["adaptivePlugin","dayGridPlugin","listPlugin","multiMonthPlugin","resourceDayGridPlugin","resourceTimeGridPlugin","resourceTimelinePlugin","timeGridPlugin","timelinePlugin","FullCalendar","StreamlitComponentBase","withStreamlitConnection","jsxDEV","_jsxDEV","Calendar","constructor","args","render","events","props","options","console","log","plugins","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/imperativa/streamlit-pills/streamlit_calendar/frontend/src/Calendar.tsx"],"sourcesContent":["import adaptivePlugin from \"@fullcalendar/adaptive\" // premium\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\nimport listPlugin from \"@fullcalendar/list\"\nimport multiMonthPlugin from \"@fullcalendar/multimonth\"\nimport resourceDayGridPlugin from \"@fullcalendar/resource-daygrid\" // premium\nimport resourceTimeGridPlugin from \"@fullcalendar/resource-timegrid\" // premium\nimport resourceTimelinePlugin from \"@fullcalendar/resource-timeline\" // premium\nimport timeGridPlugin from \"@fullcalendar/timegrid\"\nimport timelinePlugin from \"@fullcalendar/timeline\" // premium\n\nimport FullCalendar from \"@fullcalendar/react\"\nimport { ReactNode } from \"react\"\nimport {\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\n\ninterface State {\n  numClicks: number\n  isFocused: boolean\n}\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass Calendar extends StreamlitComponentBase<State> {\n  public render = (): ReactNode => {\n    // Arguments that are passed to the plugin in Python are accessible\n    // via `this.props.args`. Here, we access the \"name\" arg.\n    const events = this.props.args[\"events\"]\n    const options = this.props.args[\"options\"]\n\n    console.log({ ...options })\n\n    // Show a button and some text.\n    // When the button is clicked, we'll increment our \"numClicks\" state\n    // variable, and send its new value back to Streamlit, where it'll\n    // be available to the Python program.\n    return (\n      <FullCalendar\n        plugins={[\n          dayGridPlugin,\n          timeGridPlugin,\n          listPlugin,\n          multiMonthPlugin,\n          timelinePlugin,\n          adaptivePlugin,\n          resourceDayGridPlugin,\n          resourceTimeGridPlugin,\n          resourceTimelinePlugin,\n        ]}\n        events={events}\n        {...options}\n      />\n    )\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(Calendar)\n"],"mappings":";AAAA,OAAOA,cAAc,MAAM,wBAAwB,EAAC;AACpD,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,gBAAgB,MAAM,0BAA0B;AACvD,OAAOC,qBAAqB,MAAM,gCAAgC,EAAC;AACnE,OAAOC,sBAAsB,MAAM,iCAAiC,EAAC;AACrE,OAAOC,sBAAsB,MAAM,iCAAiC,EAAC;AACrE,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,cAAc,MAAM,wBAAwB,EAAC;;AAEpD,OAAOC,YAAY,MAAM,qBAAqB;AAE9C,SACEC,sBAAsB,EACtBC,uBAAuB,QAClB,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOhC;AACA;AACA;AACA;AACA,MAAMC,QAAQ,SAASJ,sBAAsB,CAAQ;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC5CC,MAAM,GAAG,MAAiB;MAC/B;MACA;MACA,MAAMC,MAAM,GAAG,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC,QAAQ,CAAC;MACxC,MAAMI,OAAO,GAAG,IAAI,CAACD,KAAK,CAACH,IAAI,CAAC,SAAS,CAAC;MAE1CK,OAAO,CAACC,GAAG,CAAC;QAAE,GAAGF;MAAQ,CAAC,CAAC;;MAE3B;MACA;MACA;MACA;MACA,oBACEP,OAAA,CAACJ,YAAY;QACXc,OAAO,EAAE,CACPtB,aAAa,EACbM,cAAc,EACdL,UAAU,EACVC,gBAAgB,EAChBK,cAAc,EACdR,cAAc,EACdI,qBAAqB,EACrBC,sBAAsB,EACtBC,sBAAsB,CACtB;QACFY,MAAM,EAAEA,MAAO;QAAA,GACXE;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAEN,CAAC;EAAA;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAAC,EAAA,GAAejB,uBAAuB,CAACG,QAAQ,CAAC;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}