{"ast":null,"code":"var _jsxFileName = \"/home/imperativa/streamlit-pills/streamlit_calendar/frontend/src/Calendar.tsx\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport { StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass Calendar extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.render = () => {\n      // Arguments that are passed to the plugin in Python are accessible\n      // via `this.props.args`. Here, we access the \"name\" arg.\n      const events = this.props.args[\"events\"];\n\n      // Show a button and some text.\n      // When the button is clicked, we'll increment our \"numClicks\" state\n      // variable, and send its new value back to Streamlit, where it'll\n      // be available to the Python program.\n      return /*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        events: events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this);\n    };\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default _c = withStreamlitConnection(Calendar);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["dayGridPlugin","FullCalendar","StreamlitComponentBase","withStreamlitConnection","jsxDEV","_jsxDEV","Calendar","constructor","args","render","events","props","plugins","initialView","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/imperativa/streamlit-pills/streamlit_calendar/frontend/src/Calendar.tsx"],"sourcesContent":["import dayGridPlugin from \"@fullcalendar/daygrid\"\n\nimport FullCalendar from \"@fullcalendar/react\"\nimport { ReactNode } from \"react\"\nimport {\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\n\ninterface State {\n  numClicks: number\n  isFocused: boolean\n}\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass Calendar extends StreamlitComponentBase<State> {\n  public render = (): ReactNode => {\n    // Arguments that are passed to the plugin in Python are accessible\n    // via `this.props.args`. Here, we access the \"name\" arg.\n    const events = this.props.args[\"events\"]\n\n    // Show a button and some text.\n    // When the button is clicked, we'll increment our \"numClicks\" state\n    // variable, and send its new value back to Streamlit, where it'll\n    // be available to the Python program.\n    return (\n      <FullCalendar\n        plugins={[dayGridPlugin]}\n        initialView=\"dayGridMonth\"\n        events={events}\n      />\n    )\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(Calendar)\n"],"mappings":";AAAA,OAAOA,aAAa,MAAM,uBAAuB;AAEjD,OAAOC,YAAY,MAAM,qBAAqB;AAE9C,SACEC,sBAAsB,EACtBC,uBAAuB,QAClB,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOhC;AACA;AACA;AACA;AACA,MAAMC,QAAQ,SAASJ,sBAAsB,CAAQ;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC5CC,MAAM,GAAG,MAAiB;MAC/B;MACA;MACA,MAAMC,MAAM,GAAG,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC,QAAQ,CAAC;;MAExC;MACA;MACA;MACA;MACA,oBACEH,OAAA,CAACJ,YAAY;QACXW,OAAO,EAAE,CAACZ,aAAa,CAAE;QACzBa,WAAW,EAAC,cAAc;QAC1BH,MAAM,EAAEA;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC;IAEN,CAAC;EAAA;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAAC,EAAA,GAAef,uBAAuB,CAACG,QAAQ,CAAC;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}