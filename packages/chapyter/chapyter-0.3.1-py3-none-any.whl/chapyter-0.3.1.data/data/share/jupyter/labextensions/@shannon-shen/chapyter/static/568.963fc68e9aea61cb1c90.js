"use strict";(self.webpackChunk_shannon_shen_chapyter=self.webpackChunk_shannon_shen_chapyter||[]).push([[568],{568:(e,t,l)=>{l.r(t),l.d(t,{default:()=>h});var o=l(861),d=l(882);const n="jp-chapyter-chat",a="jp-chapyter-chat-executing",i="jp-chapyter-assistance";function s(e){if((0,d.isCodeCellModel)(e.model)){let t=e.model.getMetadata("ChapyterCell")||null;if(t&&"generated"===t.cellType)return!1}return!0}function r(e,t){for(let l=0;l<e.widgets.length;l++){let o=e.widgets[l];if(o.model.id===t)return o}return null}function c(e,t){let l=e.activeCellIndex,d=function(e,t){for(let l=0;l<e.widgets.length;l++)if(e.widgets[l].model.id===t)return l;return-1}(e,t);if(-1!==d&&l!==d)if(l<d)for(let t=l;t<d;t++)e.widgets[t].inputHidden||o.NotebookActions.selectBelow(e);else for(let t=l;t>d;t--)e.widgets[t].inputHidden||o.NotebookActions.selectAbove(e)}function u(e,t=!1){let l=e.model.sharedModel.getSource();return!(!l.startsWith("%chat")&&!l.startsWith("%%chat")||l.startsWith("%%chatonly")&&t)}const h={id:"@shannon-shen/chapyter:plugin",description:"A Natural Language-Based Python Program Interpreter",autoStart:!0,requires:[o.INotebookTracker],activate:(e,t)=>{o.NotebookActions.executed.connect(((e,l)=>{if(l.success){let e=l.cell;if(u(e,!0)&&s(e)){void 0===e.model.getMetadata("ChapyterCell")&&e.model.setMetadata("ChapyterCell",{cellType:"original"});let l=function(e){let t=e.model.sharedModel.getSource().split("\n")[0];return t.includes("-s")||t.includes("--safe")}(e),d=t.currentWidget;if(d){let t=function(e,t){if(t){const l=`# Assistant Code for Cell [${t}]:`;for(let t=0;t<e.widgets.length;t++){let o=e.widgets[t];if("code"===o.model.type&&o.model.sharedModel.getSource().split("\n")[0].startsWith(l))return o}}return null}(d.content,e.model.executionCount);t&&(t.model.setMetadata("ChapyterCell",{cellType:"generated",linkedCellId:e.model.id}),console.log(l),l||(c(d.content,t.model.id),o.NotebookActions.run(d.content,d.sessionContext),t.inputHidden=!0),c(d.content,t.model.id),l||o.NotebookActions.selectBelow(d.content),e.model.setMetadata("ChapyterCell",{cellType:"original",linkedCellId:t.model.id}),e.addClass(n),e.removeClass(a),t.addClass(i))}}}})),o.NotebookActions.executionScheduled.connect(((e,l)=>{var o;let d=l.cell;if(u(d)&&s(d)){d.toggleClass(a);let e=null===(o=d.model.getMetadata("ChapyterCell"))||void 0===o?void 0:o.linkedCellId,l=t.currentWidget;if(l&&e){let t=r(l.content,e);t&&(function(e,t){const l=e.model.sharedModel,o=[];e.widgets.forEach(((l,d)=>{var n;l===t&&!1!==l.model.getMetadata("deletable")&&(o.push(d),null===(n=e.model)||void 0===n||n.deletedCells.push(l.model.id))})),o.length>0&&(l.transact((()=>{o.reverse().forEach((e=>{l.deleteCell(e)}))})),e.activeCellIndex=o[0]-o.length+1),e.deselectAll()}(l.content,t),c(l.content,d.model.id))}}})),t.widgetAdded.connect(((e,t)=>{t.context.ready.then((()=>{t.content.widgets.forEach((e=>{var l,o,d;"code"===e.model.type&&e.model.getMetadata("ChapyterCell")&&("original"===(null===(l=e.model.getMetadata("ChapyterCell"))||void 0===l?void 0:l.cellType)?r(t.content,null===(o=e.model.getMetadata("ChapyterCell"))||void 0===o?void 0:o.linkedCellId)?e.addClass(n):e.addClass(a):"generated"===(null===(d=e.model.getMetadata("ChapyterCell"))||void 0===d?void 0:d.cellType)?e.addClass(i):console.log(e.model.getMetadata("ChapyterCell")))}))}))}))}}}}]);