# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _onlinesvr
else:
    import _onlinesvr

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class OnlineSVR(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    OPERATION_LEARNING = _onlinesvr.OnlineSVR_OPERATION_LEARNING
    OPERATION_UNLEARNING = _onlinesvr.OnlineSVR_OPERATION_UNLEARNING
    OPERATION_STABILIZING = _onlinesvr.OnlineSVR_OPERATION_STABILIZING
    OPERATION_PREDICT = _onlinesvr.OnlineSVR_OPERATION_PREDICT
    OPERATION_MARGIN = _onlinesvr.OnlineSVR_OPERATION_MARGIN
    NO_SET = _onlinesvr.OnlineSVR_NO_SET
    SUPPORT_SET = _onlinesvr.OnlineSVR_SUPPORT_SET
    ERROR_SET = _onlinesvr.OnlineSVR_ERROR_SET
    REMAINING_SET = _onlinesvr.OnlineSVR_REMAINING_SET
    KERNEL_LINEAR = _onlinesvr.OnlineSVR_KERNEL_LINEAR
    KERNEL_POLYNOMIAL = _onlinesvr.OnlineSVR_KERNEL_POLYNOMIAL
    KERNEL_RBF = _onlinesvr.OnlineSVR_KERNEL_RBF
    KERNEL_RBF_GAUSSIAN = _onlinesvr.OnlineSVR_KERNEL_RBF_GAUSSIAN
    KERNEL_RBF_EXPONENTIAL = _onlinesvr.OnlineSVR_KERNEL_RBF_EXPONENTIAL
    KERNEL_MLP = _onlinesvr.OnlineSVR_KERNEL_MLP
    VERBOSITY_NO_MESSAGES = _onlinesvr.OnlineSVR_VERBOSITY_NO_MESSAGES
    VERBOSITY_NORMAL = _onlinesvr.OnlineSVR_VERBOSITY_NORMAL
    VERBOSITY_DETAILS = _onlinesvr.OnlineSVR_VERBOSITY_DETAILS
    VERBOSITY_DEBUG = _onlinesvr.OnlineSVR_VERBOSITY_DEBUG

    def __init__(self):
        _onlinesvr.OnlineSVR_swiginit(self, _onlinesvr.new_OnlineSVR())
    __swig_destroy__ = _onlinesvr.delete_OnlineSVR

    def Clear(self):
        return _onlinesvr.OnlineSVR_Clear(self)

    def Clone(self):
        return _onlinesvr.OnlineSVR_Clone(self)

    def GetC(self):
        return _onlinesvr.OnlineSVR_GetC(self)

    def SetC(self, C):
        return _onlinesvr.OnlineSVR_SetC(self, C)

    def GetEpsilon(self):
        return _onlinesvr.OnlineSVR_GetEpsilon(self)

    def SetEpsilon(self, Epsilon):
        return _onlinesvr.OnlineSVR_SetEpsilon(self, Epsilon)

    def GetKernelType(self):
        return _onlinesvr.OnlineSVR_GetKernelType(self)

    def SetKernelType(self, arg2):
        return _onlinesvr.OnlineSVR_SetKernelType(self, arg2)

    def GetKernelParam(self):
        return _onlinesvr.OnlineSVR_GetKernelParam(self)

    def SetKernelParam(self, KernelParam):
        return _onlinesvr.OnlineSVR_SetKernelParam(self, KernelParam)

    def GetKernelParam2(self):
        return _onlinesvr.OnlineSVR_GetKernelParam2(self)

    def SetKernelParam2(self, KernelParam):
        return _onlinesvr.OnlineSVR_SetKernelParam2(self, KernelParam)

    def GetKernelParam3(self):
        return _onlinesvr.OnlineSVR_GetKernelParam3(self)

    def SetKernelParam3(self, KernelParam):
        return _onlinesvr.OnlineSVR_SetKernelParam3(self, KernelParam)

    def GetAutoErrorTollerance(self):
        return _onlinesvr.OnlineSVR_GetAutoErrorTollerance(self)

    def SetAutoErrorTollerance(self, AutoErrorTollerance):
        return _onlinesvr.OnlineSVR_SetAutoErrorTollerance(self, AutoErrorTollerance)

    def GetErrorTollerance(self):
        return _onlinesvr.OnlineSVR_GetErrorTollerance(self)

    def SetErrorTollerance(self, ErrorTollerance):
        return _onlinesvr.OnlineSVR_SetErrorTollerance(self, ErrorTollerance)

    def GetVerbosity(self):
        return _onlinesvr.OnlineSVR_GetVerbosity(self)

    def SetVerbosity(self, Verbosity):
        return _onlinesvr.OnlineSVR_SetVerbosity(self, Verbosity)

    def GetStabilizedLearning(self):
        return _onlinesvr.OnlineSVR_GetStabilizedLearning(self)

    def SetStabilizedLearning(self, StabilizedLearning):
        return _onlinesvr.OnlineSVR_SetStabilizedLearning(self, StabilizedLearning)

    def GetSaveKernelMatrix(self):
        return _onlinesvr.OnlineSVR_GetSaveKernelMatrix(self)

    def SetSaveKernelMatrix(self, SaveKernelMatrix):
        return _onlinesvr.OnlineSVR_SetSaveKernelMatrix(self, SaveKernelMatrix)

    def GetSamplesTrainedNumber(self):
        return _onlinesvr.OnlineSVR_GetSamplesTrainedNumber(self)

    def GetSupportSetElementsNumber(self):
        return _onlinesvr.OnlineSVR_GetSupportSetElementsNumber(self)

    def GetErrorSetElementsNumber(self):
        return _onlinesvr.OnlineSVR_GetErrorSetElementsNumber(self)

    def GetRemainingSetElementsNumber(self):
        return _onlinesvr.OnlineSVR_GetRemainingSetElementsNumber(self)

    def GetSupportSetIndexes(self):
        return _onlinesvr.OnlineSVR_GetSupportSetIndexes(self)

    def GetErrorSetIndexes(self):
        return _onlinesvr.OnlineSVR_GetErrorSetIndexes(self)

    def GetRemainingSetIndexes(self):
        return _onlinesvr.OnlineSVR_GetRemainingSetIndexes(self)

    def GetSupportVectors(self):
        return _onlinesvr.OnlineSVR_GetSupportVectors(self)

    def GetBias(self):
        return _onlinesvr.OnlineSVR_GetBias(self)

    def Train(self, *args):
        return _onlinesvr.OnlineSVR_Train(self, *args)

    def Forget(self, *args):
        return _onlinesvr.OnlineSVR_Forget(self, *args)

    def Stabilize(self):
        return _onlinesvr.OnlineSVR_Stabilize(self)

    @staticmethod
    def CrossValidation(*args):
        return _onlinesvr.OnlineSVR_CrossValidation(*args)

    @staticmethod
    def LeaveOneOut(*args):
        return _onlinesvr.OnlineSVR_LeaveOneOut(*args)

    def Predict(self, *args):
        return _onlinesvr.OnlineSVR_Predict(self, *args)

    def Margin(self, *args):
        return _onlinesvr.OnlineSVR_Margin(self, *args)

    def VerifyKKTConditions(self):
        return _onlinesvr.OnlineSVR_VerifyKKTConditions(self)

    def ShowInfo(self):
        return _onlinesvr.OnlineSVR_ShowInfo(self)

    def ShowDetails(self):
        return _onlinesvr.OnlineSVR_ShowDetails(self)

    def LoadOnlineSVR(self, Filename):
        return _onlinesvr.OnlineSVR_LoadOnlineSVR(self, Filename)

    def SaveOnlineSVR(self, Filename):
        return _onlinesvr.OnlineSVR_SaveOnlineSVR(self, Filename)

    @staticmethod
    def Import(*args):
        return _onlinesvr.OnlineSVR_Import(*args)

# Register OnlineSVR in _onlinesvr:
_onlinesvr.OnlineSVR_swigregister(OnlineSVR)
class DoubleVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Values = property(_onlinesvr.DoubleVector_Values_get, _onlinesvr.DoubleVector_Values_set)

    def __init__(self, *args):
        _onlinesvr.DoubleVector_swiginit(self, _onlinesvr.new_DoubleVector(*args))
    __swig_destroy__ = _onlinesvr.delete_DoubleVector

    def Clone(self):
        return _onlinesvr.DoubleVector_Clone(self)

    def GetLength(self):
        return _onlinesvr.DoubleVector_GetLength(self)

    def GetStepSize(self):
        return _onlinesvr.DoubleVector_GetStepSize(self)

    def SetStepSize(self, X):
        return _onlinesvr.DoubleVector_SetStepSize(self, X)

    def GetValue(self, Index):
        return _onlinesvr.DoubleVector_GetValue(self, Index)

    def SetValue(self, Index, Value):
        return _onlinesvr.DoubleVector_SetValue(self, Index, Value)

    def Contains(self, Value):
        return _onlinesvr.DoubleVector_Contains(self, Value)

    def Clear(self):
        return _onlinesvr.DoubleVector_Clear(self)

    def Add(self, X):
        return _onlinesvr.DoubleVector_Add(self, X)

    def AddAt(self, X, Index):
        return _onlinesvr.DoubleVector_AddAt(self, X, Index)

    def RemoveAt(self, Index):
        return _onlinesvr.DoubleVector_RemoveAt(self, Index)

    def Extract(self, FromIndex, ToIndex):
        return _onlinesvr.DoubleVector_Extract(self, FromIndex, ToIndex)

    @staticmethod
    def ZeroVector(Length):
        return _onlinesvr.DoubleVector_ZeroVector(Length)

    @staticmethod
    def RandVector(Length):
        return _onlinesvr.DoubleVector_RandVector(Length)

    @staticmethod
    def GetSequence(Start, Step, End):
        return _onlinesvr.DoubleVector_GetSequence(Start, Step, End)

    def SumScalar(self, X):
        return _onlinesvr.DoubleVector_SumScalar(self, X)

    def ProductScalar(self, X):
        return _onlinesvr.DoubleVector_ProductScalar(self, X)

    def DivideScalar(self, X):
        return _onlinesvr.DoubleVector_DivideScalar(self, X)

    def PowScalar(self, X):
        return _onlinesvr.DoubleVector_PowScalar(self, X)

    @staticmethod
    def SumVector(*args):
        return _onlinesvr.DoubleVector_SumVector(*args)

    @staticmethod
    def SubtractVector(*args):
        return _onlinesvr.DoubleVector_SubtractVector(*args)

    @staticmethod
    def ProductVector(*args):
        return _onlinesvr.DoubleVector_ProductVector(*args)

    @staticmethod
    def ProductVectorScalar(*args):
        return _onlinesvr.DoubleVector_ProductVectorScalar(*args)

    def Sum(self):
        return _onlinesvr.DoubleVector_Sum(self)

    def AbsSum(self):
        return _onlinesvr.DoubleVector_AbsSum(self)

    def Min(self, *args):
        return _onlinesvr.DoubleVector_Min(self, *args)

    def MinAbs(self, *args):
        return _onlinesvr.DoubleVector_MinAbs(self, *args)

    def Max(self, *args):
        return _onlinesvr.DoubleVector_Max(self, *args)

    def MaxAbs(self, *args):
        return _onlinesvr.DoubleVector_MaxAbs(self, *args)

    def Mean(self):
        return _onlinesvr.DoubleVector_Mean(self)

    def MeanAbs(self):
        return _onlinesvr.DoubleVector_MeanAbs(self)

    def Variance(self):
        return _onlinesvr.DoubleVector_Variance(self)

    def Sort(self):
        return _onlinesvr.DoubleVector_Sort(self)

    def RemoveDuplicates(self):
        return _onlinesvr.DoubleVector_RemoveDuplicates(self)

    def Find(self, X):
        return _onlinesvr.DoubleVector_Find(self, X)

    @staticmethod
    def Load(Filename):
        return _onlinesvr.DoubleVector_Load(Filename)

    def Save(self, Filename):
        return _onlinesvr.DoubleVector_Save(self, Filename)

    def Print(self, *args):
        return _onlinesvr.DoubleVector_Print(self, *args)

# Register DoubleVector in _onlinesvr:
_onlinesvr.DoubleVector_swigregister(DoubleVector)
class IntVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Values = property(_onlinesvr.IntVector_Values_get, _onlinesvr.IntVector_Values_set)

    def __init__(self, *args):
        _onlinesvr.IntVector_swiginit(self, _onlinesvr.new_IntVector(*args))
    __swig_destroy__ = _onlinesvr.delete_IntVector

    def Clone(self):
        return _onlinesvr.IntVector_Clone(self)

    def GetLength(self):
        return _onlinesvr.IntVector_GetLength(self)

    def GetStepSize(self):
        return _onlinesvr.IntVector_GetStepSize(self)

    def SetStepSize(self, X):
        return _onlinesvr.IntVector_SetStepSize(self, X)

    def GetValue(self, Index):
        return _onlinesvr.IntVector_GetValue(self, Index)

    def SetValue(self, Index, Value):
        return _onlinesvr.IntVector_SetValue(self, Index, Value)

    def Contains(self, Value):
        return _onlinesvr.IntVector_Contains(self, Value)

    def Clear(self):
        return _onlinesvr.IntVector_Clear(self)

    def Add(self, X):
        return _onlinesvr.IntVector_Add(self, X)

    def AddAt(self, X, Index):
        return _onlinesvr.IntVector_AddAt(self, X, Index)

    def RemoveAt(self, Index):
        return _onlinesvr.IntVector_RemoveAt(self, Index)

    def Extract(self, FromIndex, ToIndex):
        return _onlinesvr.IntVector_Extract(self, FromIndex, ToIndex)

    @staticmethod
    def ZeroVector(Length):
        return _onlinesvr.IntVector_ZeroVector(Length)

    @staticmethod
    def RandVector(Length):
        return _onlinesvr.IntVector_RandVector(Length)

    @staticmethod
    def GetSequence(Start, Step, End):
        return _onlinesvr.IntVector_GetSequence(Start, Step, End)

    def SumScalar(self, X):
        return _onlinesvr.IntVector_SumScalar(self, X)

    def ProductScalar(self, X):
        return _onlinesvr.IntVector_ProductScalar(self, X)

    def DivideScalar(self, X):
        return _onlinesvr.IntVector_DivideScalar(self, X)

    def PowScalar(self, X):
        return _onlinesvr.IntVector_PowScalar(self, X)

    @staticmethod
    def SumVector(*args):
        return _onlinesvr.IntVector_SumVector(*args)

    @staticmethod
    def SubtractVector(*args):
        return _onlinesvr.IntVector_SubtractVector(*args)

    @staticmethod
    def ProductVector(*args):
        return _onlinesvr.IntVector_ProductVector(*args)

    @staticmethod
    def ProductVectorScalar(*args):
        return _onlinesvr.IntVector_ProductVectorScalar(*args)

    def Sum(self):
        return _onlinesvr.IntVector_Sum(self)

    def AbsSum(self):
        return _onlinesvr.IntVector_AbsSum(self)

    def Min(self, *args):
        return _onlinesvr.IntVector_Min(self, *args)

    def MinAbs(self, *args):
        return _onlinesvr.IntVector_MinAbs(self, *args)

    def Max(self, *args):
        return _onlinesvr.IntVector_Max(self, *args)

    def MaxAbs(self, *args):
        return _onlinesvr.IntVector_MaxAbs(self, *args)

    def Mean(self):
        return _onlinesvr.IntVector_Mean(self)

    def MeanAbs(self):
        return _onlinesvr.IntVector_MeanAbs(self)

    def Variance(self):
        return _onlinesvr.IntVector_Variance(self)

    def Sort(self):
        return _onlinesvr.IntVector_Sort(self)

    def RemoveDuplicates(self):
        return _onlinesvr.IntVector_RemoveDuplicates(self)

    def Find(self, X):
        return _onlinesvr.IntVector_Find(self, X)

    @staticmethod
    def Load(Filename):
        return _onlinesvr.IntVector_Load(Filename)

    def Save(self, Filename):
        return _onlinesvr.IntVector_Save(self, Filename)

    def Print(self, *args):
        return _onlinesvr.IntVector_Print(self, *args)

# Register IntVector in _onlinesvr:
_onlinesvr.IntVector_swigregister(IntVector)
class DoubleMatrix(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Values = property(_onlinesvr.DoubleMatrix_Values_get, _onlinesvr.DoubleMatrix_Values_set)

    def __init__(self, *args):
        _onlinesvr.DoubleMatrix_swiginit(self, _onlinesvr.new_DoubleMatrix(*args))
    __swig_destroy__ = _onlinesvr.delete_DoubleMatrix

    def Clone(self):
        return _onlinesvr.DoubleMatrix_Clone(self)

    def GetLengthRows(self):
        return _onlinesvr.DoubleMatrix_GetLengthRows(self)

    def GetLengthCols(self):
        return _onlinesvr.DoubleMatrix_GetLengthCols(self)

    def GetRowRef(self, Index):
        return _onlinesvr.DoubleMatrix_GetRowRef(self, Index)

    def GetRowCopy(self, Index):
        return _onlinesvr.DoubleMatrix_GetRowCopy(self, Index)

    def GetColCopy(self, Index):
        return _onlinesvr.DoubleMatrix_GetColCopy(self, Index)

    def GetValue(self, RowIndex, ColIndex):
        return _onlinesvr.DoubleMatrix_GetValue(self, RowIndex, ColIndex)

    def SetValue(self, RowIndex, ColIndex, Value):
        return _onlinesvr.DoubleMatrix_SetValue(self, RowIndex, ColIndex, Value)

    def IndexOf(self, V):
        return _onlinesvr.DoubleMatrix_IndexOf(self, V)

    def Clear(self):
        return _onlinesvr.DoubleMatrix_Clear(self)

    def AddRowRef(self, V):
        return _onlinesvr.DoubleMatrix_AddRowRef(self, V)

    def AddRowCopy(self, *args):
        return _onlinesvr.DoubleMatrix_AddRowCopy(self, *args)

    def AddRowRefAt(self, V, Index):
        return _onlinesvr.DoubleMatrix_AddRowRefAt(self, V, Index)

    def AddRowCopyAt(self, *args):
        return _onlinesvr.DoubleMatrix_AddRowCopyAt(self, *args)

    def AddColCopy(self, *args):
        return _onlinesvr.DoubleMatrix_AddColCopy(self, *args)

    def AddColCopyAt(self, *args):
        return _onlinesvr.DoubleMatrix_AddColCopyAt(self, *args)

    def RemoveRow(self, Index):
        return _onlinesvr.DoubleMatrix_RemoveRow(self, Index)

    def RemoveCol(self, Index):
        return _onlinesvr.DoubleMatrix_RemoveCol(self, Index)

    def ExtractRows(self, FromRowIndex, ToRowIndex):
        return _onlinesvr.DoubleMatrix_ExtractRows(self, FromRowIndex, ToRowIndex)

    def ExtractCols(self, FromColIndex, ToColIndex):
        return _onlinesvr.DoubleMatrix_ExtractCols(self, FromColIndex, ToColIndex)

    @staticmethod
    def ZeroMatrix(RowsNumber, ColsNumber):
        return _onlinesvr.DoubleMatrix_ZeroMatrix(RowsNumber, ColsNumber)

    @staticmethod
    def RandMatrix(RowsNumber, ColsNumber):
        return _onlinesvr.DoubleMatrix_RandMatrix(RowsNumber, ColsNumber)

    def SumScalar(self, X):
        return _onlinesvr.DoubleMatrix_SumScalar(self, X)

    def ProductScalar(self, X):
        return _onlinesvr.DoubleMatrix_ProductScalar(self, X)

    def DivideScalar(self, X):
        return _onlinesvr.DoubleMatrix_DivideScalar(self, X)

    def PowScalar(self, X):
        return _onlinesvr.DoubleMatrix_PowScalar(self, X)

    def SumMatrix(self, M):
        return _onlinesvr.DoubleMatrix_SumMatrix(self, M)

    def SubtractMatrix(self, M):
        return _onlinesvr.DoubleMatrix_SubtractMatrix(self, M)

    @staticmethod
    def ProductVector(*args):
        return _onlinesvr.DoubleMatrix_ProductVector(*args)

    @staticmethod
    def ProductVectorVector(V1, V2):
        return _onlinesvr.DoubleMatrix_ProductVectorVector(V1, V2)

    @staticmethod
    def ProductMatrixMatrix(M1, M2):
        return _onlinesvr.DoubleMatrix_ProductMatrixMatrix(M1, M2)

    @staticmethod
    def Load(Filename):
        return _onlinesvr.DoubleMatrix_Load(Filename)

    def Save(self, Filename):
        return _onlinesvr.DoubleMatrix_Save(self, Filename)

    def Print(self, *args):
        return _onlinesvr.DoubleMatrix_Print(self, *args)

# Register DoubleMatrix in _onlinesvr:
_onlinesvr.DoubleMatrix_swigregister(DoubleMatrix)
class IntMatrix(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Values = property(_onlinesvr.IntMatrix_Values_get, _onlinesvr.IntMatrix_Values_set)

    def __init__(self, *args):
        _onlinesvr.IntMatrix_swiginit(self, _onlinesvr.new_IntMatrix(*args))
    __swig_destroy__ = _onlinesvr.delete_IntMatrix

    def Clone(self):
        return _onlinesvr.IntMatrix_Clone(self)

    def GetLengthRows(self):
        return _onlinesvr.IntMatrix_GetLengthRows(self)

    def GetLengthCols(self):
        return _onlinesvr.IntMatrix_GetLengthCols(self)

    def GetRowRef(self, Index):
        return _onlinesvr.IntMatrix_GetRowRef(self, Index)

    def GetRowCopy(self, Index):
        return _onlinesvr.IntMatrix_GetRowCopy(self, Index)

    def GetColCopy(self, Index):
        return _onlinesvr.IntMatrix_GetColCopy(self, Index)

    def GetValue(self, RowIndex, ColIndex):
        return _onlinesvr.IntMatrix_GetValue(self, RowIndex, ColIndex)

    def SetValue(self, RowIndex, ColIndex, Value):
        return _onlinesvr.IntMatrix_SetValue(self, RowIndex, ColIndex, Value)

    def IndexOf(self, V):
        return _onlinesvr.IntMatrix_IndexOf(self, V)

    def Clear(self):
        return _onlinesvr.IntMatrix_Clear(self)

    def AddRowRef(self, V):
        return _onlinesvr.IntMatrix_AddRowRef(self, V)

    def AddRowCopy(self, *args):
        return _onlinesvr.IntMatrix_AddRowCopy(self, *args)

    def AddRowRefAt(self, V, Index):
        return _onlinesvr.IntMatrix_AddRowRefAt(self, V, Index)

    def AddRowCopyAt(self, *args):
        return _onlinesvr.IntMatrix_AddRowCopyAt(self, *args)

    def AddColCopy(self, *args):
        return _onlinesvr.IntMatrix_AddColCopy(self, *args)

    def AddColCopyAt(self, *args):
        return _onlinesvr.IntMatrix_AddColCopyAt(self, *args)

    def RemoveRow(self, Index):
        return _onlinesvr.IntMatrix_RemoveRow(self, Index)

    def RemoveCol(self, Index):
        return _onlinesvr.IntMatrix_RemoveCol(self, Index)

    def ExtractRows(self, FromRowIndex, ToRowIndex):
        return _onlinesvr.IntMatrix_ExtractRows(self, FromRowIndex, ToRowIndex)

    def ExtractCols(self, FromColIndex, ToColIndex):
        return _onlinesvr.IntMatrix_ExtractCols(self, FromColIndex, ToColIndex)

    @staticmethod
    def ZeroMatrix(RowsNumber, ColsNumber):
        return _onlinesvr.IntMatrix_ZeroMatrix(RowsNumber, ColsNumber)

    @staticmethod
    def RandMatrix(RowsNumber, ColsNumber):
        return _onlinesvr.IntMatrix_RandMatrix(RowsNumber, ColsNumber)

    def SumScalar(self, X):
        return _onlinesvr.IntMatrix_SumScalar(self, X)

    def ProductScalar(self, X):
        return _onlinesvr.IntMatrix_ProductScalar(self, X)

    def DivideScalar(self, X):
        return _onlinesvr.IntMatrix_DivideScalar(self, X)

    def PowScalar(self, X):
        return _onlinesvr.IntMatrix_PowScalar(self, X)

    def SumMatrix(self, M):
        return _onlinesvr.IntMatrix_SumMatrix(self, M)

    def SubtractMatrix(self, M):
        return _onlinesvr.IntMatrix_SubtractMatrix(self, M)

    @staticmethod
    def ProductVector(*args):
        return _onlinesvr.IntMatrix_ProductVector(*args)

    @staticmethod
    def ProductVectorVector(V1, V2):
        return _onlinesvr.IntMatrix_ProductVectorVector(V1, V2)

    @staticmethod
    def ProductMatrixMatrix(M1, M2):
        return _onlinesvr.IntMatrix_ProductMatrixMatrix(M1, M2)

    @staticmethod
    def Load(Filename):
        return _onlinesvr.IntMatrix_Load(Filename)

    def Save(self, Filename):
        return _onlinesvr.IntMatrix_Save(self, Filename)

    def Print(self, *args):
        return _onlinesvr.IntMatrix_Print(self, *args)

# Register IntMatrix in _onlinesvr:
_onlinesvr.IntMatrix_swigregister(IntMatrix)

