Metadata-Version: 2.1
Name: daisytuner
Version: 0.2.0
Summary: A cloud-connected compiler pass for performance optimization
Home-page: https://daisytuner.com
Author: Lukas Truemper
Author-email: lukas.truemper@outlook.de
Classifier: Topic :: Utilities
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests (>=2.11.0)
Requires-Dist: tqdm (>=4.64.1)
Requires-Dist: tabulate (>=0.9.0)
Requires-Dist: dace (>=0.14.3)
Requires-Dist: numpy (>=1.23.0)
Requires-Dist: pandas (>=1.5.0)
Requires-Dist: scikit-learn (>=1.2.0)
Requires-Dist: plotly (>=5.11.0)
Requires-Dist: seaborn (>=0.2.12)
Requires-Dist: kaleido (>=0.2.1)
Requires-Dist: opt-einsum (>=3.3.0)
Requires-Dist: torch (>=2.0)
Requires-Dist: torchvision
Requires-Dist: torchaudio
Requires-Dist: torchmetrics (>=0.11.4)
Requires-Dist: pytorch-lightning (>=1.9.4)
Requires-Dist: torch-geometric (>=2.3)
Requires-Dist: daisytuner-likwid (>=0.0.2)
Requires-Dist: jupyterlab (>=4.0.3)
Provides-Extra: dev
Requires-Dist: black (==22.10.0) ; extra == 'dev'
Requires-Dist: pytest (>=7.2.0) ; extra == 'dev'
Requires-Dist: pytest-cov (>=4.1.0) ; extra == 'dev'

[![stability-alpha](https://img.shields.io/badge/stability-alpha-f4d03f.svg)](https://github.com/mkenney/software-guides/blob/master/STABILITY-BADGES.md#alpha)
[![CI](https://github.com/daisytuner/daisytuner/actions/workflows/tests.yml/badge.svg)](https://github.com/daisytuner/daisytuner/actions/workflows/tests.yml)
[![codecov](https://codecov.io/gh/daisytuner/daisytuner/branch/main/graph/badge.svg?token=44PO0BWG36)](https://codecov.io/gh/daisytuner/daisytuner)
<a href="https://github.com/psf/black"><img alt="Code style: black" src="https://img.shields.io/badge/code%20style-black-000000.svg"></a>

Daisy is a cloud-connected compiler pass.
Daisy *transfer tunes* optimizations available from customizable databases using [performance embeddings](https://dl.acm.org/doi/abs/10.1145/3577193.3593714). 

<p align="center"><img src="figures/overview_fig.png" width="500"/></p>

**Source:** [Performance Embeddings: A Similarity-based Transfer Tuning Approach to Performance Optimization](https://dl.acm.org/doi/abs/10.1145/3577193.3593714)

## Installation

Daisy relies on tools for performance profiling and machine learning to match optimizations to programs. The following sections explain how to set up a conda virtual environment for Daisy.

**Step 1 (Profiling):** Modern hardware units provide interfaces to obtain statistics about the execution of a program, so-called *performance counters*. For instance, a CPU counts the number of executed instructions and branches. That information is read by Daisy using [LIKWID](https://github.com/RRZE-HPC/likwid) and the [Linux perf](https://perf.wiki.kernel.org/index.php/Main_Page) backend.

LIKWID can be installed in several ways, but we recommend installing it locally via conda:
```bash
conda install -c lukastruemper likwid
```
Furthermore, to be able to read those counters, the *perf_event paranoid level* needs to be set to 0, which allows access to core (CPU) and uncore events (e.g., DRAM controller, I/O):
```bash
# Obtain the current value
cat /proc/sys/kernel/perf_event_paranoid
# Set the paranoid level temporarily
sudo sysctl -w kernel.perf_event_paranoid=0

# Set the paranoid level persistent
# sudo sh -c 'echo kernel.perf_event_paranoid=0 > /etc/sysctl.d/local.conf'
```
The perf_event paranoid level is a system-wide property. However, it is possible to only set those permissions per user and process through Linux capabilities. A detailed discussion of this topic is given in the documentation of [Intel VTune](https://www.intel.com/content/www/us/en/docs/vtune-profiler/cookbook/2023-0/profiling-hardware-without-sampling-drivers.html).

**Step 2 (Daisy):** The Daisy python package can be installed:
```bash
pip install daisytuner
```
and update to latest DaCe:
```bash
pip install git+https://github.com/spcl/dace.git
```
