# coding: utf-8

"""
    DOJAH Publilc APIs

    Use Dojah to verify, onboard and manage user identity across Africa!

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from dojah_client import schemas  # noqa: F401


class FraudScreenUserResponseEntity(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            
            
            class aml_screening_result(
                schemas.StrBase,
                schemas.NoneBase,
                schemas.Schema,
                schemas.NoneStrMixin
            ):
            
            
                def __new__(
                    cls,
                    *args: typing.Union[None, str, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'aml_screening_result':
                    return super().__new__(
                        cls,
                        *args,
                        _configuration=_configuration,
                    )
        
            @staticmethod
            def ip_check_result() -> typing.Type['FraudScreenUserResponseEntityIpCheckResult']:
                return FraudScreenUserResponseEntityIpCheckResult
        
            @staticmethod
            def email_check_result() -> typing.Type['FraudScreenUserResponseEntityEmailCheckResult']:
                return FraudScreenUserResponseEntityEmailCheckResult
        
            @staticmethod
            def phone_check_result() -> typing.Type['FraudScreenUserResponseEntityPhoneCheckResult']:
                return FraudScreenUserResponseEntityPhoneCheckResult
            overall_risk_score = schemas.NumberSchema
            __annotations__ = {
                "aml_screening_result": aml_screening_result,
                "ip_check_result": ip_check_result,
                "email_check_result": email_check_result,
                "phone_check_result": phone_check_result,
                "overall_risk_score": overall_risk_score,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["aml_screening_result"]) -> MetaOapg.properties.aml_screening_result: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ip_check_result"]) -> 'FraudScreenUserResponseEntityIpCheckResult': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email_check_result"]) -> 'FraudScreenUserResponseEntityEmailCheckResult': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phone_check_result"]) -> 'FraudScreenUserResponseEntityPhoneCheckResult': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["overall_risk_score"]) -> MetaOapg.properties.overall_risk_score: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["aml_screening_result", "ip_check_result", "email_check_result", "phone_check_result", "overall_risk_score", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["aml_screening_result"]) -> typing.Union[MetaOapg.properties.aml_screening_result, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ip_check_result"]) -> typing.Union['FraudScreenUserResponseEntityIpCheckResult', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email_check_result"]) -> typing.Union['FraudScreenUserResponseEntityEmailCheckResult', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phone_check_result"]) -> typing.Union['FraudScreenUserResponseEntityPhoneCheckResult', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["overall_risk_score"]) -> typing.Union[MetaOapg.properties.overall_risk_score, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["aml_screening_result", "ip_check_result", "email_check_result", "phone_check_result", "overall_risk_score", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        aml_screening_result: typing.Union[MetaOapg.properties.aml_screening_result, None, str, schemas.Unset] = schemas.unset,
        ip_check_result: typing.Union['FraudScreenUserResponseEntityIpCheckResult', schemas.Unset] = schemas.unset,
        email_check_result: typing.Union['FraudScreenUserResponseEntityEmailCheckResult', schemas.Unset] = schemas.unset,
        phone_check_result: typing.Union['FraudScreenUserResponseEntityPhoneCheckResult', schemas.Unset] = schemas.unset,
        overall_risk_score: typing.Union[MetaOapg.properties.overall_risk_score, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'FraudScreenUserResponseEntity':
        return super().__new__(
            cls,
            *args,
            aml_screening_result=aml_screening_result,
            ip_check_result=ip_check_result,
            email_check_result=email_check_result,
            phone_check_result=phone_check_result,
            overall_risk_score=overall_risk_score,
            _configuration=_configuration,
            **kwargs,
        )

from dojah_client.model.fraud_screen_user_response_entity_email_check_result import FraudScreenUserResponseEntityEmailCheckResult
from dojah_client.model.fraud_screen_user_response_entity_ip_check_result import FraudScreenUserResponseEntityIpCheckResult
from dojah_client.model.fraud_screen_user_response_entity_phone_check_result import FraudScreenUserResponseEntityPhoneCheckResult
