# coding: utf-8

"""
    DOJAH Publilc APIs

    Use Dojah to verify, onboard and manage user identity across Africa!

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from dojah_client import schemas  # noqa: F401


class FraudScreenUserResponseEntityIpCheckResult(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            ip = schemas.StrSchema
        
            @staticmethod
            def blacklists() -> typing.Type['FraudScreenUserResponseEntityIpCheckResultBlacklists']:
                return FraudScreenUserResponseEntityIpCheckResultBlacklists
        
            @staticmethod
            def anonymity() -> typing.Type['FraudScreenUserResponseEntityIpCheckResultAnonymity']:
                return FraudScreenUserResponseEntityIpCheckResultAnonymity
        
            @staticmethod
            def risk_score() -> typing.Type['FraudScreenUserResponseEntityIpCheckResultRiskScore']:
                return FraudScreenUserResponseEntityIpCheckResultRiskScore
        
            @staticmethod
            def ip_details() -> typing.Type['FraudScreenUserResponseEntityIpCheckResultIpDetails']:
                return FraudScreenUserResponseEntityIpCheckResultIpDetails
            __annotations__ = {
                "ip": ip,
                "blacklists": blacklists,
                "anonymity": anonymity,
                "risk_score": risk_score,
                "ip_details": ip_details,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ip"]) -> MetaOapg.properties.ip: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["blacklists"]) -> 'FraudScreenUserResponseEntityIpCheckResultBlacklists': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["anonymity"]) -> 'FraudScreenUserResponseEntityIpCheckResultAnonymity': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["risk_score"]) -> 'FraudScreenUserResponseEntityIpCheckResultRiskScore': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ip_details"]) -> 'FraudScreenUserResponseEntityIpCheckResultIpDetails': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["ip", "blacklists", "anonymity", "risk_score", "ip_details", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ip"]) -> typing.Union[MetaOapg.properties.ip, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["blacklists"]) -> typing.Union['FraudScreenUserResponseEntityIpCheckResultBlacklists', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["anonymity"]) -> typing.Union['FraudScreenUserResponseEntityIpCheckResultAnonymity', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["risk_score"]) -> typing.Union['FraudScreenUserResponseEntityIpCheckResultRiskScore', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ip_details"]) -> typing.Union['FraudScreenUserResponseEntityIpCheckResultIpDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["ip", "blacklists", "anonymity", "risk_score", "ip_details", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        ip: typing.Union[MetaOapg.properties.ip, str, schemas.Unset] = schemas.unset,
        blacklists: typing.Union['FraudScreenUserResponseEntityIpCheckResultBlacklists', schemas.Unset] = schemas.unset,
        anonymity: typing.Union['FraudScreenUserResponseEntityIpCheckResultAnonymity', schemas.Unset] = schemas.unset,
        risk_score: typing.Union['FraudScreenUserResponseEntityIpCheckResultRiskScore', schemas.Unset] = schemas.unset,
        ip_details: typing.Union['FraudScreenUserResponseEntityIpCheckResultIpDetails', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'FraudScreenUserResponseEntityIpCheckResult':
        return super().__new__(
            cls,
            *args,
            ip=ip,
            blacklists=blacklists,
            anonymity=anonymity,
            risk_score=risk_score,
            ip_details=ip_details,
            _configuration=_configuration,
            **kwargs,
        )

from dojah_client.model.fraud_screen_user_response_entity_ip_check_result_anonymity import FraudScreenUserResponseEntityIpCheckResultAnonymity
from dojah_client.model.fraud_screen_user_response_entity_ip_check_result_blacklists import FraudScreenUserResponseEntityIpCheckResultBlacklists
from dojah_client.model.fraud_screen_user_response_entity_ip_check_result_ip_details import FraudScreenUserResponseEntityIpCheckResultIpDetails
from dojah_client.model.fraud_screen_user_response_entity_ip_check_result_risk_score import FraudScreenUserResponseEntityIpCheckResultRiskScore
