# coding: utf-8

"""
    DOJAH Publilc APIs

    Use Dojah to verify, onboard and manage user identity across Africa!

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from dojah_client import schemas  # noqa: F401


class FraudScreenUserResponseEntityIpCheckResultBlacklists(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            detections = schemas.NumberSchema
            engines_count = schemas.NumberSchema
            detection_rate = schemas.StrSchema
            scantime = schemas.StrSchema
            __annotations__ = {
                "detections": detections,
                "engines_count": engines_count,
                "detection_rate": detection_rate,
                "scantime": scantime,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["detections"]) -> MetaOapg.properties.detections: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["engines_count"]) -> MetaOapg.properties.engines_count: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["detection_rate"]) -> MetaOapg.properties.detection_rate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["scantime"]) -> MetaOapg.properties.scantime: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["detections", "engines_count", "detection_rate", "scantime", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["detections"]) -> typing.Union[MetaOapg.properties.detections, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["engines_count"]) -> typing.Union[MetaOapg.properties.engines_count, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["detection_rate"]) -> typing.Union[MetaOapg.properties.detection_rate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["scantime"]) -> typing.Union[MetaOapg.properties.scantime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["detections", "engines_count", "detection_rate", "scantime", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        detections: typing.Union[MetaOapg.properties.detections, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        engines_count: typing.Union[MetaOapg.properties.engines_count, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        detection_rate: typing.Union[MetaOapg.properties.detection_rate, str, schemas.Unset] = schemas.unset,
        scantime: typing.Union[MetaOapg.properties.scantime, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'FraudScreenUserResponseEntityIpCheckResultBlacklists':
        return super().__new__(
            cls,
            *args,
            detections=detections,
            engines_count=engines_count,
            detection_rate=detection_rate,
            scantime=scantime,
            _configuration=_configuration,
            **kwargs,
        )
