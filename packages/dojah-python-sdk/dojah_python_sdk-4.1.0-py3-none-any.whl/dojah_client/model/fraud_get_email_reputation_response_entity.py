# coding: utf-8

"""
    DOJAH Publilc APIs

    Use Dojah to verify, onboard and manage user identity across Africa!

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from dojah_client import schemas  # noqa: F401


class FraudGetEmailReputationResponseEntity(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            email = schemas.StrSchema
            reputation = schemas.StrSchema
            suspicious = schemas.BoolSchema
            references = schemas.NumberSchema
        
            @staticmethod
            def details() -> typing.Type['FraudGetEmailReputationResponseEntityDetails']:
                return FraudGetEmailReputationResponseEntityDetails
            score = schemas.NumberSchema
            deliverable = schemas.BoolSchema
        
            @staticmethod
            def domain_details() -> typing.Type['FraudGetEmailReputationResponseEntityDomainDetails']:
                return FraudGetEmailReputationResponseEntityDomainDetails
        
            @staticmethod
            def breach_details() -> typing.Type['FraudGetEmailReputationResponseEntityBreachDetails']:
                return FraudGetEmailReputationResponseEntityBreachDetails
        
            @staticmethod
            def account_details_registered() -> typing.Type['FraudGetEmailReputationResponseEntityAccountDetailsRegistered']:
                return FraudGetEmailReputationResponseEntityAccountDetailsRegistered
            __annotations__ = {
                "email": email,
                "reputation": reputation,
                "suspicious": suspicious,
                "references": references,
                "details": details,
                "score": score,
                "deliverable": deliverable,
                "domain_details": domain_details,
                "breach_details": breach_details,
                "account_details_registered": account_details_registered,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reputation"]) -> MetaOapg.properties.reputation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["suspicious"]) -> MetaOapg.properties.suspicious: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["references"]) -> MetaOapg.properties.references: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["details"]) -> 'FraudGetEmailReputationResponseEntityDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["score"]) -> MetaOapg.properties.score: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["deliverable"]) -> MetaOapg.properties.deliverable: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["domain_details"]) -> 'FraudGetEmailReputationResponseEntityDomainDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["breach_details"]) -> 'FraudGetEmailReputationResponseEntityBreachDetails': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["account_details_registered"]) -> 'FraudGetEmailReputationResponseEntityAccountDetailsRegistered': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["email", "reputation", "suspicious", "references", "details", "score", "deliverable", "domain_details", "breach_details", "account_details_registered", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email"]) -> typing.Union[MetaOapg.properties.email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reputation"]) -> typing.Union[MetaOapg.properties.reputation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["suspicious"]) -> typing.Union[MetaOapg.properties.suspicious, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["references"]) -> typing.Union[MetaOapg.properties.references, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["details"]) -> typing.Union['FraudGetEmailReputationResponseEntityDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["score"]) -> typing.Union[MetaOapg.properties.score, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["deliverable"]) -> typing.Union[MetaOapg.properties.deliverable, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["domain_details"]) -> typing.Union['FraudGetEmailReputationResponseEntityDomainDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["breach_details"]) -> typing.Union['FraudGetEmailReputationResponseEntityBreachDetails', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["account_details_registered"]) -> typing.Union['FraudGetEmailReputationResponseEntityAccountDetailsRegistered', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["email", "reputation", "suspicious", "references", "details", "score", "deliverable", "domain_details", "breach_details", "account_details_registered", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        email: typing.Union[MetaOapg.properties.email, str, schemas.Unset] = schemas.unset,
        reputation: typing.Union[MetaOapg.properties.reputation, str, schemas.Unset] = schemas.unset,
        suspicious: typing.Union[MetaOapg.properties.suspicious, bool, schemas.Unset] = schemas.unset,
        references: typing.Union[MetaOapg.properties.references, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        details: typing.Union['FraudGetEmailReputationResponseEntityDetails', schemas.Unset] = schemas.unset,
        score: typing.Union[MetaOapg.properties.score, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        deliverable: typing.Union[MetaOapg.properties.deliverable, bool, schemas.Unset] = schemas.unset,
        domain_details: typing.Union['FraudGetEmailReputationResponseEntityDomainDetails', schemas.Unset] = schemas.unset,
        breach_details: typing.Union['FraudGetEmailReputationResponseEntityBreachDetails', schemas.Unset] = schemas.unset,
        account_details_registered: typing.Union['FraudGetEmailReputationResponseEntityAccountDetailsRegistered', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'FraudGetEmailReputationResponseEntity':
        return super().__new__(
            cls,
            *args,
            email=email,
            reputation=reputation,
            suspicious=suspicious,
            references=references,
            details=details,
            score=score,
            deliverable=deliverable,
            domain_details=domain_details,
            breach_details=breach_details,
            account_details_registered=account_details_registered,
            _configuration=_configuration,
            **kwargs,
        )

from dojah_client.model.fraud_get_email_reputation_response_entity_account_details_registered import FraudGetEmailReputationResponseEntityAccountDetailsRegistered
from dojah_client.model.fraud_get_email_reputation_response_entity_breach_details import FraudGetEmailReputationResponseEntityBreachDetails
from dojah_client.model.fraud_get_email_reputation_response_entity_details import FraudGetEmailReputationResponseEntityDetails
from dojah_client.model.fraud_get_email_reputation_response_entity_domain_details import FraudGetEmailReputationResponseEntityDomainDetails
