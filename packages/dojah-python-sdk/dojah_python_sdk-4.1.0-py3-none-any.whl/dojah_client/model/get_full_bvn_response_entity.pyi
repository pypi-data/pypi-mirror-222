# coding: utf-8

"""
    DOJAH Publilc APIs

    Use Dojah to verify, onboard and manage user identity across Africa!

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from dojah_client import schemas  # noqa: F401


class GetFullBvnResponseEntity(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            title = schemas.StrSchema
            bvn = schemas.StrSchema
            date_of_birth = schemas.StrSchema
            email = schemas.StrSchema
            enrollment_bank = schemas.StrSchema
            enrollment_branch = schemas.StrSchema
            first_name = schemas.StrSchema
            gender = schemas.StrSchema
            image = schemas.StrSchema
            last_name = schemas.StrSchema
            level_of_account = schemas.StrSchema
            lga_of_origin = schemas.StrSchema
            lga_of_residence = schemas.StrSchema
            marital_status = schemas.StrSchema
            middle_name = schemas.StrSchema
            name_on_card = schemas.StrSchema
            nationality = schemas.StrSchema
            nin = schemas.StrSchema
            phone_number1 = schemas.StrSchema
            phone_number2 = schemas.StrSchema
            reference = schemas.StrSchema
            registration_date = schemas.StrSchema
            residential_address = schemas.StrSchema
            state_of_origin = schemas.StrSchema
            state_of_residence = schemas.StrSchema
            watch_listed = schemas.StrSchema
            __annotations__ = {
                "title": title,
                "bvn": bvn,
                "date_of_birth": date_of_birth,
                "email": email,
                "enrollment_bank": enrollment_bank,
                "enrollment_branch": enrollment_branch,
                "first_name": first_name,
                "gender": gender,
                "image": image,
                "last_name": last_name,
                "level_of_account": level_of_account,
                "lga_of_origin": lga_of_origin,
                "lga_of_residence": lga_of_residence,
                "marital_status": marital_status,
                "middle_name": middle_name,
                "name_on_card": name_on_card,
                "nationality": nationality,
                "nin": nin,
                "phone_number1": phone_number1,
                "phone_number2": phone_number2,
                "reference": reference,
                "registration_date": registration_date,
                "residential_address": residential_address,
                "state_of_origin": state_of_origin,
                "state_of_residence": state_of_residence,
                "watch_listed": watch_listed,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["title"]) -> MetaOapg.properties.title: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bvn"]) -> MetaOapg.properties.bvn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["date_of_birth"]) -> MetaOapg.properties.date_of_birth: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["email"]) -> MetaOapg.properties.email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enrollment_bank"]) -> MetaOapg.properties.enrollment_bank: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enrollment_branch"]) -> MetaOapg.properties.enrollment_branch: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["first_name"]) -> MetaOapg.properties.first_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gender"]) -> MetaOapg.properties.gender: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["image"]) -> MetaOapg.properties.image: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["last_name"]) -> MetaOapg.properties.last_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["level_of_account"]) -> MetaOapg.properties.level_of_account: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lga_of_origin"]) -> MetaOapg.properties.lga_of_origin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lga_of_residence"]) -> MetaOapg.properties.lga_of_residence: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["marital_status"]) -> MetaOapg.properties.marital_status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["middle_name"]) -> MetaOapg.properties.middle_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name_on_card"]) -> MetaOapg.properties.name_on_card: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nationality"]) -> MetaOapg.properties.nationality: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nin"]) -> MetaOapg.properties.nin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phone_number1"]) -> MetaOapg.properties.phone_number1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["phone_number2"]) -> MetaOapg.properties.phone_number2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reference"]) -> MetaOapg.properties.reference: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["registration_date"]) -> MetaOapg.properties.registration_date: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["residential_address"]) -> MetaOapg.properties.residential_address: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["state_of_origin"]) -> MetaOapg.properties.state_of_origin: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["state_of_residence"]) -> MetaOapg.properties.state_of_residence: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["watch_listed"]) -> MetaOapg.properties.watch_listed: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["title", "bvn", "date_of_birth", "email", "enrollment_bank", "enrollment_branch", "first_name", "gender", "image", "last_name", "level_of_account", "lga_of_origin", "lga_of_residence", "marital_status", "middle_name", "name_on_card", "nationality", "nin", "phone_number1", "phone_number2", "reference", "registration_date", "residential_address", "state_of_origin", "state_of_residence", "watch_listed", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["title"]) -> typing.Union[MetaOapg.properties.title, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bvn"]) -> typing.Union[MetaOapg.properties.bvn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["date_of_birth"]) -> typing.Union[MetaOapg.properties.date_of_birth, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["email"]) -> typing.Union[MetaOapg.properties.email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enrollment_bank"]) -> typing.Union[MetaOapg.properties.enrollment_bank, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enrollment_branch"]) -> typing.Union[MetaOapg.properties.enrollment_branch, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["first_name"]) -> typing.Union[MetaOapg.properties.first_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gender"]) -> typing.Union[MetaOapg.properties.gender, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["image"]) -> typing.Union[MetaOapg.properties.image, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["last_name"]) -> typing.Union[MetaOapg.properties.last_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["level_of_account"]) -> typing.Union[MetaOapg.properties.level_of_account, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lga_of_origin"]) -> typing.Union[MetaOapg.properties.lga_of_origin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lga_of_residence"]) -> typing.Union[MetaOapg.properties.lga_of_residence, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["marital_status"]) -> typing.Union[MetaOapg.properties.marital_status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["middle_name"]) -> typing.Union[MetaOapg.properties.middle_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name_on_card"]) -> typing.Union[MetaOapg.properties.name_on_card, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nationality"]) -> typing.Union[MetaOapg.properties.nationality, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nin"]) -> typing.Union[MetaOapg.properties.nin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phone_number1"]) -> typing.Union[MetaOapg.properties.phone_number1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["phone_number2"]) -> typing.Union[MetaOapg.properties.phone_number2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reference"]) -> typing.Union[MetaOapg.properties.reference, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["registration_date"]) -> typing.Union[MetaOapg.properties.registration_date, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["residential_address"]) -> typing.Union[MetaOapg.properties.residential_address, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["state_of_origin"]) -> typing.Union[MetaOapg.properties.state_of_origin, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["state_of_residence"]) -> typing.Union[MetaOapg.properties.state_of_residence, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["watch_listed"]) -> typing.Union[MetaOapg.properties.watch_listed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["title", "bvn", "date_of_birth", "email", "enrollment_bank", "enrollment_branch", "first_name", "gender", "image", "last_name", "level_of_account", "lga_of_origin", "lga_of_residence", "marital_status", "middle_name", "name_on_card", "nationality", "nin", "phone_number1", "phone_number2", "reference", "registration_date", "residential_address", "state_of_origin", "state_of_residence", "watch_listed", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        title: typing.Union[MetaOapg.properties.title, str, schemas.Unset] = schemas.unset,
        bvn: typing.Union[MetaOapg.properties.bvn, str, schemas.Unset] = schemas.unset,
        date_of_birth: typing.Union[MetaOapg.properties.date_of_birth, str, schemas.Unset] = schemas.unset,
        email: typing.Union[MetaOapg.properties.email, str, schemas.Unset] = schemas.unset,
        enrollment_bank: typing.Union[MetaOapg.properties.enrollment_bank, str, schemas.Unset] = schemas.unset,
        enrollment_branch: typing.Union[MetaOapg.properties.enrollment_branch, str, schemas.Unset] = schemas.unset,
        first_name: typing.Union[MetaOapg.properties.first_name, str, schemas.Unset] = schemas.unset,
        gender: typing.Union[MetaOapg.properties.gender, str, schemas.Unset] = schemas.unset,
        image: typing.Union[MetaOapg.properties.image, str, schemas.Unset] = schemas.unset,
        last_name: typing.Union[MetaOapg.properties.last_name, str, schemas.Unset] = schemas.unset,
        level_of_account: typing.Union[MetaOapg.properties.level_of_account, str, schemas.Unset] = schemas.unset,
        lga_of_origin: typing.Union[MetaOapg.properties.lga_of_origin, str, schemas.Unset] = schemas.unset,
        lga_of_residence: typing.Union[MetaOapg.properties.lga_of_residence, str, schemas.Unset] = schemas.unset,
        marital_status: typing.Union[MetaOapg.properties.marital_status, str, schemas.Unset] = schemas.unset,
        middle_name: typing.Union[MetaOapg.properties.middle_name, str, schemas.Unset] = schemas.unset,
        name_on_card: typing.Union[MetaOapg.properties.name_on_card, str, schemas.Unset] = schemas.unset,
        nationality: typing.Union[MetaOapg.properties.nationality, str, schemas.Unset] = schemas.unset,
        nin: typing.Union[MetaOapg.properties.nin, str, schemas.Unset] = schemas.unset,
        phone_number1: typing.Union[MetaOapg.properties.phone_number1, str, schemas.Unset] = schemas.unset,
        phone_number2: typing.Union[MetaOapg.properties.phone_number2, str, schemas.Unset] = schemas.unset,
        reference: typing.Union[MetaOapg.properties.reference, str, schemas.Unset] = schemas.unset,
        registration_date: typing.Union[MetaOapg.properties.registration_date, str, schemas.Unset] = schemas.unset,
        residential_address: typing.Union[MetaOapg.properties.residential_address, str, schemas.Unset] = schemas.unset,
        state_of_origin: typing.Union[MetaOapg.properties.state_of_origin, str, schemas.Unset] = schemas.unset,
        state_of_residence: typing.Union[MetaOapg.properties.state_of_residence, str, schemas.Unset] = schemas.unset,
        watch_listed: typing.Union[MetaOapg.properties.watch_listed, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'GetFullBvnResponseEntity':
        return super().__new__(
            cls,
            *args,
            title=title,
            bvn=bvn,
            date_of_birth=date_of_birth,
            email=email,
            enrollment_bank=enrollment_bank,
            enrollment_branch=enrollment_branch,
            first_name=first_name,
            gender=gender,
            image=image,
            last_name=last_name,
            level_of_account=level_of_account,
            lga_of_origin=lga_of_origin,
            lga_of_residence=lga_of_residence,
            marital_status=marital_status,
            middle_name=middle_name,
            name_on_card=name_on_card,
            nationality=nationality,
            nin=nin,
            phone_number1=phone_number1,
            phone_number2=phone_number2,
            reference=reference,
            registration_date=registration_date,
            residential_address=residential_address,
            state_of_origin=state_of_origin,
            state_of_residence=state_of_residence,
            watch_listed=watch_listed,
            _configuration=_configuration,
            **kwargs,
        )
