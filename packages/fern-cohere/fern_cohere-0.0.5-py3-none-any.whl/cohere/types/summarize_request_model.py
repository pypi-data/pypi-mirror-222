# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class SummarizeRequestModel(str, enum.Enum):
    """
    The ID of the model to generate the summary with. Currently available models are `summarize-medium` and `summarize-xlarge` (default). Smaller models are faster, while larger models will perform better
    """

    SUMMARIZE_MEDIUM = "summarize-medium"
    SUMMARIZE_XLARGE = "summarize-xlarge"

    def visit(
        self, summarize_medium: typing.Callable[[], T_Result], summarize_xlarge: typing.Callable[[], T_Result]
    ) -> T_Result:
        if self is SummarizeRequestModel.SUMMARIZE_MEDIUM:
            return summarize_medium()
        if self is SummarizeRequestModel.SUMMARIZE_XLARGE:
            return summarize_xlarge()
