// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

// import "exploit_templates/Destructible.sol";
// import "exploit_templates/Targeted.sol";

contract Solver {
    // fallback (with data, returning memory)
    fallback(bytes calldata _data) external returns (bytes memory) {
        // store 42 in data at position 0, return data
        bytes memory data = new bytes(32);
        assembly {
            mstore(data, 42)
            return(data, 32)
        }
    }
}