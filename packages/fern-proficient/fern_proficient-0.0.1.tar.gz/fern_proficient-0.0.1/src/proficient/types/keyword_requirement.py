# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class KeywordRequirement(str, enum.Enum):
    """
    An enumeration.
    """

    REQUIRED = "REQUIRED"
    IF_STANDALONE = "IF_STANDALONE"
    NOT_REQUIRED = "NOT_REQUIRED"

    def visit(
        self,
        required: typing.Callable[[], T_Result],
        if_standalone: typing.Callable[[], T_Result],
        not_required: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is KeywordRequirement.REQUIRED:
            return required()
        if self is KeywordRequirement.IF_STANDALONE:
            return if_standalone()
        if self is KeywordRequirement.NOT_REQUIRED:
            return not_required()
