[tool.poetry]
name = "django-oauth2-authcodeflow"
version = "1.0.1"
description = "Authenticate with any OpenId Connect/Oauth2 provider through authorization code flow. PKCE is also supported."
authors = ["Cyrille Pontvieux <cpontvieux@systra.com>"]
maintainers = ["Cyrille Pontvieux <cyrille@enialis.net>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/jrd/django-oauth2-authcodeflow"
repository = "https://gitlab.com/systra/qeto/lib/django-oauth2-authcodeflow"
documentation = "https://gitlab.com/systra/qeto/lib/django-oauth2-authcodeflow/-/blob/master/README.md"
keywords = ["oauth2", "oidc", "openid"]
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Environment :: Web Environment",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Topic :: Internet :: WWW/HTTP :: Session",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
packages = [{include = "oauth2_authcodeflow"}]
include = ["CHANGELOG.md", "OP.md"]

[tool.poetry.urls]
"Bug Tracker" = "https://gitlab.com/systra/qeto/lib/django-oauth2-authcodeflow/-/issues"
"Merge Requests" = "https://gitlab.com/systra/qeto/lib/django-oauth2-authcodeflow/-/merge_requests"
"Changelog" = "https://gitlab.com/systra/qeto/lib/django-oauth2-authcodeflow/-/blob/master/CHANGELOG.md"

[tool.poetry.dependencies]
python = "^3.7"
django = ">=3.2,<5"
python-jose = {extras = ["cryptography"], version = ">=3.3"}
requests = ">=2.28"

[tool.poetry.group.dev.dependencies]
flake8 = "^5.0.4"
flake8-pyproject = "^1.2.2"
freezegun = "^1.2.2"
isort = "^5.10.1"
pdbpp = "^0.10.3"
pytest = "^7.1.3"
pytest-cov = "^4.0.0"
pytest-django = "^4.5.2"
pytest-html = "^3.2.0"

[tool.poetry.group.typing.dependencies]
django-types = "^0.16.0"
mypy = "^1.0"
types-cryptography = "^3.3.23.2"
types-python-jose = "^3.3.4"
types-requests = "^2.28.11.4"

[tool.flake8]
max-line-length = 160
exclude = [".venv", "venv"]

[tool.pytest.ini_options]
django_find_project = "false" # do not rely on manage.py file presence
pythonpath = "." # indicate the root path
django_debug_mode = "keep" # respect debug mode in test settings
DJANGO_SETTINGS_MODULE = "test.settings"
junit_family = "xunit2"
junit_logging = "all"
addopts = [
    "--color=auto",
    "--code-highlight=yes",
    "--junit-xml=reports/report.xunit",
    "--html=reports/report.html",
    "--self-contained-html",
    "--cov",
    "--cov-report=term",
    "--cov-report=xml",
    "--cov-report=html",
]
[tool.coverage.run]
source = ["oauth2_authcodeflow"]
omit = ["tests/*", "*/migrations/*", "*/__init__.py"]
branch = true
relative_files = true
[tool.coverage.report]
precision = 2
[tool.coverage.xml]
output = "reports/coverage.xml"
[tool.coverage.html]
directory = "reports/coverage"
title = "Django OAuth2 Auth Code Flow coverage"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[[tool.poetry.source]]
name = "testPyPI"
url = "https://test.pypi.org/legacy/"
priority = "explicit"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
