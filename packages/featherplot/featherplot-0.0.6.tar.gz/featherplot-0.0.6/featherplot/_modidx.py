# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/featherplot-py',
                'doc_host': 'https://dsm-72.github.io',
                'git_url': 'https://github.com/dsm-72/featherplot-py',
                'lib_path': 'featherplot'},
  'syms': { 'featherplot.commands': { 'featherplot.commands.add_sidecars': ('commands.html#add_sidecars', 'featherplot/commands.py'),
                                      'featherplot.commands.export_conda_to_ini': ( 'commands.html#export_conda_to_ini',
                                                                                    'featherplot/commands.py'),
                                      'featherplot.commands.run_add_sidecars': ( 'commands.html#run_add_sidecars',
                                                                                 'featherplot/commands.py'),
                                      'featherplot.commands.run_export_conda_to_ini': ( 'commands.html#run_export_conda_to_ini',
                                                                                        'featherplot/commands.py')},
            'featherplot.constants': {},
            'featherplot.dataclasses': {},
            'featherplot.deepscatter': { 'featherplot.deepscatter.Tileset': ('deepscatter.html#tileset', 'featherplot/deepscatter.py'),
                                         'featherplot.deepscatter.Tileset.__init__': ( 'deepscatter.html#tileset.__init__',
                                                                                       'featherplot/deepscatter.py'),
                                         'featherplot.deepscatter.Tileset.__iter__': ( 'deepscatter.html#tileset.__iter__',
                                                                                       'featherplot/deepscatter.py'),
                                         'featherplot.deepscatter.Tileset.add_sidecars': ( 'deepscatter.html#tileset.add_sidecars',
                                                                                           'featherplot/deepscatter.py'),
                                         'featherplot.deepscatter.Tileset.sidecar_iter': ( 'deepscatter.html#tileset.sidecar_iter',
                                                                                           'featherplot/deepscatter.py'),
                                         'featherplot.deepscatter.add_sidecars_cli': ( 'deepscatter.html#add_sidecars_cli',
                                                                                       'featherplot/deepscatter.py'),
                                         'featherplot.deepscatter.parse_args': ( 'deepscatter.html#parse_args',
                                                                                 'featherplot/deepscatter.py')},
            'featherplot.files': {},
            'featherplot.paths': {},
            'featherplot.rich': {},
            'featherplot.typer': {},
            'featherplot.types': { 'featherplot.types.BaseChannel': ('types.html#basechannel', 'featherplot/types.py'),
                                   'featherplot.types.BaseChannel.export_tuple_as_list': ( 'types.html#basechannel.export_tuple_as_list',
                                                                                           'featherplot/types.py'),
                                   'featherplot.types.BaseChannel.to_dict': ('types.html#basechannel.to_dict', 'featherplot/types.py'),
                                   'featherplot.types.BaseChannel.to_meta': ('types.html#basechannel.to_meta', 'featherplot/types.py'),
                                   'featherplot.types.BasicBooleanChannel': ('types.html#basicbooleanchannel', 'featherplot/types.py'),
                                   'featherplot.types.BasicChannel': ('types.html#basicchannel', 'featherplot/types.py'),
                                   'featherplot.types.BasicChannelError': ('types.html#basicchannelerror', 'featherplot/types.py'),
                                   'featherplot.types.BasicColorChannel': ('types.html#basiccolorchannel', 'featherplot/types.py'),
                                   'featherplot.types.CategoricalChannel': ('types.html#categoricalchannel', 'featherplot/types.py'),
                                   'featherplot.types.CategoricalChannelError': ( 'types.html#categoricalchannelerror',
                                                                                  'featherplot/types.py'),
                                   'featherplot.types.CategoricalColorChannel': ( 'types.html#categoricalcolorchannel',
                                                                                  'featherplot/types.py'),
                                   'featherplot.types.ChannelCreationError': ('types.html#channelcreationerror', 'featherplot/types.py'),
                                   'featherplot.types.ConditionalChannel': ('types.html#conditionalchannel', 'featherplot/types.py'),
                                   'featherplot.types.ConditionalChannelError': ( 'types.html#conditionalchannelerror',
                                                                                  'featherplot/types.py'),
                                   'featherplot.types.ConditionalTypeGuard': ('types.html#conditionaltypeguard', 'featherplot/types.py'),
                                   'featherplot.types.ConstantBool': ('types.html#constantbool', 'featherplot/types.py'),
                                   'featherplot.types.ConstantChannelError': ('types.html#constantchannelerror', 'featherplot/types.py'),
                                   'featherplot.types.ConstantColor': ('types.html#constantcolor', 'featherplot/types.py'),
                                   'featherplot.types.ConstantNumber': ('types.html#constantnumber', 'featherplot/types.py'),
                                   'featherplot.types.LambdaChannel': ('types.html#lambdachannel', 'featherplot/types.py'),
                                   'featherplot.types.LambdaChannelError': ('types.html#lambdachannelerror', 'featherplot/types.py'),
                                   'featherplot.types.LiteralTypeGuard': ('types.html#literaltypeguard', 'featherplot/types.py'),
                                   'featherplot.types.LiteralTypeGuard.check': ( 'types.html#literaltypeguard.check',
                                                                                 'featherplot/types.py'),
                                   'featherplot.types.LiteralTypeGuard.validate': ( 'types.html#literaltypeguard.validate',
                                                                                    'featherplot/types.py'),
                                   'featherplot.types.MissingKwargsError': ('types.html#missingkwargserror', 'featherplot/types.py'),
                                   'featherplot.types.QuadFeatherColumnTypeGuard': ( 'types.html#quadfeathercolumntypeguard',
                                                                                     'featherplot/types.py'),
                                   'featherplot.types.TransformTypeGuard': ('types.html#transformtypeguard', 'featherplot/types.py'),
                                   'featherplot.types.TypeGuardError': ('types.html#typeguarderror', 'featherplot/types.py')},
            'featherplot.utils': { 'featherplot.utils.AnnDataProcessor': ('utils.html#anndataprocessor', 'featherplot/utils.py'),
                                   'featherplot.utils.AnnDataProcessor.emb_name': ( 'utils.html#anndataprocessor.emb_name',
                                                                                    'featherplot/utils.py'),
                                   'featherplot.utils.AnnDataProcessor.get_embedding': ( 'utils.html#anndataprocessor.get_embedding',
                                                                                         'featherplot/utils.py'),
                                   'featherplot.utils.AnnDataProcessor.get_sidecars': ( 'utils.html#anndataprocessor.get_sidecars',
                                                                                        'featherplot/utils.py'),
                                   'featherplot.utils.DataFrameToMetadata': ('utils.html#dataframetometadata', 'featherplot/utils.py'),
                                   'featherplot.utils.DataFrameToMetadata.__post_init__': ( 'utils.html#dataframetometadata.__post_init__',
                                                                                            'featherplot/utils.py'),
                                   'featherplot.utils.DataFrameToMetadata._default_sidecars': ( 'utils.html#dataframetometadata._default_sidecars',
                                                                                                'featherplot/utils.py'),
                                   'featherplot.utils.DataFrameToMetadata._do_one': ( 'utils.html#dataframetometadata._do_one',
                                                                                      'featherplot/utils.py'),
                                   'featherplot.utils.DataFrameToMetadata.convert': ( 'utils.html#dataframetometadata.convert',
                                                                                      'featherplot/utils.py'),
                                   'featherplot.utils.DataFrameToMetadata.to_dict': ( 'utils.html#dataframetometadata.to_dict',
                                                                                      'featherplot/utils.py'),
                                   'featherplot.utils.DataFrameToMetadata.to_meta': ( 'utils.html#dataframetometadata.to_meta',
                                                                                      'featherplot/utils.py'),
                                   'featherplot.utils.MockSingleCellData': ('utils.html#mocksinglecelldata', 'featherplot/utils.py'),
                                   'featherplot.utils.MockSingleCellData.adata': ( 'utils.html#mocksinglecelldata.adata',
                                                                                   'featherplot/utils.py'),
                                   'featherplot.utils.MockSingleCellData.conditions': ( 'utils.html#mocksinglecelldata.conditions',
                                                                                        'featherplot/utils.py'),
                                   'featherplot.utils.MockSingleCellData.df_cnt': ( 'utils.html#mocksinglecelldata.df_cnt',
                                                                                    'featherplot/utils.py'),
                                   'featherplot.utils.MockSingleCellData.df_emb': ( 'utils.html#mocksinglecelldata.df_emb',
                                                                                    'featherplot/utils.py'),
                                   'featherplot.utils.MockSingleCellData.df_nrm': ( 'utils.html#mocksinglecelldata.df_nrm',
                                                                                    'featherplot/utils.py'),
                                   'featherplot.utils.MockSingleCellData.emb_cols': ( 'utils.html#mocksinglecelldata.emb_cols',
                                                                                      'featherplot/utils.py'),
                                   'featherplot.utils.MockSingleCellData.gene_symbols': ( 'utils.html#mocksinglecelldata.gene_symbols',
                                                                                          'featherplot/utils.py'),
                                   'featherplot.utils.MockSingleCellData.is_hvg_gene': ( 'utils.html#mocksinglecelldata.is_hvg_gene',
                                                                                         'featherplot/utils.py'),
                                   'featherplot.utils.MockSingleCellData.labels': ( 'utils.html#mocksinglecelldata.labels',
                                                                                    'featherplot/utils.py'),
                                   'featherplot.utils.MockSingleCellData.x_emb': ( 'utils.html#mocksinglecelldata.x_emb',
                                                                                   'featherplot/utils.py'),
                                   'featherplot.utils.MockSingleCellData.x_norm': ( 'utils.html#mocksinglecelldata.x_norm',
                                                                                    'featherplot/utils.py'),
                                   'featherplot.utils.QuadFeatherRenamer': ('utils.html#quadfeatherrenamer', 'featherplot/utils.py'),
                                   'featherplot.utils.QuadFeatherRenamer.__rich_repr__': ( 'utils.html#quadfeatherrenamer.__rich_repr__',
                                                                                           'featherplot/utils.py'),
                                   'featherplot.utils.QuadFeatherRenamer.rename': ( 'utils.html#quadfeatherrenamer.rename',
                                                                                    'featherplot/utils.py'),
                                   'featherplot.utils.SeriesToChannel': ('utils.html#seriestochannel', 'featherplot/utils.py'),
                                   'featherplot.utils.SeriesToChannel.as_boolean': ( 'utils.html#seriestochannel.as_boolean',
                                                                                     'featherplot/utils.py'),
                                   'featherplot.utils.SeriesToChannel.as_category': ( 'utils.html#seriestochannel.as_category',
                                                                                      'featherplot/utils.py'),
                                   'featherplot.utils.SeriesToChannel.as_color': ( 'utils.html#seriestochannel.as_color',
                                                                                   'featherplot/utils.py'),
                                   'featherplot.utils.SeriesToChannel.as_conditional': ( 'utils.html#seriestochannel.as_conditional',
                                                                                         'featherplot/utils.py'),
                                   'featherplot.utils.SeriesToChannel.as_functional': ( 'utils.html#seriestochannel.as_functional',
                                                                                        'featherplot/utils.py'),
                                   'featherplot.utils.SeriesToChannel.as_lambda': ( 'utils.html#seriestochannel.as_lambda',
                                                                                    'featherplot/utils.py'),
                                   'featherplot.utils.SeriesToChannel.as_root': ( 'utils.html#seriestochannel.as_root',
                                                                                  'featherplot/utils.py'),
                                   'featherplot.utils.SeriesToChannel.convert': ( 'utils.html#seriestochannel.convert',
                                                                                  'featherplot/utils.py'),
                                   'featherplot.utils.SeriesToChannel.is_category': ( 'utils.html#seriestochannel.is_category',
                                                                                      'featherplot/utils.py'),
                                   'featherplot.utils.SeriesToChannel.to': ('utils.html#seriestochannel.to', 'featherplot/utils.py'),
                                   'featherplot.utils.SeriesToChannel.to_meta': ( 'utils.html#seriestochannel.to_meta',
                                                                                  'featherplot/utils.py'),
                                   'featherplot.utils.SeriesToChannel.valid_types': ( 'utils.html#seriestochannel.valid_types',
                                                                                      'featherplot/utils.py'),
                                   'featherplot.utils.collapse_user': ('utils.html#collapse_user', 'featherplot/utils.py'),
                                   'featherplot.utils.create_boolean_channel': ( 'utils.html#create_boolean_channel',
                                                                                 'featherplot/utils.py'),
                                   'featherplot.utils.create_color_channel': ('utils.html#create_color_channel', 'featherplot/utils.py'),
                                   'featherplot.utils.create_conditional_channel': ( 'utils.html#create_conditional_channel',
                                                                                     'featherplot/utils.py'),
                                   'featherplot.utils.create_functional_channel': ( 'utils.html#create_functional_channel',
                                                                                    'featherplot/utils.py'),
                                   'featherplot.utils.create_lambda_channel': ('utils.html#create_lambda_channel', 'featherplot/utils.py'),
                                   'featherplot.utils.create_root_channel': ('utils.html#create_root_channel', 'featherplot/utils.py'),
                                   'featherplot.utils.get_user': ('utils.html#get_user', 'featherplot/utils.py'),
                                   'featherplot.utils.handle_duplicate_columns': ( 'utils.html#handle_duplicate_columns',
                                                                                   'featherplot/utils.py'),
                                   'featherplot.utils.make_temp_file': ('utils.html#make_temp_file', 'featherplot/utils.py')}}}
