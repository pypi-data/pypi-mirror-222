name: Release

on:
  push:
    tags:
      - v*.*.*

permissions:
  contents: read

jobs:
  # TODO: check and require that tests have completed without issue before releasing?

  release:
    name: Release
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Check version
        id: check-version
        run: |
          pattern="^refs\/tags\/v([0-9]+\.[0-9]+\.[0-9]+(-(a|alpha|b|beta|dev)[0-9]+)?)$"
          [[ "${{ github.ref }}" =~ $pattern ]]
          version="${BASH_REMATCH[1]}"
          if [ ! -z "${BASH_REMATCH[2]}" ]
          then
            version="${version/-/}"
            version="${version/alpha/a}"
            version="${version/beta/b}"
            pre="true"
          else
            pre="false"
          fi
          echo "prerelease=$pre" >> "$GITHUB_OUTPUT"
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Write version files
        env:
          VERSION: ${{ steps.check-version.outputs.version }}
        run: |
          "$env:VERSION" | Out-File -FilePath ".version"
          "__version__ = version = '$env:VERSION'" | Out-File -FilePath "src/quickconf/_version.py"
        shell: pwsh

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools build wheel

      - name: Build package
        run: |
          python -m build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          name: ${{ steps.check-version.outputs.version }}
          draft: false
          allowUpdates: true
          generateReleaseNotes: true
          removeArtifacts: true
          prerelease: ${{ steps.check-version.outputs.prerelease }}

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
