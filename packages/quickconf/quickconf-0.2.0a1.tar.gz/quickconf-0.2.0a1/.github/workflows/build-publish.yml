name: Build and Publish Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  prepare:
    name: Get release version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      publish: ${{ steps.get-version.outputs.publish }}
    steps:
      - name: Get version from tag
        id: get-version
        run: |
          pattern="^refs\/tags\/v([0-9]+\.[0-9]+\.[0-9]+(-(a|alpha|b|beta|dev)[0-9]+)?)$"
          if [[ "${{ github.ref }}" =~ $pattern ]]
          then
            ver="${BASH_REMATCH[1]}"
            pub="true"
          else
            ver="0.0.1dev0"
            pub="false"
          fi
          echo "version=$ver" >> "$GITHUB_OUTPUT"
          echo "publish=$pub" >> "$GITHUB_OUTPUT"

  build:
    name: Build package
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools build wheel
      - name: Write version files
        env:
          VERSION: ${{ needs.prepare.outputs.version }}
        run: |
          "$env:VERSION" | Out-File -FilePath ".version"
          "__version__ = version = '$env:VERSION'" | Out-File -FilePath "src/quickconf/_version.py"
        shell: pwsh
      - name: Build package
        run: |
          python -m build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    needs: [prepare, build]
    if: needs.prepare.outputs.publish == 'true'
    environment: release
    permissions:
      id-token: write
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
