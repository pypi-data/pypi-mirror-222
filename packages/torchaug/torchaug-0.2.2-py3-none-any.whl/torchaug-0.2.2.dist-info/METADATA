Metadata-Version: 2.1
Name: torchaug
Version: 0.2.2
Summary: Torchvision Complementary tool to perform batch and GPU data augmentations.
Author-email: Julien Denize <julien.denize@hotmail.fr>
Project-URL: Homepage, https://github.com/juliendenize/torchaug
Project-URL: Bug Tracker, https://github.com/juliendenize/torchaug/issues
Project-URL: Download, https://github.com/juliendenize/torchaug
Project-URL: Source Code, https://github.com/juliendenize/torchaug
Keywords: computer vision,deep learning,pytorch
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Environment :: GPU
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: CEA CNRS Inria Logiciel Libre License, version 2.1 (CeCILL-2.1)
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Scientific/Engineering :: Image Processing
Classifier: Topic :: Software Development :: Libraries
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: torch (>=2.0)
Requires-Dist: torchvision (>=0.15)

**Efficient vision data augmentations for on GPU and/or batched data.**

***Under active development, subject to API change***

[![PyPI python](https://img.shields.io/pypi/pyversions/torchaug)](https://pypi.org/project/torchaug)
[![PyPI version](https://badge.fury.io/py/torchaug.svg)](https://pypi.org/project/torchaug)
[![codecov](https://codecov.io/gh/juliendenize/torchaug/branch/main/graph/badge.svg?token=CA266XDW8D)](https://codecov.io/gh/juliendenize/torchaug)
[![License](https://img.shields.io/badge/license-CeCILL--C-green.svg)](LICENSE)

# Torchaug

## Introduction

Torchvision has been implemented over Pytorch and Pillow to perform Computer Vision in the Pytorch Ecosystem. One of its core functionality is to perform Data augmentations. However because it has been implemented first for CPU and later with GPU in mind, it has several drawbacks to make it work on GPUs:

- Some CPU/GPU synchronizations cannot be avoided.
- Batch data augmentations are not completely random, meaning that random parameters are sampled for the whole batch and not each unique component.

This library aims to remove these issues. It acts like a complementary library to Torchvision and does not use the same namespace. Still, it follows the same nomenclature as Torchvision with *functional* augmentations and *transforms* class wrappers.

To be sure to retrieve the same data augmentations as Torchvision, it has been tested on each of its augmentations.

See [augmentations.md](augmentations.md) for the implemented data augmentations and [speed_comparison.md](speed_comparison.md) for the speed comparison with Torchvision.

## How to use

0. Install a Pytorch >= 2.0 environment.

1. Install Torchaug.

```bash
pip install torchaug
```

2. Import data augmentations either from `torchaug.transforms` or `torchaug.batch_transforms` packages.

```python
from torchaug.transforms import RandomColorJitter
from torchaug.batch_transforms import BatchRandomColorJitter

transform = RandomColorJitter(...)
batch_transform = BatchRandomColorJitter(...)
```

## How to contribute

Feel free to contribute to this library by making issues and/or pull requests. For each feature you implement, add tests to make sure it works.

## LICENSE

This project is under the CeCILL license 2.1.
