permissions:
  contents: read
on:
  push:
    branches: [main]
  pull_request:
  schedule:
    - cron:  '7 7 * * *'
# Spend CI time only on latest ref: https://github.com/jonhoo/rust-ci-conf/pull/5
# Run daily, check for running cargo test with updated cargo and nightly
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
name: rolling
jobs:
  pre-commit:
    uses: ./.github/workflows/pre-flight.yml
  msrv:
    runs-on: "ubuntu-latest"
    needs: pre-commit
    strategy:
      matrix:
        msrv: ["1.64.0", "1.65.0"]
    name: "ubuntu / ${{ matrix.msrv }}"
    steps:
      - uses: "actions/checkout@v3"
      - uses: "dtolnay/rust-toolchain@master"
        with:
          toolchain: "${{ matrix.msrv }}"
      - name: "cargo +${{ matrix.msrv }} check"
        run: "cargo check"
  # https://twitter.com/mycoliza/status/1571295690063753218
  nightly:
    runs-on: ubuntu-latest
    needs: pre-commit
    name: ubuntu / nightly
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install nightly
        uses: dtolnay/rust-toolchain@nightly
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo test --locked
        run: cargo test --locked --all-features --all-targets
  # https://twitter.com/alcuadrado/status/1571291687837732873
  update:
    runs-on: ubuntu-latest
    needs: pre-commit
    name: ubuntu / beta / updated
    # There's no point running this if no Cargo.lock was checked in in the
    # first place, since we'd just redo what happened in the regular test job.
    # Unfortunately, hashFiles only works in if on steps, so we reepeat it.
    # if: hashFiles('Cargo.lock') != ''
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install beta
        if: hashFiles('Cargo.lock') != ''
        uses: dtolnay/rust-toolchain@beta
      - name: cargo update
        if: hashFiles('Cargo.lock') != ''
        run: cargo update
      - name: cargo test
        if: hashFiles('Cargo.lock') != ''
        run: cargo test --locked --all-features --all-targets
        env:
          RUSTFLAGS: -D deprecated
