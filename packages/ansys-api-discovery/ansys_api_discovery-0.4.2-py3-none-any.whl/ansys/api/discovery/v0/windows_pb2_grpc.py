# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ansys.api.discovery.v0 import discoverystreaming_pb2 as ansys_dot_api_dot_discovery_dot_v0_dot_discoverystreaming__pb2
from ansys.api.discovery.v0 import windows_pb2 as ansys_dot_api_dot_discovery_dot_v0_dot_windows__pb2


class WindowsStub(object):
    """Windows

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetImage = channel.unary_stream(
                '/ansys.api.discovery.v0.Windows.Windows/GetImage',
                request_serializer=ansys_dot_api_dot_discovery_dot_v0_dot_windows__pb2.GetImageRequest.SerializeToString,
                response_deserializer=ansys_dot_api_dot_discovery_dot_v0_dot_discoverystreaming__pb2.StreamPackage.FromString,
                )
        self.SetView = channel.unary_unary(
                '/ansys.api.discovery.v0.Windows.Windows/SetView',
                request_serializer=ansys_dot_api_dot_discovery_dot_v0_dot_windows__pb2.SetViewRequest.SerializeToString,
                response_deserializer=ansys_dot_api_dot_discovery_dot_v0_dot_windows__pb2.SetViewResponse.FromString,
                )


class WindowsServicer(object):
    """Windows

    """

    def GetImage(self, request, context):
        """Gets an image for the active window. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetView(self, request, context):
        """Sets the camera view for the active window. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WindowsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetImage': grpc.unary_stream_rpc_method_handler(
                    servicer.GetImage,
                    request_deserializer=ansys_dot_api_dot_discovery_dot_v0_dot_windows__pb2.GetImageRequest.FromString,
                    response_serializer=ansys_dot_api_dot_discovery_dot_v0_dot_discoverystreaming__pb2.StreamPackage.SerializeToString,
            ),
            'SetView': grpc.unary_unary_rpc_method_handler(
                    servicer.SetView,
                    request_deserializer=ansys_dot_api_dot_discovery_dot_v0_dot_windows__pb2.SetViewRequest.FromString,
                    response_serializer=ansys_dot_api_dot_discovery_dot_v0_dot_windows__pb2.SetViewResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ansys.api.discovery.v0.Windows.Windows', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Windows(object):
    """Windows

    """

    @staticmethod
    def GetImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ansys.api.discovery.v0.Windows.Windows/GetImage',
            ansys_dot_api_dot_discovery_dot_v0_dot_windows__pb2.GetImageRequest.SerializeToString,
            ansys_dot_api_dot_discovery_dot_v0_dot_discoverystreaming__pb2.StreamPackage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetView(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.discovery.v0.Windows.Windows/SetView',
            ansys_dot_api_dot_discovery_dot_v0_dot_windows__pb2.SetViewRequest.SerializeToString,
            ansys_dot_api_dot_discovery_dot_v0_dot_windows__pb2.SetViewResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
