"use strict";(self.webpackChunkjupylot=self.webpackChunkjupylot||[]).push([[568],{568:(e,t,o)=>{o.r(t),o.d(t,{default:()=>g});var n=o(529),a=o.n(n),l=o(861),r=o(278),u=o(845),s=o(778),c=o(172);const d={SECRET_KEY:"",LANGUAGE:"KR",PROMPT:"\n  파이썬 에러메시지 보고 에러의 이유를 요약해서 알려줘 (형식: 에러 이유: ~~ \n 해결 방법 : ~~)\n  "};class i extends s.Widget{constructor(e,t,o){super(),this.addClass("myInputWidget"),this.node.innerHTML=`\n      <label>\n        Secret Key: \n        <input id="secret_key" value="${e}" />\n      </label>\n      <label>\n        Language:\n        <input id="language" value="${t}" />\n      </label>\n      <label>\n        Prompt:\n        <textarea id="prompt" rows="5" cols="50">${o}</textarea>\n      </label>\n    `}getValue(){return{secret_key:this.node.querySelector("#secret_key").value,language:this.node.querySelector("#language").value,prompt:this.node.querySelector("#prompt").value}}}function p(e,t,o){if(e.outputs.length>0&&"error"===e.outputs.get(0).type){let n=e.outputs.get(0).data["application/vnd.jupyter.stderr"],l=document.createElement("button");l.innerText="Analyze Error",l.className="error-button",l.onclick=async()=>{if(!d.SECRET_KEY){let e=new i(d.SECRET_KEY,d.LANGUAGE,d.PROMPT);if((await(0,c.showDialog)({title:"Config Error Button",body:e,buttons:[c.Dialog.cancelButton(),c.Dialog.okButton({label:"OK"})]})).button.accept){let t=e.getValue();d.SECRET_KEY=t.secret_key,d.LANGUAGE=t.language,d.PROMPT=t.prompt}}l.disabled=!0;let e=new r.OutputAreaModel,u=new r.OutputArea({model:e,rendermime:o});e.add({output_type:"stream",name:"stdout",text:"Loading..."}),async function(e,t){try{return(await a().post("https://api.openai.com/v1/chat/completions",{model:"gpt-3.5-turbo",messages:[{role:"user",content:e}]},{headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`}})).data.choices[0].message.content}catch(e){throw console.error(e),e}}(d.PROMPT+(null==n?void 0:n.toString()),d.SECRET_KEY).then((t=>{let o=t;e.clear(),e.add({output_type:"stream",name:"stdout",text:o}),u.update()})).catch((t=>{console.error(t),e.add({output_type:"stream",name:"stdout",text:t.message}),u.update()})).finally((()=>{l.disabled=!1})),t.node.appendChild(u.node)},t.node.appendChild(l)}}const g={id:"error-button",autoStart:!0,requires:[l.INotebookTracker,u.IRenderMimeRegistry],activate:async(e,t,o)=>{console.log("JupyterLab extension error-button is activated!"),t.widgetAdded.connect(((e,t)=>{let o=new c.ToolbarButton({className:"error-button-util",iconClass:"fa fa-star",onClick:async()=>{let e=new i(d.SECRET_KEY,d.LANGUAGE,d.PROMPT);if((await(0,c.showDialog)({title:"Config Error Button",body:e,buttons:[c.Dialog.cancelButton(),c.Dialog.okButton({label:"OK"})]})).button.accept){let t=e.getValue();d.SECRET_KEY=t.secret_key,d.LANGUAGE=t.language,d.PROMPT=t.prompt}},tooltip:"My Button"});t.toolbar.insertItem(10,"myButton",o)})),t.widgetAdded.connect(((e,t)=>{let n=t.content;null!==n.model&&(n.widgets.forEach((e=>{if("code"===e.model.type){let t=e;p(e.model,t,o)}})),n.model.cells.changed.connect((()=>{n.widgets.forEach((e=>{if("code"===e.model.type){let t=e,n=e.model;p(n,t,o),t.outputArea.model.changed.connect((()=>{p(n,t,o)}))}}))})))}))}}}}]);