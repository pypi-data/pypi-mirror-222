Metadata-Version: 2.1
Name: millilensing
Version: 0.0.1
Summary: Millilensing
Home-page: https://git.ligo.org/ania.liu/millilensing
Author: Ania Liu
License: MIT
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.5
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: bilby
Requires-Dist: lalsuite
Requires-Dist: numpy (>=1.9)

## Millilensing 
Millilensing- a python package for gravitational-wave millilensing analysis within bilby framework. 

## Why millilensing?
Currently most widely used lens models assume a spherically symmetric lens isolated from any astrophysical objects which, in general, is physically unrealistic. The framework developed here presents a phenomenological approach to gravitational-wave millilensing analysis, which allows for a physically realistic description of millilenses, relaxing the isolated lens assumption and taking into account gravitational effects from galaxy shear and surrounding lenses. In particular, the following assumptions are taken into account:
- no lens model assumed 
- lens mass range (of order 1000 Msun) corresponding to geometrical optics approximation 
\(no wave optics effects)
- gravitational shear effects taken into account
- arbitrary integer number of images allowed

The waveform models can be found in source.py which comprises three separate millilensing waveforms for the case of 2, 3 and 4 images (`binary_black_hole_millilens_two_images`, `binary_black_hole_millilens_three_images`, `binary_black_hole_millilens_four_images`), as well as a multi-image waveform `multi_image_Kmax` (currently under development).  

## Multi-image waveform 
Multi-image waveform `multi_image_Kmax` allows to account for a different integer number of images within one waveform model. Maximum number of images is specified by an integer value (1 to 10) for `MAX_KMAX` provided in `__init__.py`. 

The lens parameters introduced for this waveform are: magnification, relative time delay, Morse phase and number of images. For the last two parameters, discrete prior distirbutions are used, which can be found in `prior/lensing.py`. 



## Installation 
1. clone the repository 
2. cd into the repository directory 
3. Enter: 
```sh 
python setup.py install 
```
