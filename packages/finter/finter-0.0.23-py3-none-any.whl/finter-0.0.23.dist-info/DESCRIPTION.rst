Finter API client Package
=========================

Overview
--------

*Python client SDK for finter platform*

-  You can get Authorization of finter API with authToken.
-  Type: API key
-  API key parameter name: Authorization
-  Location: HTTP header
-  This Python package is automatically generated by the `Swagger
   Codegen <https://github.com/swagger-api/swagger-codegen>`__ project.
-  Please contact with
   `finter\_support@quantit.io <finter_support@quantit.io>`__ if you
   have any problems, troubles, ... etc.

Requirements.
-------------

Python 2.7 and 3.4+

Installation & Usage
--------------------

.. code:: sh

    pip install finter

Then import the package:

.. code:: python

    import finter 

Getting Started
---------------

Please follow the installation procedure and then run the following:

Get CM Example
~~~~~~~~~~~~~~

.. code:: python

    from __future__ import print_function
    import time
    import finter
    from finter.rest import ApiException
    from pprint import pprint
    # Configure API key authorization: tokenAuth
    configuration = finter.Configuration()
    # Token-based authentication with required prefix "Token"
    configuration.api_key['Authorization'] = 'Token YOUR_API_KEY' # prefix "Token" is required

    # create an instance of the API class
    api_instance = finter.ContentApi(finter.ApiClient(configuration))
    code_format = 'code_format_example' # str | data column code format (optional)
    end = 'end_example' # str | data end date (optional)
    identity_name = 'identity_name_example' # str | content model identity name (required)
    tail = 56 # int | data tail row number (optional)

    try:
        api_response = api_instance.content_model_retrieve(code_format=code_format, end=end, identity_name=identity_name, tail=tail)
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling ContentApi->content_model_retrieve: %s\n" % e)

Convert to Pandas DataFrame
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    import finter

    json_response = api_response.to_dict()['cm']
    df = finter.to_dataframe(json_response)

Get Calendar Example
~~~~~~~~~~~~~~~~~~~~

.. code:: python

    from __future__ import print_function
    import time
    import finter
    from finter.rest import ApiException
    from pprint import pprint
    # Configure API key authorization: tokenAuth
    configuration = finter.Configuration()
    configuration.api_key['Authorization'] = 'Token YOUR_API_KEY' # prefix "Token" is required

    # create an instance of the API class
    api_instance = finter.CalendarApi(finter.ApiClient(configuration))
    date_type = 1 # int | 0:all day 1: trading day, 2: closed day, 3: weekends (optional, default: 0)
    start_date = 'start_date_example' # str |  (required)
    end_date = 'end_date_example' # str |  (required)
    exchange = 'exchange_example' # str |  (optional)

    try:
        api_response = api_instance.calendar_retrieve(date_type=date_type, end_date=end_date, exchange=exchange, start_date=start_date)
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling CalendarApi->calendar_retrieve: %s\n" % e)

Get Metafund Model Example
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    from __future__ import print_function
    import time
    import finter
    from finter.rest import ApiException
    from pprint import pprint
    # Configure API key authorization: tokenAuth
    configuration = finter.Configuration()
    configuration.api_key['Authorization'] = 'Token YOUR_API_KEY' # prefix "Token" is required

    # create an instance of the API class
    api_instance = finter.MetafundApi(finter.ApiClient(configuration))
    code_format = 'code_format_example' # str | data column code format (optional)
    forward_fill = True # bool |  (optional)
    metafund_name = 'metafund_name_example' # str |  (required)

    try:
        api_response = api_instance.metafund_model_retrieve(code_format=code_format, forward_fill=forward_fill, metafund_name=metafund_name)
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling MetafundApi->metafund_model_retrieve: %s\n" % e)

Get simulation Example
~~~~~~~~~~~~~~~~~~~~~~

.. code:: python

    from __future__ import print_function
    import time
    import finter
    from finter.rest import ApiException
    from pprint import pprint
    # Configure API key authorization: tokenAuth
    configuration = finter.Configuration()
    configuration.api_key['Authorization'] = 'Token YOUR_API_KEY' # prefix "Token" is required

    sim_data = {
        'position': '',  # postion json using df.to_json(orient="split", date_format="iso", date_unit="s", force_ascii=False)
        'model_info': {'exchange': 'krx', 'universe': 'krx', 'instrument_type': 'stock', 'freq': '1d',
                       'position_type': 'target', 'type': 'alpha'},
        'start': 20100111,
        'end': 20230620,
        'fill_nan': True,
        'close': True,
        'adj_dividend': True,
        'adj_funding_fee': False,
        'currency': None,
        'return_calc_method': 'arithmetic',
        'turnover_calc_method': 'arithmetic',
        'cost_list': ['fee_tax', 'high_low'],
        'volcap_pct': 0,
        'decay': 1,
        'slippage': 10,
    }
    # create an instance of the API class
    api_instance = finter.SimulationApi(finter.ApiClient(configuration))
    body = finter.SimulationRequest(**sim_data) # SimulationRequest |

    try:
        api_response = api_instance.simulation_create(body)
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling SimulationApi->simulation_create: %s\n" % e)

**You can apply same code frame to use other endpoints.**

+-------------------+--------------------------------------+---------------------------+
| api\_instance     | module name                          | Api url                   |
+===================+======================================+===========================+
| ContentApi        | content\_identities\_retrieve        | content/identities        |
+-------------------+--------------------------------------+---------------------------+
|                   | content\_model\_retrieve             | content/model             |
+-------------------+--------------------------------------+---------------------------+
|                   | ews\_retrieve                        | ews/                      |
+-------------------+--------------------------------------+---------------------------+
| AlphaApi          | alpha\_identities\_retrieve          | alpha/identities          |
+-------------------+--------------------------------------+---------------------------+
|                   | alpha\_model\_retrieve               | alpha/model               |
+-------------------+--------------------------------------+---------------------------+
| PortfolioApi      | portfolio\_identities\_retrieve      | portfolio/identities      |
+-------------------+--------------------------------------+---------------------------+
|                   | portfolio\_model\_retrieve           | portfolio/model           |
+-------------------+--------------------------------------+---------------------------+
| FundApi           | fund\_identities\_retrieve           | fund/identities           |
+-------------------+--------------------------------------+---------------------------+
|                   | fund\_model\_retrieve                | fund/model                |
+-------------------+--------------------------------------+---------------------------+
| FlexibleFundApi   | flexiblefund\_identities\_retrieve   | flexiblefund/identities   |
+-------------------+--------------------------------------+---------------------------+
|                   | flexiblefund\_model\_retrieve        | flexiblefund/model        |
+-------------------+--------------------------------------+---------------------------+
| MetafundApi       | metafund\_list\_retrieve             | metafund/list             |
+-------------------+--------------------------------------+---------------------------+
|                   | metafund\_model\_retrieve            | metafund/model            |
+-------------------+--------------------------------------+---------------------------+
|                   | metafund\_performance\_retrieve      | metafund/performance      |
+-------------------+--------------------------------------+---------------------------+
| Calendar          | calendar\_retrieve                   | calendar/                 |
+-------------------+--------------------------------------+---------------------------+

**Finter Utils** name \| description ---- \| ---- to\_dataframe \|
convert json-formed data to dataframe


