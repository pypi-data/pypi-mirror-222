Metadata-Version: 2.1
Name: stonefish
Version: 0.3.13
Summary: Python code protection
Author-email: Nico Schl√∂mer <nico.schloemer@gmail.com>
Project-URL: Homepage, https://github.com/pysos/stonefish
Project-URL: Issues, https://github.com/pysos/stonefish/issues
Classifier: Development Status :: 4 - Beta
Classifier: License :: Other/Proprietary License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Utilities
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: x21 (>=0.4.15,<0.5.0)
Requires-Dist: libcst
Requires-Dist: rich
Requires-Dist: rich-argparse
Requires-Dist: setuptools
Requires-Dist: tomli-w
Requires-Dist: x21 (>=0.4.10)
Requires-Dist: tomli ; python_version < "3.11"
Requires-Dist: importlib-metadata ; python_version < "3.8"
Requires-Dist: astunparse ; python_version < "3.9"

# Stonefish

### Quickstart

#### Protecting Python packages

If you have a Python _package_ that you'd like to build with Stonefish, make
sure it follows [PEP 517](https://peps.python.org/pep-0517/) and contains
at least a minimal `pyproject.toml`. There, simply replace the your build system
(e.g., `setuptools`) with `stonefish`:

```toml
[build-system]
# requires = ["setuptools"]
# build-backend = "setuptools.build_meta"
requires = ["stonefish"]
build-backend = "stonefish.build_meta"

# ...
# more project metadata if you follow PEP 621
# <https://peps.python.org/pep-0621/>
# (recommended)
# ...
```

Done! Your project builds are now protected with Stonefish. Try it out with

```
pip install .
```

or

```
(pip install build)
python -m build . --wheel
```

#### Protecting standalone Python scripts

If you'd like to project just a single Python file, you
can use the `stonefish` command-line utility, e.g.,

```
stonefish /path/to/file.py
```

### How it works

No matter the programming language, all code has to be run on the user's
computer eventually. By observing incoming instructions on the CPU,
can theoretically be rebuild. That's independent of the programming language.
That process is hard, though, and
