"use strict";(self.webpackChunkjupyter_viz_extension=self.webpackChunkjupyter_viz_extension||[]).push([[759],{759:(e,t,n)=>{n.r(t),n.d(t,{default:()=>N});var a=n(303),s=n(832),i=n(271),o=n.n(i),c=n(628),r=n.n(c),l=n(344),p=n(139);async function m(e,t={}){const n=p.ServerConnection.makeSettings(),a=l.URLExt.join(n.baseUrl,"jupyter-viz-extension",e);let s;try{s=await p.ServerConnection.makeRequest(a,t,n)}catch(e){throw new p.ServerConnection.NetworkError(e)}let i=await s.text();if(i.length>0)try{i=JSON.parse(i)}catch(e){console.log("Not a JSON response body.",s)}if(!s.ok)throw new p.ServerConnection.ResponseError(s,i.message||i);return i}function d(e,t){const n=document.createElement("label");return n.htmlFor=e,n.textContent=t,n}function h(e,t){const n=document.createElement("select");n.id=e;for(const e of t){const t=document.createElement("option");t.value=e,t.textContent=e,n.appendChild(t)}return n}function u(e,t,n,a=[]){const s=document.createElement("input");s.type=t,s.id=e,s.value=n,s.classList.add("form-input");for(const[e,t]of a)s.setAttribute(e,t);return s}class E extends s.Widget{constructor(){super(),this.fetchUserData=async()=>{const e=await m("user");for(const t of e.accounts){const e=document.createElement("option");e.value=t,e.textContent=t,this._accountElement.appendChild(e)}for(const t of e.partitions){const e=document.createElement("option");e.value=t,e.textContent=t,this._partitionElement.appendChild(e)}};const e=document.createElement("div");e.appendChild(d("name","Name: ")),e.appendChild(this._nameElement=u("name","text","ParaView Server")),this.node.appendChild(e);const t=document.createElement("div");t.appendChild(d("account","Account: ")),t.appendChild(this._accountElement=h("account",[])),this.node.appendChild(t);const n=document.createElement("div");n.appendChild(d("partition","Partition: ")),n.appendChild(this._partitionElement=h("partition",[])),this.node.appendChild(n);const a=document.createElement("div");a.appendChild(d("nodes","Nodes: ")),a.appendChild(this._nodesElement=u("nodes","number","4",[["min","1"],["max","32"],["step","1"]])),this.node.appendChild(a);const s=document.createElement("div");s.appendChild(d("time","Time: ")),s.appendChild(this._timeElement=u("time","text","02:00:00")),this.node.appendChild(s),this.fetchUserData()}getValue(){return{name:this._nameElement.value,account:this._accountElement.value,partition:this._partitionElement.value,nodes:Number(this._nodesElement.value),timeLimit:this._timeElement.value}}}class v extends s.Widget{constructor(e,t){super(),this.fetchUserData=async()=>{const e=await m("user");this._dataDirElement.value=e.home};const n=document.createElement("div");n.appendChild(d("name","Name: ")),n.appendChild(this._nameElement=u("name","text",`${e} Instance ${t+1}`)),this.node.appendChild(n);const a=document.createElement("div");a.appendChild(d("dataDir","Data Directory: ")),a.appendChild(this._dataDirElement=u("dataDir","text","")),this.node.appendChild(a),this.fetchUserData()}getValue(){return{name:this._nameElement.value,dataDirectory:this._dataDirElement.value}}}class g extends i.Component{render(){return i.createElement("div",null,i.createElement("span",{style:{fontWeight:"bold"}},this.props.label,": "),i.createElement("span",null,this.props.value))}}class b extends i.Component{constructor(e){super(e)}render(){const e=i.createElement(i.Fragment,null,i.createElement("b",null,this.props.name),i.createElement(g,{label:"Nodes",value:this.props.nodes.toString()}),i.createElement(g,{label:"Status",value:this.props.state}),i.createElement(g,{label:"Time",value:`${this.props.timeUsed} / ${this.props.timeLimit}`}));return i.createElement(i.Fragment,null,i.createElement(r(),{trigger:e},i.createElement(g,{label:"Project",value:this.props.account}),i.createElement(g,{label:"Partition",value:this.props.partition}),i.createElement(g,{label:"Nodes",value:this.props.nodes.toString()})))}}class C extends i.Component{constructor(){super({}),this.fetchData=async()=>{this.setState({instances:await m("paraview")})},this.newInstance=async()=>{const e=await(0,a.showDialog)({title:"Launch a new ParaView instance",body:new E});console.log(e.value);const t=await m("paraview",{method:"POST",body:JSON.stringify(e.value)});await Promise.all([(0,a.showErrorMessage)(0===t.returnCode?"Success":"Error",t.message),this.fetchData()])},this.state={instances:[]}}async componentDidMount(){await this.fetchData()}render(){return i.createElement(i.Fragment,null,i.createElement("h3",null,"Running ParaView backends:",i.createElement("button",{className:"launch-button",onClick:this.newInstance},"Launch")),i.createElement("div",{id:"paraview-instances",className:"instance-list"},this.state.instances.map((e=>i.createElement(b,Object.assign({},e))))))}}class w extends i.Component{constructor(e){super(e),this.openInstance=()=>{const e=l.URLExt.join(this.props.base_url,"index.html");window.open(e,"_blank","noreferrer")},this.connect=async()=>{const e=await m("paraview"),t=await a.InputDialog.getItem({title:"Select ParaView Server to connect to",items:e.map((e=>e.name)),current:0,editable:!1});if(!t.value||0===t.value.length)return;console.log(`Connecting instance '${this.props.name}' to Server '${t.value}'`);const n=await m(l.URLExt.join("trame","connect"),{method:"POST",body:JSON.stringify({appName:this.props.appName,instanceName:this.props.name,serverName:t.value})});this.setState({connection:[t.value,n.url]})},this.disconnect=async()=>{await m(l.URLExt.join("trame","disconnect"),{method:"POST",body:JSON.stringify({appName:this.props.appName,instanceName:this.props.name})}),this.setState({connection:void 0})},this.state={connection:void 0}}render(){const e=i.createElement(i.Fragment,null,i.createElement("b",null,this.props.name)),t=this.state.connection?i.createElement("div",{style:{marginTop:"10px"}},"Connected to ParaView Server ",i.createElement("span",{style:{fontWeight:"bold"}},this.state.connection[0])," on ",i.createElement("span",{style:{fontWeight:"bold"}},this.state.connection[1],":11111"),i.createElement("button",{className:"disconnect-button",onClick:this.disconnect},"Disconnect")):i.createElement("button",{className:"connect-button",onClick:this.connect},"Connect");return i.createElement("li",null,i.createElement("div",{style:{flexGrow:1}},i.createElement(r(),{trigger:e},i.createElement(g,{label:"Data Directory",value:`${this.props.dataDirectory}`}),i.createElement(g,{label:"Port",value:`${this.props.port}`}),i.createElement(g,{label:"Base URL",value:`${this.props.base_url}`}),i.createElement(g,{label:"Log File",value:this.props.log}),t)),i.createElement("button",{className:"open-button",onClick:this.openInstance},"Open"))}}class y extends i.Component{constructor(e){super(e),this.launchInstance=async()=>{const e=await(0,a.showDialog)({title:"Launch a new ParaView instance",body:new v(this.props.displayName,this.state.instances.length)});console.log("Launching trame app:",e.value);const t=await m("trame",{method:"POST",body:JSON.stringify({appName:this.props.name,...e.value})});this.setState({instances:[...this.state.instances,t]}),await(0,a.showErrorMessage)("Success",`Launched new trame instance on port ${t.port}`)},this.state={instances:this.props.instances}}render(){const e=i.createElement("div",null,i.createElement("b",null," ",this.props.displayName," "),i.createElement("br",null),"Running Instances: ",this.state.instances.length);return i.createElement(i.Fragment,null,i.createElement(r(),{trigger:e},i.createElement(g,{label:"Path",value:this.props.path}),i.createElement("div",{style:{height:"40px",margin:"10px 0 0 0"}},i.createElement("button",{className:"launch-button",onClick:this.launchInstance},"Launch")),i.createElement("div",{className:"instance-list"},this.state.instances.map((e=>i.createElement(w,Object.assign({},e,{appName:this.props.name})))))))}}class f extends i.Component{constructor(){super({}),this.fetchData=async()=>{this.setState({instances:await m("trame")})},this.state={instances:[]}}async componentDidMount(){await this.fetchData()}render(){return i.createElement(i.Fragment,null,i.createElement("h3",null,"trame Apps:"),i.createElement("div",{id:"trame-instances",className:"instance-list"},this.state.instances.map((e=>i.createElement(y,Object.assign({},e))))))}}const N={id:"juviz-extension",autoStart:!0,activate:e=>{const t=new s.SplitPanel;t.orientation="vertical",t.id="juviz-sidepanel",t.title.iconClass="jp-ExtensionIcon jp-SideBar-tabIcon",t.title.caption="JuWiz";const n=a.ReactWidget.create(o().createElement(C,null));n.addClass("juviz-sidepanel-segment"),t.addWidget(n);const i=a.ReactWidget.create(o().createElement(f,null));i.addClass("juviz-sidepanel-segment"),t.addWidget(i),e.shell.add(t,"left")}}}}]);