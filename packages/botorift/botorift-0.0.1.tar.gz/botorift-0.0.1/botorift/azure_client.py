# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_azure_client.ipynb.

# %% auto 0
__all__ = ['AzureClient']

# %% ../nbs/00_azure_client.ipynb 3
import os
from azure.storage.blob import BlobServiceClient
from typing import Any, Dict, Optional, Union
from azure.core.credentials import AzureNamedKeyCredential, AzureSasCredential, TokenCredential
import pandas as pd
from io import BytesIO
from dotenv import load_dotenv

# %% ../nbs/00_azure_client.ipynb 4
class AzureClient(BlobServiceClient):
    def __init__(self, account_url: Optional[str] = None, credential: Optional[Union[str, Dict[str, str],AzureNamedKeyCredential,AzureSasCredential,TokenCredential]] = None,cred_from_env: bool = True,env_path:str='.env', **kwargs: Any) -> None:
        if cred_from_env:
            load_dotenv(env_path)
            credential = os.environ['SAS_TOKEN']
            account_url = os.environ['ACCOUNT_URL'] 
        super().__init__(account_url, credential, **kwargs)

    def read_blob(self,container_name,file_path):
        return self.get_blob_client(container=container_name, blob=file_path).download_blob().readall()

    def read_csv(self,container_name,file_path,**kwargs):
        blob = BytesIO(self.read_blob(container_name=container_name,file_path=file_path))
        return pd.read_csv(blob,**kwargs)
    
    def read_parquet(self,container_name,file_path,**kwargs):
        blob = BytesIO(self.read_blob(container_name=container_name,file_path=file_path))
        return pd.read_parquet(blob,**kwargs)
    
    def read_excel(self,container_name,file_path,**kwargs):
        blob = BytesIO(self.read_blob(container_name=container_name,file_path=file_path))
        return pd.read_excel(blob,**kwargs)
    
    def write_parquet(self,dataframe,container_name,file_path,overwrite:bool=True,**kwargs):
        container_client = self.get_container_client(container_name)
        blob_client = container_client.get_blob_client(file_path)
        blob_client.upload_blob(dataframe.to_parquet(**kwargs), overwrite=overwrite)

    def write_csv(self,dataframe,container_name,file_path,overwrite:bool=True,**kwargs):
        container_client = self.get_container_client(container_name)
        blob_client = container_client.get_blob_client(file_path)
        blob_client.upload_blob(dataframe.to_csv(**kwargs), overwrite=overwrite)
