# https://taskfile.dev/
version: '3'

vars:
    PROJECT_NAME: geomancy
    SPHINX_BUILD: .venv/bin/sphinx-build  # run from within virtualenv
    SPHINX_OPTS: ""
    SPHINX_SOURCE_DIR: .
    SPHINX_BUILD_DIR: _build

tasks:

  create-env:
    desc: Create a local virtual environment for development
    internal: true
    cmds:
      - python3 -m venv .venv
    generates:
      - .venv

  install:
    desc: Install the package in development (edit) mode
    cmds:
      - python -m pip install -e ".[dev,docs]"
    sources:
      - pyproject.toml

  setup:
    desc: Setup the development environment
    cmds:
      - task: create-env
      - task: install

  upload:
    desc: Upload the package to PyPI
    cmds:
      - python -m build
      - twine upload dist/*

  docs:help:
      desc: Print the docs building help message
      dir: docs
      cmds:
          - "../{{.SPHINX_BUILD}} -M help {{.SPHINX_SOURCE_DIR}} {{.SPHINX_BUILD_DIR}} {{.SPHINX_OPTS}}"

  docs:build:
      desc: Build the docs
      dir: docs
      cmds:
          - "../{{.SPHINX_BUILD}} -M html {{.SPHINX_SOURCE_DIR}} {{.SPHINX_BUILD_DIR}} -E -a {{.SPHINX_OPTS}}"
      sources:
          - "**/*.md"
          - "**/*.rst"
          - "_static/**"

  docs:clean:
      desc: Clean the docs build directories
      dir: docs
      cmds:
          - "../{{.SPHINX_BUILD}} -M clean {{.SPHINX_SOURCE_DIR}} {{.SPHINX_BUILD_DIR}} {{.SPHINX_OPTS}}"

  towncrier:cmds:
      desc: A refresher of towncrier commands
      silent: true
      cmds:
          - echo "towncrier create -c {msg} {issue}.{type}.md"
          - echo "towncrier build [--draft] --name {{.PROJECT_NAME}}"

# towncrier create -c "Implement towncrier" 8.docs.md
